<?xml version="1.0" encoding="UTF-8" ?>
<!--file ICW_TLE987x.xml                                                            -->
<!--brief Infineon MOTIX(TM) MCU Modules configuration                              -->
<!--                                                                                -->
<!--Copyright (c) Infineon Technologies AG                                          -->
<!--All rights reserved.                                                            -->
<!--                                                                                -->
<!--Redistribution and use in source and binary forms, with or without modification,-->
<!--are permitted provided that the following conditions are met:                   -->
<!--                                                                                -->
<!--  Redistributions of source code must retain the above copyright notice, this   -->
<!--  list of conditions and the following disclaimer.                              -->
<!--                                                                                -->
<!--  Redistributions in binary form must reproduce the above copyright notice,     -->
<!--  this list of conditions and the following disclaimer in the documentation     -->
<!--  and/or other materials provided with the distribution.                        -->
<!--                                                                                -->
<!--  Neither the name of the copyright holders nor the names of its contributors   -->
<!--  may be used to endorse or promote products derived from this software without -->
<!--  specific prior written permission.                                            -->
<!--                                                                                -->
<!--THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND -->
<!--ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED   -->
<!--WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE          -->
<!--DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE    -->
<!--FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL      -->
<!--DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR      -->
<!--SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER      -->
<!--CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,   -->
<!--OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE   -->
<!--OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.            -->
<!--                                                                                -->
<!--********************************************************************************-->
<!--                Infineon MOTIX(TM) MCU Module configuration file                -->
<!--********************************************************************************-->
<!--                                                                                -->
<!--********************************************************************************-->
<!--                        Author(s) Identity                                      -->
<!--********************************************************************************-->
<!--   Initials     Name                                                            -->
<!--   KC           Kay Claussen                                                    -->
<!--   DM           Daniel Mysliwitz                                                -->
<!--   JO           Julia Ott                                                       -->
<!--   BG           Blandine Guillot                                                -->
<!--********************************************************************************-->
<!--                                                                                -->
<!--********************************************************************************-->
<!--                       Revision Control History                                 -->
<!--********************************************************************************-->
<!--                                                                                -->
<!-- V2.0.0: 2017-10-13, KC:   Initial version                                      -->
<!-- V2.0.1: 2017-11-07, KC:   Removed lock for pmu sleep mode                      -->
<!--                           T21: External Control Input corrected                -->
<!--                           MON: Interrupt lockon problem fixed                  -->
<!--                           BRDV: Diagnostic Settings corrected                  -->
<!-- V2.0.2: 2019-01-08, DM:   CCU6.ISPOSx: BEMF selection corrected                -->
<!--                           BG_CLK added                                         -->
<!--                           CCU6 channel passive state default set to fit to     -->
<!--                           bridge driver (CC6x passive state before compare,    -->
<!--                           COUT6x passive state after compare)                  -->
<!-- V2.0.3: 2019-02-21, DM:   DMA base address removed, DMA always placed to       -->
<!--                           upper most address                                   -->
<!-- V2.0.4: 2019-04-08, DM:   ADC1 Clock Divider label updated                     -->
<!--                           OSC_CON register build corrected                     -->
<!-- V2.0.5: 2019-09-16, BG:   Corrected ADC2 Channel 7 lower trigger level,        -->
<!--                           Ch2 UPTH, and Ch3 LOTH according to User Manual      -->
<!-- V2.0.6: 2019-10-17, BG:   EP-262: Corrected Charge Pump Diagnosis description  -->
<!--                           according to UM rev1.4                               -->
<!-- V2.0.7: 2020-02-04, BG:   EP-313: Corrected V_BG value for ADC2 calculation    -->
<!-- V2.0.8: 2020-02-04, BG:   EP-275: Corrected deadtime calculation               -->
<!-- V2.0.9: 2020-02-05, BG:   EP-293: Updated configuration of VDH attenuator      -->
<!--                           output impedance                                     -->
<!-- V2.1.0: 2020-02-04, JO:   EP-313: Corrected V_BG attenuator for ADC2           -->
<!--                           calculation                                          -->
<!-- V2.1.1: 2020-02-05, BG:   EP-291: Removed T5INB, unavailable for TLE987x       -->
<!-- V2.1.2: 2020-02-14, BG:   EP-404: Updated disclaimer                           -->
<!-- V2.1.3: 2020-02-17, BG:   EP-380: Added bits LSx/HSx_OC_DIS in Config Wizard   -->
<!-- V2.1.4: 2020-02-17, JO:   Step for version compatibility                       -->
<!-- V2.1.5: 2020-02-17, JO:   EP-345: Lock U_TX_CONDIS to 1 if TXD1 UART sending   -->
<!--                           is enabled, set LIN Trx Mode accordingly             -->
<!-- V2.1.6: 2020-07-13, BG:   EP-403: Adjusted automatically the fVCO range        -->
<!--                           according to the settings                            -->
<!--                           Removed the override of the internal osc. frequency  -->
<!-- V2.1.7: 2020-07-16, JO:   EP-403: Added MessageBox in case of invalid PLL      -->
<!--                           settings (fSYS larger than 40MHz)                    -->
<!-- V2.1.8: 2020-07-20, BG:   EP-262: Corrected wrong description for CP diagnosis -->
<!-- V2.1.9: 2020-09-01, JO:   EP-456: Corrected selection of bit                   -->
<!--                           ADC2.CTRL2.TSENSE_SD_SEL (values switched)           -->
<!-- V2.2.0: 2021-03-05, JO:   EP-729: Removed unnecessary lockons in baudrate      -->
<!--                           selection of UART and SSC                            -->
<!-- V2.2.1: 2021-04-27, BG:   EP-720: Corrected formulas for Upper Threshold value -->
<!--                           and Prewarning Threshold value for Ch9 in ADC2       -->
<!-- V2.2.2: 2021-05-11, JO:   EP-703: Updated calculation of effective currents in -->
<!--                           BDRV, resorted Gate Charge/Discharge                 -->
<!--                           and Prewarning Threshold value for Ch9 in ADC2       -->
<!-- V2.2.3: 2021-06-28, BG:   EP-780: Updated occurrences for cyclic sense to be   -->
<!--                           used only in stop mode                               -->
<!-- V2.2.4: 2021-08-08, BG:   EP-260: Added option to select 20MHz for SSCx        -->
<!--                           Added driver mode selection in PORT which is needed  -->
<!--                           for 20MHz baudrate for SSC                           -->
<!-- V2.2.5: 2021-08-09, BG:   EP-895: Corrected wrong define and header for NVM    -->
<!--                           mapping error                                        -->
<!-- V2.2.6: 2022-01-25, JO:   EP-1014: Corrected DMA Trigger Sel for SSCx Transmit -->
<!-- V2.2.7: 2022-02-28, JO:   EP-936: Updated copyright and branding               -->
<!--********************************************************************************-->
<ifxmlcfg version="2.0.3">
  <checksum>f9fef558f57f9172ae436338c1a97ceeb4a0f1c393904e2127f56266415fa1f9</checksum>
  <version label="V2.2.7"/>
  <svd file="TLE987x.svd"/>
  <migration file="TLE987x.mig"/>
  <tabcontainer label="TLE987x Peripherals">
    <treecontainer headerlabels="Structure;Settings;" label="BSL" desc="Bootstrap Loader" columnwidths="300;250">
      <header file="bsl_defines.h">
        <checkbox label="NAC/NAD Configuration" define="BSL.NAC_NAD_EN" svd="0" uielement="branch" default="1">
          <combo label="BSL Interface Select" define="BSL._NAC_[7:6]" svd="0" default="label=Fast LIN">
            <item label="!! Normal LIN - will be discontinued with BF-Step - !!"/>
            <item label="Fast LIN"/>
            <item label="UART"/>
          </combo>
          <combo label="BSL Active Time (NAC)" define="BSL._NAC_[5:0]" svd="0" default="label=40 ms">
            <item label="BSL deactivated" value="1"/>
            <item label="5 ms" value="2"/>
            <item label="10 ms" value="3"/>
            <item label="15 ms" value="4"/>
            <item label="20 ms" value="5"/>
            <item label="25 ms" value="6"/>
            <item label="30 ms" value="7"/>
            <item label="35 ms" value="8"/>
            <item label="40 ms" value="9"/>
            <item label="45 ms" value="10"/>
            <item label="50 ms" value="11"/>
            <item label="55 ms" value="12"/>
            <item label="infinite" value="15"/>
          </combo>
          <spinbox label="NAD value (Normal LIN only)" define="BSL._NAD_[7:0]" svd="0" range="1;0xFF" default="0x7F"/>
          <math visible="false" define="BSL.NAD_NAC[31:0]" svd="0" format="%04X" formula="(BSL._NAD_[7:0].^0xFF)*0x1000000+BSL._NAD_[7:0]*0x10000+(BSL._NAC_[7:6].^0x3)*0x100*0x40+(BSL._NAC_[5:0].^0x3F)*0x100+BSL._NAC_[7:6]*0x40+BSL._NAC_[5:0]"/>
        </checkbox>
      </header>
    </treecontainer>
    <treecontainer headerlabels="Structure;Settings;" label="SCU" desc="System Control Unit" columnwidths="300;250">
      <header file="scu_defines.h">
        <math label="fSYS" define="SCU.PLL_fPLL" svd="0" unit="MHz" formula="(SCU.XTAL_EN&lt;1?(5:SCU.XTAL_FREQ))*SCU.PLL_CON.NDIV.label/SCU.CMCON1.K2DIV.label">
          <action event="changed" cmd="setDef" data="check_fsys.run=1"/>
        </math>
        <timer visible="false" define="check_fsys" interval="0" singleShot="1" run="0">
          <action event="changed" cond="SCU.PLL_fPLL&gt;40" cmd="runScript" data="MessageBox(fSYS can not be more than 40MHz! Please change PLL settings.)"/>
        </timer>
        <branch label="Clock Configuration">
          <math visible="false" define="SCU.OSC_CON[7:0]" format="%04X" header="scu_defines.h" formula="SCU.XTAL_EN&lt;1?0xB0:0x81"/>
          <radio define="SCU.AUTO_FSYS_SEL" svd="0">
            <radiobutton label="Automatic Clock Configuration" lockon="SCU.XTAL_EN=0" uielement="branch">
              <combo label="fSYS" define="SCU.AUTO_FSYS[31:0]" svd="0" default="24000000">
                <item label="40 MHz" value="40000000" lockon="SCU.PLL_CON.NDIV.label=16;SCU.CMCON1.K2DIV.label=2;SCU.APCLK1.APCLK1FAC.label=fSYS / 2;SCU.APCLK2.APCLK2FAC=19;SCU.CMCON1.VCOSEL.label=48-112 MHz;SCU.APCLK_CTRL1.BGCLK_SEL.label=fSYS;SCU.APCLK_CTRL1.BGCLK_DIV.label=fSYS / 2"/>
                <item label="33.3 MHz" value="33333333" lockon="SCU.PLL_CON.NDIV.label=20;SCU.CMCON1.K2DIV.label=3;SCU.APCLK1.APCLK1FAC.label=fSYS / 2;SCU.APCLK2.APCLK2FAC=15;SCU.CMCON1.VCOSEL.label=48-112 MHz;SCU.APCLK_CTRL1.BGCLK_SEL.label=fSYS;SCU.APCLK_CTRL1.BGCLK_DIV.label=fSYS / 2"/>
                <item label="24 MHz" value="24000000" lockon="SCU.PLL_CON.NDIV.label=24;SCU.CMCON1.K2DIV.label=5;SCU.APCLK1.APCLK1FAC.label=fSYS;SCU.APCLK2.APCLK2FAC=11;SCU.CMCON1.VCOSEL.label=96-160 MHz;SCU.APCLK_CTRL1.BGCLK_SEL.label=fSYS;SCU.APCLK_CTRL1.BGCLK_DIV.label=fSYS"/>
                <item label="20 MHz" value="20000000" lockon="SCU.PLL_CON.NDIV.label=16;SCU.CMCON1.K2DIV.label=4;SCU.APCLK1.APCLK1FAC.label=fSYS;SCU.APCLK2.APCLK2FAC=9;SCU.CMCON1.VCOSEL.label=48-112 MHz;SCU.APCLK_CTRL1.BGCLK_SEL.label=fSYS;SCU.APCLK_CTRL1.BGCLK_DIV.label=fSYS"/>
                <item label="12 MHz" value="12000000" lockon="SCU.PLL_CON.NDIV.label=12;SCU.CMCON1.K2DIV.label=5;SCU.APCLK1.APCLK1FAC.label=fSYS;SCU.APCLK2.APCLK2FAC=5;SCU.CMCON1.VCOSEL.label=48-112 MHz;SCU.APCLK_CTRL1.BGCLK_SEL.label=fSYS;SCU.APCLK_CTRL1.BGCLK_DIV.label=fSYS"/>
                <item label="10 MHz" value="10000000" lockon="SCU.PLL_CON.NDIV.label=8;SCU.CMCON1.K2DIV.label=4;SCU.APCLK1.APCLK1FAC.label=fSYS;SCU.APCLK2.APCLK2FAC=4;SCU.CMCON1.VCOSEL.label=48-112 MHz;SCU.APCLK_CTRL1.BGCLK_SEL.label=fSYS;SCU.APCLK_CTRL1.BGCLK_DIV.label=fSYS"/>
              </combo>
            </radiobutton>
            <radiobutton label="Manual Clock Configuration" uielement="branch">
              <checkbox define="SCU.XTAL_EN" svd="0" label="Enable external XTAL" uielement="branch">
                <doublespinbox define="SCU.XTAL_FREQ" svd="0" label="XTAL Frequency" default="5.00" suffix=" MHz" range="5;25"/>
              </checkbox>
              <branch label="PLL Setting">
                <combo label="N-Multiplier" define="SCU.PLL_CON.NDIV" default="label=16" setDef="VCO_range.run=1">
                  <item label="8" override="value1"/>
                  <item label="9" override="value2"/>
                  <item label="10" override="value3"/>
                  <item label="12" override="value4"/>
                  <item label="14" override="value5"/>
                  <item label="15" override="value6"/>
                  <item label="16" override="value7"/>
                  <item label="18" override="value8"/>
                  <item label="20" override="value9"/>
                  <item label="21" override="value10"/>
                  <item label="22" override="value11"/>
                  <item label="24" override="value12"/>
                  <item label="25" override="value13"/>
                  <item label="26" override="value14"/>
                  <item label="27" override="value15"/>
                  <item label="28" override="value16"/>
                </combo>
                <math visible="false" define="fVCO" svd="0" formula="SCU.PLL_CON.NDIV.label*(SCU.XTAL_EN&lt;1?(5:SCU.XTAL_FREQ))"/>
                <timer visible="false" define="VCO_range" interval="100" singleShot="0" run="0">
                  <action cond="fVCO&lt;96" event="changed" cmd="setDef" data="SCU.CMCON1.VCOSEL=0"/>
                  <action cond="fVCO&gt;112" event="changed" cmd="setDef" data="SCU.CMCON1.VCOSEL=1"/>
                </timer>
                <combo label="K2-Divider" define="SCU.CMCON1.K2DIV" default="label=2" setDef="VCO_range.run=1">
                  <item label="2" override="value1"/>
                  <item label="3" override="value2"/>
                  <item label="4" override="value3"/>
                  <item label="5" override="value4"/>
                </combo>
                <combo label="VCO Range" define="SCU.CMCON1.VCOSEL">
                  <item label="48-112 MHz" override="value1"/>
                  <item label="96-160 MHz" override="value2"/>
                </combo>
                <math label="fSYS" define="SCU.FSYS" svd="0" unit="Hz" formula="(SCU.XTAL_EN&lt;1?(5:SCU.XTAL_FREQ))*1000000*SCU.PLL_CON.NDIV.label/SCU.CMCON1.K2DIV.label"/>
              </branch>
              <branch label="Analog Clock Configuration">
                <combo label="MI_CLK Divider" define="SCU.APCLK1.APCLK1FAC">
                  <item label="fSYS" override="value1"/>
                  <item label="fSYS / 2" override="value2"/>
                  <item label="fSYS / 3" override="value3"/>
                  <item label="fSYS / 4" override="value4"/>
                </combo>
                <math label="MI_CLK (should be ~24 MHz)" unit="MHz" define="SCU.APCLK_MI_CLK" svd="0" formula="SCU.PLL_fPLL/(SCU.APCLK1.APCLK1FAC+1)"/>
                <spinbox label="Filter Clock Divider" range="0;31" define="SCU.APCLK2.APCLK2FAC" default="9"/>
                <math label="Filter Clock (~2 MHz)" unit="MHz" define="SCU.APCLK_FILT_CLK" svd="0" formula="SCU.PLL_fPLL/(SCU.APCLK2.APCLK2FAC+1)"/>
                <combo label="BG_CLK (Bandgap Clock) source select" define="SCU.APCLK_CTRL1.BGCLK_SEL" header="scu_defines.h" default="label=fSYS">
                  <item label="LP_CLK" override="value1"/>
                  <item label="fSYS" override="value2"/>
                </combo>
                <combo label="BG_CLK (Bandgap Clock)" define="SCU.APCLK_CTRL1.BGCLK_DIV" header="scu_defines.h" default="label=fSYS">
                  <item label="fSYS" override="value2"/>
                  <item label="fSYS / 2" override="value1"/>
                </combo>
                <math label="BG_CLK (should be ~24MHz)" svd="0" unit="MHz" define="SCU.APCLK_BG_CLK" header="scu_defines.h" formula="SCU.APCLK_CTRL1.BGCLK_SEL&lt;1?18:SCU.PLL_fPLL/((SCU.APCLK_CTRL1.BGCLK_DIV.^1)+1)"/>
              </branch>
            </radiobutton>
          </radio>
        </branch>
        <checkbox define="SCU.COCON.EN" label="Clock out enable" uielement="branch">
          <radio define="SCU.COCON.COUTS1" default="1">
            <radiobutton label="Output f_CCLK"/>
            <radiobutton label="Select further" uielement="branch">
              <radio define="SCU.COCON.COUTS0" default="1">
                <radiobutton label="Output f_OSC"/>
                <radiobutton label="Output fSYS" uielement="branch">
                  <combo define="SCU.COCON.COREL" label="Clock Out Divider [fSYS/n]" default="label=40">
                    <item label="1" override="value1"/>
                    <item label="2" override="value2"/>
                    <item label="3" override="value3"/>
                    <item label="4" override="value4"/>
                    <item label="6" override="value5"/>
                    <item label="8" override="value6"/>
                    <item label="10" override="value7"/>
                    <item label="12" override="value8"/>
                    <item label="14" override="value9"/>
                    <item label="16" override="value10"/>
                    <item label="18" override="value11"/>
                    <item label="20" override="value12"/>
                    <item label="24" override="value13"/>
                    <item label="32" override="value14"/>
                    <item label="36" override="value15"/>
                    <item label="40" override="value16"/>
                  </combo>
                  <checkbox label="Ensure 50% duty cycle" define="SCU.COCON.TLEN" default="1"/>
                </radiobutton>
              </radio>
            </radiobutton>  
          </radio>  
          <combo define="SCU.PINSEL" svd="0" label="Clock Out Pin Select">
            <item label="P0.4" lockon="PORT.P0_DIR.P4.label=Output;PORT.P0_4_ALT[1:0].label=CLKOUT_0"/>
            <item label="P1.4" lockon="PORT.P1_DIR.P4.label=Output;PORT.P1_4_ALT[1:0].label=CLKOUT_1"/>
          </combo>
          <math label="Clock Out Frequency at selected GPIO" unit="MHz" define="SCU.CKOUT_FREQ" svd="0" formula="SCU.COCON.COUTS1&lt;1?SCU.PLL_fPLL:(SCU.COCON.COUTS0&lt;1?(5:(SCU.PLL_fPLL/(SCU.COCON.COREL.label*(SCU.COCON.TLEN&lt;1?1:2)))))"/>
        </checkbox>
        <branch label="WDT1 (mandatory watchdog)">
          <spinbox label="Watchdog Period" suffix=" [ms]" define="SCUPM.WDT1_PERIOD_EDIT" svd="0" default="1008" range="16;1008"/>
          <math label="Watchdog Period effectiv" unit="ms" define="SCUPM.WDT1_PERIOD" svd="0" formula="trunc(SCUPM.WDT1_PERIOD_EDIT/16)*16"/>
          <math visible="false" define="SCUPM.WDT1_TRIG.WDP_SEL" formula="SCUPM.WDT1_PERIOD/16"/>
          <math visible="false" define="SCUPM.WDT1_TRIGGER" svd="0" formula="trunc(SCUPM.WDT1_PERIOD*0.694)"/>
        </branch>
        <checkbox define="SCU.WDTCON.WDTEN" label="WDT enable (optional watchdog)" uielement="branch">
          <combo define="SCU.WDTCON.WDTIN" label="Clock Select">
            <item label="fPCLK / 2" override="value1"/>
            <item label="fPCLK / 128" override="value2"/>
          </combo>
          <branch label="Reload Value">
            <radio define="SCU.WDT_TIME_SEL" svd="0">
              <radiobutton label="...as clock ticks" uielement="branch">
                <spinbox label="Value" suffix=" ticks" define="SCU.WDT_TIME_TICK[7:0]" svd="0" default="1"/>
              </radiobutton>
              <radiobutton label="...as time [us]" uielement="branch">
                <doublespinbox label="Time" suffix=" us" define="SCU.WDT_TIME_TIME" svd="0" default="1.00"/>
              </radiobutton>
            </radio>
          </branch>
          <math label="WDT Period" unit="ticks" define="SCU.WDTREL.WDTREL" formula="SCU.WDT_TIME_SEL?floor(SCU.WDT_TIME_TIME*(SCU.PLL_fPLL/(SCU.WDTCON.WDTIN?128:2))):(SCU.WDT_TIME_TICK[7:0])"/>
          <checkbox define="SCU.WDTCON.WINBEN" label="Window Boundary Enable" header="scu_defines.h" uielement="branch">
            <spinbox define="SCU.WDTWINB" suffix=" ticks" label="Window Boundary Count" header="scu_defines.h" default="128" range="0;255"/>
          </checkbox>
        </checkbox>
        <branch label="NVM Protection">
          <checkbox label="Code Flash Write Protection" define="SCU.CFLASH_WPROT" svd="0" uielement="branch" default="1">
            <horizontalcontainer label="Password [16bit]">
              <hexspinbox define="SCU.CFLASH_WPROT_PW" svd="0" range="0;0xffff"/>
              <text label=" dec:"/>
              <math formula="SCU.CFLASH_WPROT_PW"/>
            </horizontalcontainer>
          </checkbox>
          <checkbox label="Data Flash Write Protection" define="SCU.DFLASH_WPROT" svd="0" uielement="branch">
            <horizontalcontainer label="Password [16bit]">
              <hexspinbox define="SCU.DFLASH_WPROT_PW" svd="0" range="0;0xffff"/>
              <text label=" dec:"/>
              <math formula="SCU.DFLASH_WPROT_PW"/>
            </horizontalcontainer>
          </checkbox>
        </branch>
      </header>
    </treecontainer>
    <treecontainer headerlabels="Structure;Settings;" label="PMU" desc="Power Management Unit" columnwidths="300;250">
      <header file="pmu_defines.h">
        <branch label="VDDEXT">
          <checkbox label="Turned on" define="PMU.VDDEXT_CTRL.ENABLE"/>
          <checkbox label="Cyclic Sense enable (Stop Mode only)" define="PMU.VDDEXT_CTRL.CYC_EN"/>
          <checkbox label="Fail Interrupt" define="PMU.VDDEXT_CTRL.FAIL_EN" default="0" uielement="branch">
            <checkbox label="Short" define="PMU.VDDEXT_SHORT_INT_EN" svd="0" header="isr_defines.h" lockon="SCU.NMICON.NMISUP=1" uielement="branch">
              <edit label="Call Back" define="PMU.VDDEXT_SHORT_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
            <checkbox label="Over Voltage" define="PMU.VDDEXT_OV_INT_EN" svd="0" header="isr_defines.h" lockon="SCU.NMICON.NMISUP=1" uielement="branch">
              <edit label="Call Back" define="PMU.VDDEXT_OV_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
            <checkbox label="Over Load" define="PMU.VDDEXT_OL_INT_EN" svd="0" header="isr_defines.h" lockon="SCU.NMICON.NMISUP=1" uielement="branch">
              <edit label="Call Back" define="PMU.VDDEXT_OL_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
          </checkbox>
          <checkbox label="disable shutdown in over load condition" define="PMU.CNF_PMU_SETTINGS.EN_VDDEXT_OC_OFF_N"/>
        </branch>
        <branch label="Wake Up Sources">
          <checkbox label="Cyclic Wake enable" define="PMU.CNF_PMU_SETTINGS.CYC_WAKE_EN" uielement="branch">
            <spinbox label="Wake up after" suffix=" ms" define="PMU.CYC_WAKE_TIME" svd="0" default="2" range="2;2048"/>
            <math label="Wake up Exp" define="PMU.CNF_CYC_WAKE.E01" formula="abs(PMU.CYC_WAKE_TIME/2)&gt;=64?3:abs(PMU.CYC_WAKE_TIME/2)&gt;=16?2:abs(PMU.CYC_WAKE_TIME/2)&gt;=4?1:0"/>
            <math label="Wake up Man" define="PMU.CNF_CYC_WAKE.M03" formula="trunc((PMU.CYC_WAKE_TIME/(4^PMU.CNF_CYC_WAKE.E01))/2)-1"/>
            <math label="Wake up effective Time (4^EXP*(MAN+1)*2ms)" unit="ms" define="PMU.CYC_WAKE_EFF_TIME" svd="0" formula="4^PMU.CNF_CYC_WAKE.E01*(PMU.CNF_CYC_WAKE.M03+1)*2"/>
          </checkbox>
          <checkbox label="Cyclic Sense enable (Stop Mode only)" define="PMU.CNF_PMU_SETTINGS.CYC_SENSE_EN" uielement="branch">
            <spinbox label="Wake up after" suffix=" ms" define="PMU.CYC_SENSE_SLP_TIME" svd="0" default="2" range="2;2048"/>
            <math label="Cyclic Sense Exp" define="PMU.CNF_CYC_SENSE.E01" formula="abs(PMU.CYC_SENSE_SLP_TIME/2)&gt;=64?3:abs(PMU.CYC_SENSE_SLP_TIME/2)&gt;=16?2:abs(PMU.CYC_SENSE_SLP_TIME/2)&gt;=4?1:0"/>
            <math label="Cyclic Sense Man" define="PMU.CNF_CYC_SENSE.M03" formula="trunc((PMU.CYC_SENSE_SLP_TIME/(4^PMU.CNF_CYC_SENSE.E01))/2)-1"/>
            <math label="Cyclic Sense effective Time (4^EXP*(MAN+1)*2ms)" unit="ms" define="PMU.CYC_SENSE_EFF_SLP_TIME" svd="0" formula="4^PMU.CNF_CYC_SENSE.E01*(PMU.CNF_CYC_SENSE.M03+1)*2"/>
            <spinbox label="Sense Time" suffix=" us" define="PMU.CYC_SENSE_ACT_TIME" svd="0" default="10" range="10;160"/>
            <math label="Sense Time Man" define="PMU.CNF_CYC_SAMPLE_DEL.M03" formula="trunc(PMU.CYC_SENSE_ACT_TIME/10)-1"/>
            <math label="Sense effective Time ((MAN+1)*10us)" unit="us" define="PMU.SENSE_EFF_SLP_TIME" svd="0" formula="(PMU.CNF_CYC_SAMPLE_DEL.M03+1)*10"/>
          </checkbox>
          <checkbox label="LIN wake up" define="PMU.LIN_WAKE_EN.LIN_EN" uielement="branch">
            <combo label="Wake up Filter" define="PMU.CNF_WAKE_FILTER.CNF_LIN_FT">
              <item label="30 us" override="30_us"/>
              <item label="50 us" override="50_us"/>
            </combo>
          </checkbox>
          <checkbox label="MON wake up" define="PMU.MON_WAKE" svd="0" lockon="PMU.MON_CNF.EN=1" default="1" uielement="branch">
            <checkbox label="wake on rising edge" define="PMU.MON_WAKE_RISE" svd="0" lockon="PMU.MON_CNF.RISE=1" default="1"/>
            <checkbox label="wake on falling edge" define="PMU.MON_WAKE_FALL" svd="0" lockon="PMU.MON_CNF.FALL=1" default="1"/>
            <combo label="Wake up Filter" define="PMU.CNF_WAKE_FILTER.CNF_MON_FT">
              <item label="20 us" override="20_us"/>
              <item label="40 us" override="40_us"/>
            </combo>
          </checkbox>
          <branch label="GPIO wake up">
            <checkbox label="PORT0 wake up" define="PMU.PORT0_WAKE" svd="0" uielement="branch">
              <branch label="Pin0">
                <checkbox label="rising edge" define="PMU.WAKE_CONF_GPIO0_RISE.GPIO0_RI_0"/>
                <checkbox label="falling edge" define="PMU.WAKE_CONF_GPIO0_FALL.GPIO0_FA_0"/>
                <checkbox label="cyclic sense (Stop Mode only)" define="PMU.WAKE_CONF_GPIO0_CYC.GPIO0_CYC_0"/>
              </branch>
              <branch label="Pin1">
                <checkbox label="rising edge" define="PMU.WAKE_CONF_GPIO0_RISE.GPIO0_RI_1"/>
                <checkbox label="falling edge" define="PMU.WAKE_CONF_GPIO0_FALL.GPIO0_FA_1"/>
                <checkbox label="cyclic sense (Stop Mode only)" define="PMU.WAKE_CONF_GPIO0_CYC.GPIO0_CYC_1"/>
              </branch>
              <branch label="Pin2">
                <checkbox label="rising edge" define="PMU.WAKE_CONF_GPIO0_RISE.GPIO0_RI_2"/>
                <checkbox label="falling edge" define="PMU.WAKE_CONF_GPIO0_FALL.GPIO0_FA_2"/>
                <checkbox label="cyclic sense (Stop Mode only)" define="PMU.WAKE_CONF_GPIO0_CYC.GPIO0_CYC_2"/>
              </branch>
              <branch label="Pin3">
                <checkbox label="rising edge" define="PMU.WAKE_CONF_GPIO0_RISE.GPIO0_RI_3"/>
                <checkbox label="falling edge" define="PMU.WAKE_CONF_GPIO0_FALL.GPIO0_FA_3"/>
                <checkbox label="cyclic sense (Stop Mode only)" define="PMU.WAKE_CONF_GPIO0_CYC.GPIO0_CYC_3"/>
              </branch>
              <branch label="Pin4">
                <checkbox label="rising edge" define="PMU.WAKE_CONF_GPIO0_RISE.GPIO0_RI_4"/>
                <checkbox label="falling edge" define="PMU.WAKE_CONF_GPIO0_FALL.GPIO0_FA_4"/>
                <checkbox label="cyclic sense (Stop Mode only)" define="PMU.WAKE_CONF_GPIO0_CYC.GPIO0_CYC_4"/>
              </branch>
            </checkbox>
            <checkbox label="PORT1 wake up" define="PMU.PORT1_WAKE" svd="0" uielement="branch">
              <branch label="Pin0">
                <checkbox label="rising edge" define="PMU.WAKE_CONF_GPIO1_RISE.GPIO1_RI_0"/>
                <checkbox label="falling edge" define="PMU.WAKE_CONF_GPIO1_FALL.GPIO1_FA_0"/>
                <checkbox label="cyclic sense (Stop Mode only)" define="PMU.WAKE_CONF_GPIO1_CYC.GPIO1_CYC_0"/>
              </branch>
              <branch label="Pin1">
                <checkbox label="rising edge" define="PMU.WAKE_CONF_GPIO1_RISE.GPIO1_RI_1"/>
                <checkbox label="falling edge" define="PMU.WAKE_CONF_GPIO1_FALL.GPIO1_FA_1"/>
                <checkbox label="cyclic sense (Stop Mode only)" define="PMU.WAKE_CONF_GPIO1_CYC.GPIO1_CYC_1"/>
              </branch>
              <branch label="Pin2">
                <checkbox label="rising edge" define="PMU.WAKE_CONF_GPIO1_RISE.GPIO1_RI_2"/>
                <checkbox label="falling edge" define="PMU.WAKE_CONF_GPIO1_FALL.GPIO1_FA_2"/>
                <checkbox label="cyclic sense (Stop Mode only)" define="PMU.WAKE_CONF_GPIO1_CYC.GPIO1_CYC_2"/>
              </branch>
              <branch label="Pin3">
                <checkbox label="rising edge" define="PMU.WAKE_CONF_GPIO1_RISE.GPIO1_RI_3"/>
                <checkbox label="falling edge" define="PMU.WAKE_CONF_GPIO1_FALL.GPIO1_FA_3"/>
                <checkbox label="cyclic sense (Stop Mode only)" define="PMU.WAKE_CONF_GPIO1_CYC.GPIO1_CYC_3"/>
              </branch>
              <branch label="Pin4">
                <checkbox label="rising edge" define="PMU.WAKE_CONF_GPIO1_RISE.GPIO1_RI_4"/>
                <checkbox label="falling edge" define="PMU.WAKE_CONF_GPIO1_FALL.GPIO1_FA_4"/>
                <checkbox label="cyclic sense (Stop Mode only)" define="PMU.WAKE_CONF_GPIO1_CYC.GPIO1_CYC_4"/>
              </branch>
            </checkbox>
            <combo label="Wake up Filter" define="PMU.CNF_WAKE_FILTER.CNF_GPIO_FT" default="label=40 us">
              <item label="5 us" override="5_us"/>
              <item label="10 us" override="10_us"/>
              <item label="20 us" override="20_us"/>
              <item label="40 us" override="40_us"/>
            </combo>
          </branch>
        </branch>
        <branch label="Reset Settings">
          <combo label="Blind Time" define="PMU.CNF_RST_TFB.RST_TFB" default="label=31 us">
            <item label="0.5 us" override="RST_TFB_0"/>
            <item label="1 us" override="RST_TFB_1"/>
            <item label="5 us" override="RST_TFB_2"/>
            <item label="31 us" override="RST_TFB_3"/>
          </combo>
        </branch>
        <branch label="Power Saving Modes">
          <checkbox label="Sleep Mode" define="PMU.SLEEP_MODE" svd="0"/>
          <checkbox label="Stop Mode" define="PMU.STOP_MODE" svd="0" uielement="branch">
            <combo label="VDDC level in Stop Mode" define="PMU.CNF_PMU_SETTINGS.EN_0V9_N" default="label=1.5V">
              <item label="0.9V" override="value1"/>
              <item label="1.5V" override="value2"/>
            </combo>
            <checkbox label="Exit Stop Mode with Reset" define="PMU.CNF_PMU_SETTINGS.WAKE_W_RST"/>
          </checkbox>
        </branch>
        <branch label="Supply Interrupt">
          <checkbox label="VDDC Over Voltage" define="PMU.VDDC_OV_INT_EN" svd="0" header="isr_defines.h" lockon="SCU.NMICON.NMISUP=1" uielement="branch">
            <checkbox label="Enable Interrupt" define="PMU.VDDC_OV_EN" svd="0" header="int_defines.h"/>
            <edit label="Call Back" define="PMU.VDDC_OV_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
          </checkbox>
          <checkbox label="VDDC Over Load" define="PMU.VDDC_OL_INT_EN" svd="0" header="isr_defines.h" lockon="SCU.NMICON.NMISUP=1" uielement="branch">
            <checkbox label="Enable Interrupt" define="PMU.VDDC_OL_EN" svd="0" header="int_defines.h"/>
            <edit label="Call Back" define="PMU.VDDC_OL_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
          </checkbox>
          <math visible="false" define="PMU.PMU_SUPPLY_STS.PMU_1V5_FAIL_EN" formula="PMU.VDDC_OV_EN.+PMU.VDDC_OL_EN"/>
          <checkbox label="VDDP Over Voltage" define="PMU.VDDP_OV_INT_EN" svd="0" header="isr_defines.h" lockon="SCU.NMICON.NMISUP=1" uielement="branch">
            <checkbox label="Enable Interrupt" define="PMU.VDDP_OV_EN" svd="0" header="int_defines.h"/>
            <edit label="Call Back" define="PMU.VDDP_OV_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
          </checkbox>
          <checkbox label="VDDP Over Load" define="PMU.VDDP_OL_INT_EN" svd="0" header="isr_defines.h" lockon="SCU.NMICON.NMISUP=1" uielement="branch">
            <checkbox label="Enable Interrupt" define="PMU.VDDP_OL_EN" svd="0" header="int_defines.h"/>
            <edit label="Call Back" define="PMU.VDDP_OL_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
          </checkbox>
          <math visible="false" define="PMU.PMU_SUPPLY_STS.PMU_5V_FAIL_EN" formula="PMU.VDDP_OV_EN.+PMU.VDDP_OL_EN"/>
        </branch>
      </header>
    </treecontainer>
    <treecontainer headerlabels="Structure;Settings;" label="MON" desc="High Voltage Monitor Input" columnwidths="300;250">
      <header file="mon_defines.h">
        <checkbox label="MON enable" define="PMU.MON_CNF.EN" default="1" uielement="branch">
          <checkbox label="wake on rising edge" define="PMU.MON_CNF.RISE"/>
          <checkbox label="wake on falling edge" define="PMU.MON_CNF.FALL"/>
          <checkbox label="pull up enable" define="PMU.MON_CNF.PU"/>
          <checkbox label="pull down enable" define="PMU.MON_CNF.PD"/>
          <checkbox label="Interrupt" define="SCU.MODIEN3.MONIE" header="scu_defines.h" lockon="CPU.NVIC_ISER0.Int_EXINT0=1" uielement="branch">
            <checkbox label="Rising Edge" define="MON.RISING_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCU.EXICON0.MON_Trig_Sel[0]" header="int_defines.h"/>
              <edit label="Rising Edge Call Back" define="MON.RISING_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
            <checkbox label="Falling Edge" define="MON.FALLING_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCU.EXICON0.MON_Trig_Sel[1]" header="int_defines.h"/>
              <edit label="Falling Edge Call Back" define="MON.FALLING_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
          </checkbox>
        </checkbox>
      </header>
    </treecontainer>
    <treecontainer headerlabels="Structure;Settings;" label="Interrupt" desc="System Interrupts" columnwidths="300;250">
      <header file="int_defines.h">
        <checkbox label="Global Interrupt enable" define="SCU.IEN0.EA" header="scu_defines.h"/>
        <branch label="NMI">
          <checkbox label="WDT" define="SCU.NMI_WDT_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
            <checkbox label="Enable Interrupt" define="SCU.NMICON.NMIWDT" header="int_defines.h"/>
            <edit label="Call Back" define="SCU.NMI_WDT_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
          </checkbox>
          <checkbox label="PLL Loss-of-Lock" define="SCU.NMI_PLL_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
            <checkbox label="Enable Interrupt" define="SCU.NMICON.NMIPLL" header="int_defines.h"/>
            <edit label="Call Back" define="SCU.NMI_PLL_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
          </checkbox>
          <checkbox label="NVM operation complete" define="SCU.NMI_NVM_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
            <checkbox label="Enable Interrupt" define="SCU.NMICON.NMINVM" header="int_defines.h"/>
            <edit label="Call Back" define="SCU.NMI_NVM_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
          </checkbox>
          <checkbox label="Over Temperature enable" define="SCU.NMICON.NMIOT" header="int_defines.h"/>
          <checkbox label="Oscillator WDT" define="SCU.NMI_OWD_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
            <checkbox label="Enable Interrupt" define="SCU.NMICON.NMIOWD" header="int_defines.h"/>
            <edit label="Call Back" define="SCU.NMI_OWD_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            <math visible="false" define="SCU.APCLK_CTRL1.CLKWDT_IE" formula="SCU.NMICON.NMIOWD" header="scu_defines.h"/>
          </checkbox>
          <checkbox label="NVM mapping error enable" define="SCU.NMI_MAP_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
            <checkbox label="Enable Interrupt" define="SCU.NMICON.NMIMAP" header="int_defines.h"/>
            <edit label="Call Back" define="SCU.NMI_MAP_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
          </checkbox>
          <checkbox label="ECC enable" define="SCU.NMICON.NMIECC" header="int_defines.h"/>
          <checkbox label="Supply Prewarning enable" define="SCU.NMICON.NMISUP" header="int_defines.h"/>
        </branch>
        <branch label="ECC Interrupts">
          <checkbox label="RAM Double Bit ECC Error" define="SCU.ECC_RAM_DB_INT_EN" svd="0" header="isr_defines.h" lockon="SCU.NMICON.NMIECC=1" uielement="branch">
            <checkbox label="Enable Interrupt" define="SCU.EDCCON.RIE" header="int_defines.h"/>
            <edit label="Call Back" define="SCU.ECC_RAM_DB_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
          </checkbox>
          <checkbox label="NVM Double Bit ECC Error" define="SCU.ECC_NVM_DB_INT_EN" svd="0" header="isr_defines.h" lockon="SCU.NMICON.NMIECC=1" uielement="branch">
            <checkbox label="Enable Interrupt" define="SCU.EDCCON.NVMIE" header="int_defines.h"/>
            <edit label="Call Back" define="SCU.ECC_NVM_DB_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
          </checkbox>
        </branch>
        <branch label="External Interrupts">
          <checkbox label="EXINT0" define="SCU.MODIEN3.IE0" header="scu_defines.h" lockon="CPU.NVIC_ISER0.Int_EXINT0=1" uielement="branch">
            <checkbox label="Trigger Rising Edge" define="SCU.EXINT0_RISING_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCU.EXICON0.EXINT0[0]" header="int_defines.h"/>
              <edit label="Rising Edge Call Back" define="EXINT0.RISING_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
            <checkbox label="Trigger Falling Edge" define="SCU.EXINT0_FALLING_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCU.EXICON0.EXINT0[1]" header="int_defines.h"/>
              <edit label="Falling Edge Call Back" define="EXINT0.FALLING_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
            <combo define="SCU.MODPISEL.EXINT0IS" header="scu_defines.h" label="Pin Select" default="label=EXINT0_3 (P2.3)">
              <item label="EXINT0_1 (P2.0)" override="value1" lockon="PORT.P2_DIR.P0.label=Input"/>
              <item label="EXINT0_1 (P1.2)" override="value2" lockon="PORT.P1_DIR.P2.label=Input"/>
              <item label="EXINT0_2 (P0.1)" override="value3" lockon="PORT.P0_DIR.P1.label=Input"/>
              <item label="EXINT0_3 (P2.3)" override="value4"/>
            </combo>
          </checkbox>
          <checkbox label="EXINT1" define="SCU.MODIEN4.IE1" header="scu_defines.h" lockon="CPU.NVIC_ISER0.Int_EXINT1=1" uielement="branch">
            <checkbox label="Trigger Rising Edge" define="SCU.EXINT1_RISING_INT_EN" svd="0" header="scu_defines.h" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCU.EXICON0.EXINT1[0]" header="int_defines.h"/>
              <edit label="Rising Edge Call Back" define="EXINT1.RISING_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
            <checkbox label="Trigger Falling Edge" define="SCU.EXINT1_FALLING_INT_EN" svd="0" header="scu_defines.h" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCU.EXICON0.EXINT1[1]" header="int_defines.h"/>
              <edit label="Falling Edge Call Back" define="EXINT1.FALLING_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
            <combo define="SCU.MODPISEL.EXINT1IS" header="scu_defines.h" label="Pin Select" default="label=EXINT1_3 (P2.4)">
              <item label="EXINT1_0 (P1.1)" override="value1" lockon="PORT.P1_DIR.P1.label=Input"/>
              <item label="EXINT1_1 (P1.3)" override="value2" lockon="PORT.P1_DIR.P3.label=Input"/>
              <item label="EXINT1_2 (P1.0)" override="value3" lockon="PORT.P1_DIR.P0.label=Input"/>
              <item label="EXINT1_3 (P2.4)" override="value4"/>
            </combo>
          </checkbox>
          <checkbox label="EXINT2 enable" define="SCU.MODIEN2.EXINT2_EN" header="int_defines.h" lockon="CPU.NVIC_ISER0.Int_UART2=1" uielement="branch">
            <checkbox label="Trigger Rising Edge" define="SCU.EXINT2_RISING_INT_EN" svd="0" header="scu_defines.h" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCU.EXICON0.EXINT2[0]" header="int_defines.h"/>
              <edit label="Rising Edge Call Back" define="EXINT2.RISING_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
            <checkbox label="Trigger Falling Edge" define="SCU.EXINT2_FALLING_INT_EN" svd="0" header="scu_defines.h" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCU.EXICON0.EXINT2[1]" header="int_defines.h"/>
              <edit label="Falling Edge Call Back" define="EXINT2.FALLING_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
            <combo define="SCU.MODPISEL.EXINT2IS" header="scu_defines.h" label="Pin Select" default="label=EXINT2_0 (P2.7)">
              <item label="EXINT2_0 (P2.7)" override="value1"/>
              <item label="EXINT2_1 (P1.4)" override="value2" lockon="PORT.P1_DIR.P4.label=Input"/>
              <item label="EXINT2_2 (P0.4)" override="value3" lockon="PORT.P0_DIR.P4.label=Input"/>
              <item label="EXINT2_3 (P0.0)" override="value4" lockon="PORT.P0_DIR.P0.label=Input"/>
            </combo>
          </checkbox>
        </branch>
        <branch label="Core Exceptions">
          <checkbox label="HardFault Call Back" define="CPU.HARDFAULT_EN" svd="0" uielement="branch">
            <edit label="Call Back" define="CPU.HARDFAULT_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
          </checkbox>
          <checkbox label="MemManage Call Back" define="CPU.MEMMANAGE_EN" svd="0" uielement="branch">
            <edit label="Call Back" define="CPU.MEMMANAGE_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
          </checkbox>
          <checkbox label="BusFault Call Back" define="CPU.BUSFAULT_EN" svd="0" uielement="branch">
            <edit label="Call Back" define="CPU.BUSFAULT_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
          </checkbox>
          <checkbox label="UsageFault Call Back" define="CPU.USAGEFAULT_EN" svd="0" uielement="branch">
            <edit label="Call Back" define="CPU.USAGEFAULT_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
          </checkbox>
          <checkbox label="SysTick Call Back" define="CPU.SYSTICK_EN" svd="0" uielement="branch">
            <edit label="Call Back" define="CPU.SYSTICK_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
          </checkbox>
        </branch>
        <branch label="NVIC">
          <branch label="Interrupt enable">
            <checkbox label="GPT1" define="CPU.NVIC_ISER0.Int_GPT1" lockon="SCU.IEN0.EA=1"/>
            <checkbox label="GPT2" define="CPU.NVIC_ISER0.Int_GPT2" lockon="SCU.IEN0.EA=1"/>
            <checkbox label="ADC2" define="CPU.NVIC_ISER0.Int_ADC2" lockon="SCU.IEN0.EA=1"/>
            <checkbox label="ADC1" define="CPU.NVIC_ISER0.Int_ADC1" lockon="SCU.IEN0.EA=1"/>
            <checkbox label="CCU6 SR0" define="CPU.NVIC_ISER0.Int_CCU6SR0" lockon="SCU.IEN0.EA=1"/>
            <checkbox label="CCU6 SR1" define="CPU.NVIC_ISER0.Int_CCU6SR1" lockon="SCU.IEN0.EA=1"/>
            <checkbox label="CCU6 SR2" define="CPU.NVIC_ISER0.Int_CCU6SR2" lockon="SCU.IEN0.EA=1"/>
            <checkbox label="CCU6 SR3" define="CPU.NVIC_ISER0.Int_CCU6SR3" lockon="SCU.IEN0.EA=1"/>
            <checkbox label="SSC1" define="CPU.NVIC_ISER0.Int_SSC1" lockon="SCU.IEN0.EA=1"/>
            <checkbox label="SSC2" define="CPU.NVIC_ISER0.Int_SSC2" lockon="SCU.IEN0.EA=1"/>
            <checkbox label="UART1" define="CPU.NVIC_ISER0.Int_UART1" lockon="SCU.IEN0.EA=1"/>
            <checkbox label="UART2" define="CPU.NVIC_ISER0.Int_UART2" lockon="SCU.IEN0.EA=1"/>
            <checkbox label="EXINT0" define="CPU.NVIC_ISER0.Int_EXINT0" lockon="SCU.IEN0.EA=1"/>
            <checkbox label="EXINT1" define="CPU.NVIC_ISER0.Int_EXINT1" lockon="SCU.IEN0.EA=1"/>
            <checkbox label="BDRV" define="CPU.NVIC_ISER0.Int_BDRV" lockon="SCU.IEN0.EA=1"/>
            <checkbox label="DMA" define="CPU.NVIC_ISER0.Int_DMA" lockon="SCU.IEN0.EA=1"/>
          </branch>
          <branch label="Interrupt Priority (0 = highest, 15 = lowest)">
            <spinbox label="GPT1   [0..15]" define="CPU.NVIC_IPR0.PRI_GPT1[7:4]"/>
            <spinbox label="GPT2   [0..15]" define="CPU.NVIC_IPR0.PRI_GPT2[7:4]"/>
            <spinbox label="ADC2   [0..15]" define="CPU.NVIC_IPR0.PRI_ADC2[7:4]"/>
            <spinbox label="ADC1   [0..15]" define="CPU.NVIC_IPR0.PRI_ADC1[7:4]"/>
            <spinbox label="CCU6 SR0 [0..15]" define="CPU.NVIC_IPR1.PRI_CCU6SR0[7:4]"/>
            <spinbox label="CCU6 SR1 [0..15]" define="CPU.NVIC_IPR1.PRI_CCU6SR1[7:4]"/>
            <spinbox label="CCU6 SR2 [0..15]" define="CPU.NVIC_IPR1.PRI_CCU6SR2[7:4]"/>
            <spinbox label="CCU6 SR3 [0..15]" define="CPU.NVIC_IPR1.PRI_CCU6SR3[7:4]"/>
            <spinbox label="SSC1    [0..15]" define="CPU.NVIC_IPR2.PRI_SSC1[7:4]"/>
            <spinbox label="SSC2    [0..15]" define="CPU.NVIC_IPR2.PRI_SSC2[7:4]"/>
            <spinbox label="UART1   [0..15]" define="CPU.NVIC_IPR2.PRI_UART1[7:4]"/>
            <spinbox label="UART2   [0..15]" define="CPU.NVIC_IPR2.PRI_UART2[7:4]"/>
            <spinbox label="EXINT0  [0..15]" define="CPU.NVIC_IPR3.PRI_EXINT0[7:4]"/>
            <spinbox label="EXINT1  [0..15]" define="CPU.NVIC_IPR3.PRI_EXINT1[7:4]"/>
            <spinbox label="BDRV    [0..15]" define="CPU.NVIC_IPR3.PRI_BDRV[7:4]"/>
            <spinbox label="DMA     [0..15]" define="CPU.NVIC_IPR3.PRI_DMA[7:4]"/>
            <spinbox label="SysTick [0..15]" define="CPU.SHPR3[31:28]"/>
          </branch>
        </branch>
      </header>
    </treecontainer>
    <treecontainer headerlabels="Structure;Settings;" label="PORT" desc="General Purpose IO Ports" columnwidths="300;250">
      <header file="port_defines.h">
        <branch label="Port0">
          <branch label="Pin0">
            <radio define="PORT.P0_DIR.P0">
              <radiobutton label="Input">
              </radiobutton>
              <radiobutton label="Output" uielement="branch">
                <combo define="PORT.P0_DATA.P0" label="Data">
                  <item label="Low (0)" override="value1"/>
                  <item label="High (1)" override="value2"/>
                </combo>
                <combo define="PORT.P0_OD.P0" label="Mode">
                  <item label="Push-Pull" override="value1"/>
                  <item label="Open-Drain" override="value2"/>
                </combo>
                <combo define="PORT.P0_0_ALT[1:0]" svd="0" label="Function">
                  <item label="GPIO"/>
                  <item label="T3OUT"/>
                  <item label="EXF21_0"/>
                  <item label="RXDO_2"/>
                </combo>
                <math visible="false" define="PORT.P0_ALTSEL0.P0" formula="PORT.P0_0_ALT[1:0].*1"/>
                <math visible="false" define="PORT.P0_ALTSEL1.P0" formula="(PORT.P0_0_ALT[1:0].*2)/2"/>
                <combo define="SCU.P0_POCON0.PDM0" label="Driver Mode" default="label=Medium driver">
                  <item label="Strong driver and sharp edge" override="value1"/>
                  <item label="Strong driver and medium edge" override="value2"/>
                  <item label="Strong driver and soft edge" override="value3"/>
                  <item label="Weak driver" override="value4"/>
                  <item label="Medium driver" override="value5"/>
                  <item hide="value6"/>
                  <item hide="value7"/>
                  <item hide="value8"/>
                </combo>
              </radiobutton>
            </radio>
            <combo define="PORT.P0_0_PUD[1:0]" svd="0" label="Pull mode">
              <item label="None" value="0"/>
              <item label="Pull-Down" value="2"/>
              <item label="Pull-Up" value="3"/>
            </combo>
            <math visible="false" define="PORT.P0_PUDEN.P0" formula="PORT.P0_0_PUD[1:0]?1:0"/>
            <math visible="false" define="PORT.P0_PUDSEL.P0" formula="PORT.P0_0_PUD[1:0].*1"/>
          </branch>
          <branch label="Pin1">
            <radio define="PORT.P0_DIR.P1">
              <radiobutton label="Input">
              </radiobutton>
              <radiobutton label="Output" uielement="branch">
                <combo define="PORT.P0_DATA.P1" label="Data">
                  <item label="Low (0)" override="value1"/>
                  <item label="High (1)" override="value2"/>
                </combo>
                <combo define="PORT.P0_OD.P1" label="Mode">
                  <item label="Push-Pull" override="value1"/>
                  <item label="Open-Drain" override="value2"/>
                </combo>
                <combo define="PORT.P0_1_ALT[1:0]" svd="0" label="Function">
                  <item label="GPIO" value="0"/>
                  <item label="TxD1" value="1"/>
                  <item label="T6OUT" value="3"/>
                </combo>
                <math visible="false" define="PORT.P0_ALTSEL0.P1" formula="PORT.P0_1_ALT[1:0].*1"/>
                <math visible="false" define="PORT.P0_ALTSEL1.P1" formula="(PORT.P0_1_ALT[1:0].*2)/2"/>
                <combo define="SCU.P0_POCON0.PDM1" label="Driver Mode" default="label=Medium driver">
                  <item label="Strong driver and sharp edge" override="value1"/>
                  <item label="Strong driver and medium edge" override="value2"/>
                  <item label="Strong driver and soft edge" override="value3"/>
                  <item label="Weak driver" override="value4"/>
                  <item label="Medium driver" override="value5"/>
                  <item hide="value6"/>
                  <item hide="value7"/>
                  <item hide="value8"/>
                </combo>
              </radiobutton>
            </radio>
            <combo define="PORT.P0_1_PUD[1:0]" svd="0" label="Pull mode">
              <item label="None" value="0"/>
              <item label="Pull-Down" value="2"/>
              <item label="Pull-Up" value="3"/>
            </combo>
            <math visible="false" define="PORT.P0_PUDEN.P1" formula="PORT.P0_1_PUD[1:0]?1:0"/>
            <math visible="false" define="PORT.P0_PUDSEL.P1" formula="PORT.P0_1_PUD[1:0].*1"/>
          </branch>
          <branch label="Pin2">
            <radio define="PORT.P0_DIR.P2">
              <radiobutton label="Input">
              </radiobutton>
              <radiobutton label="Output" uielement="branch">
                <combo define="PORT.P0_DATA.P2" label="Data">
                  <item label="Low (0)" override="value1"/>
                  <item label="High (1)" override="value2"/>
                </combo>
                <combo define="PORT.P0_OD.P2" label="Mode">
                  <item label="Push-Pull" override="value1"/>
                  <item label="Open-Drain" override="value2"/>
                </combo>
                <combo define="PORT.P0_2_ALT[1:0]" svd="0" label="Function">
                  <item label="GPIO"/>
                  <item label="COUT60_0"/>
                  <item label="MTSR_1"/>
                  <item label="EXF2_0"/>
                </combo>
                <math visible="false" define="PORT.P0_ALTSEL0.P2" formula="PORT.P0_2_ALT[1:0].*1"/>
                <math visible="false" define="PORT.P0_ALTSEL1.P2" formula="(PORT.P0_2_ALT[1:0].*2)/2"/>
                <combo define="SCU.P0_POCON1.PDM2" label="Driver Mode" default="label=Medium driver">
                  <item label="Strong driver and sharp edge" override="value1"/>
                  <item label="Strong driver and medium edge" override="value2"/>
                  <item label="Strong driver and soft edge" override="value3"/>
                  <item label="Weak driver" override="value4"/>
                  <item label="Medium driver" override="value5"/>
                  <item hide="value6"/>
                  <item hide="value7"/>
                  <item hide="value8"/>
                </combo>
              </radiobutton>
            </radio>
            <combo define="PORT.P0_2_PUD[1:0]" svd="0" label="Pull mode">
              <item label="None" value="0"/>
              <item label="Pull-Down" value="2"/>
              <item label="Pull-Up" value="3"/>
            </combo>
            <math visible="false" define="PORT.P0_PUDEN.P2" formula="PORT.P0_2_PUD[1:0]?1:0"/>
            <math visible="false" define="PORT.P0_PUDSEL.P2" formula="PORT.P0_2_PUD[1:0].*1"/>
          </branch>
          <branch label="Pin3">
            <radio define="PORT.P0_DIR.P3">
              <radiobutton label="Input">
              </radiobutton>
              <radiobutton label="Output" uielement="branch">
                <combo define="PORT.P0_DATA.P3" label="Data">
                  <item label="Low (0)" override="value1"/>
                  <item label="High (1)" override="value2"/>
                </combo>
                <combo define="PORT.P0_OD.P3" label="Mode">
                  <item label="Push-Pull" override="value1"/>
                  <item label="Open-Drain" override="value2"/>
                </combo>
                <combo define="PORT.P0_3_ALT[1:0]" svd="0" label="Function">
                  <item label="GPIO"/>
                  <item label="SCK_1"/>
                  <item label="EXF21_2"/>
                  <item label="T6OUT"/>
                </combo>
                <math visible="false" define="PORT.P0_ALTSEL0.P3" formula="PORT.P0_3_ALT[1:0].*1"/>
                <math visible="false" define="PORT.P0_ALTSEL1.P3" formula="(PORT.P0_3_ALT[1:0].*2)/2"/>
                <combo define="SCU.P0_POCON1.PDM3" label="Driver Mode" default="label=Medium driver">
                  <item label="Strong driver and sharp edge" override="value1"/>
                  <item label="Strong driver and medium edge" override="value2"/>
                  <item label="Strong driver and soft edge" override="value3"/>
                  <item label="Weak driver" override="value4"/>
                  <item label="Medium driver" override="value5"/>
                  <item hide="value6"/>
                  <item hide="value7"/>
                  <item hide="value8"/>
                </combo>
              </radiobutton>
            </radio>
            <combo define="PORT.P0_3_PUD[1:0]" svd="0" label="Pull mode">
              <item label="None" value="0"/>
              <item label="Pull-Down" value="2"/>
              <item label="Pull-Up" value="3"/>
            </combo>
            <math visible="false" define="PORT.P0_PUDEN.P3" formula="PORT.P0_3_PUD[1:0]?1:0"/>
            <math visible="false" define="PORT.P0_PUDSEL.P3" formula="PORT.P0_3_PUD[1:0].*1"/>
          </branch>
          <branch label="Pin4">
            <radio define="PORT.P0_DIR.P4">
              <radiobutton label="Input">
              </radiobutton>
              <radiobutton label="Output" uielement="branch">
                <combo define="PORT.P0_DATA.P4" label="Data">
                  <item label="Low (0)" override="value1"/>
                  <item label="High (1)" override="value2"/>
                </combo>
                <combo define="PORT.P0_OD.P4" label="Mode">
                  <item label="Push-Pull" override="value1"/>
                  <item label="Open-Drain" override="value2"/>
                </combo>
                <combo define="PORT.P0_4_ALT[1:0]" svd="0" label="Function">
                  <item label="GPIO"/>
                  <item label="MRST_1_0"/>
                  <item label="CC60_0"/>
                  <item label="CLKOUT_0"/>
                </combo>
                <math visible="false" define="PORT.P0_ALTSEL0.P4" formula="PORT.P0_4_ALT[1:0].*1"/>
                <math visible="false" define="PORT.P0_ALTSEL1.P4" formula="(PORT.P0_4_ALT[1:0].*2)/2"/>
                <combo define="SCU.P0_POCON2.PDM4" label="Driver Mode" default="label=Medium driver">
                  <item hide="value1"/>
                  <item hide="value2"/>
                  <item hide="value3"/>
                  <item label="Weak driver" override="value4"/>
                  <item label="Medium driver" override="value5"/>
                  <item hide="value6"/>
                  <item hide="value7"/>
                  <item hide="value8"/>
                </combo>
              </radiobutton>
            </radio>
            <combo define="PORT.P0_4_PUD[1:0]" svd="0" label="Pull mode">
              <item label="None" value="0"/>
              <item label="Pull-Down" value="2"/>
              <item label="Pull-Up" value="3"/>
            </combo>
            <math visible="false" define="PORT.P0_PUDEN.P4" formula="PORT.P0_4_PUD[1:0]?1:0"/>
            <math visible="false" define="PORT.P0_PUDSEL.P4" formula="PORT.P0_4_PUD[1:0].*1"/>
          </branch>
        </branch>
        <branch label="Port1">
          <branch label="Pin0">
            <radio define="PORT.P1_DIR.P0">
              <radiobutton label="Input">
              </radiobutton>
              <radiobutton label="Output" uielement="branch">
                <combo define="PORT.P1_DATA.P0" label="Data">
                  <item label="Low (0)" override="value1"/>
                  <item label="High (1)" override="value2"/>
                </combo>
                <combo define="PORT.P1_OD.P0" label="Mode">
                  <item label="Push-Pull" override="value1"/>
                  <item label="Open-Drain" override="value2"/>
                </combo>
                <combo define="PORT.P1_0_ALT[1:0]" svd="0" label="Function">
                  <item label="GPIO"/>
                  <item label="SCK_2"/>
                  <item label="CC61_0"/>
                  <item label="EXF21_3"/>
                </combo>
                <math visible="false" define="PORT.P1_ALTSEL0.P0" formula="PORT.P1_0_ALT[1:0].*1"/>
                <math visible="false" define="PORT.P1_ALTSEL1.P0" formula="(PORT.P1_0_ALT[1:0].*2)/2"/>
                <combo define="SCU.P1_POCON0.PDM0" label="Driver Mode" default="label=Medium driver">
                  <item hide="value1"/>
                  <item hide="value2"/>
                  <item hide="value3"/>
                  <item label="Weak driver" override="value4"/>
                  <item label="Medium driver" override="value5"/>
                  <item hide="value6"/>
                  <item hide="value7"/>
                  <item hide="value8"/>
                </combo>
              </radiobutton>
            </radio>
            <combo define="PORT.P1_0_PUD[1:0]" svd="0" label="Pull mode">
              <item label="None" value="0"/>
              <item label="Pull-Down" value="2"/>
              <item label="Pull-Up" value="3"/>
            </combo>
            <math visible="false" define="PORT.P1_PUDEN.P0" formula="PORT.P1_0_PUD[1:0]?1:0"/>
            <math visible="false" define="PORT.P1_PUDSEL.P0" formula="PORT.P1_0_PUD[1:0].*1"/>
          </branch>
          <branch label="Pin1">
            <radio define="PORT.P1_DIR.P1">
              <radiobutton label="Input">
              </radiobutton>
              <radiobutton label="Output" uielement="branch">
                <combo define="PORT.P1_DATA.P1" label="Data">
                  <item label="Low (0)" override="value1"/>
                  <item label="High (1)" override="value2"/>
                </combo>
                <combo define="PORT.P1_OD.P1" label="Mode">
                  <item label="Push-Pull" override="value1"/>
                  <item label="Open-Drain" override="value2"/>
                </combo>
                <combo define="PORT.P1_1_ALT[1:0]" svd="0" label="Function">
                  <item label="GPIO"/>
                  <item label="MTSR_2"/>
                  <item label="COUT61_0"/>
                  <item label="TXD2_0"/>
                </combo>
                <math visible="false" define="PORT.P1_ALTSEL0.P1" formula="PORT.P1_1_ALT[1:0].*1"/>
                <math visible="false" define="PORT.P1_ALTSEL1.P1" formula="(PORT.P1_1_ALT[1:0].*2)/2"/>
                <combo define="SCU.P1_POCON0.PDM1" label="Driver Mode" default="label=Medium driver">
                  <item hide="value1"/>
                  <item hide="value2"/>
                  <item hide="value3"/>
                  <item label="Weak driver" override="value4"/>
                  <item label="Medium driver" override="value5"/>
                  <item hide="value6"/>
                  <item hide="value7"/>
                  <item hide="value8"/>
                </combo>
              </radiobutton>
            </radio>
            <combo define="PORT.P1_1_PUD[1:0]" svd="0" label="Pull mode">
              <item label="None" value="0"/>
              <item label="Pull-Down" value="2"/>
              <item label="Pull-Up" value="3"/>
            </combo>
            <math visible="false" define="PORT.P1_PUDEN.P1" formula="PORT.P1_1_PUD[1:0]?1:0"/>
            <math visible="false" define="PORT.P1_PUDSEL.P1" formula="PORT.P1_1_PUD[1:0].*1"/>
          </branch>
          <branch label="Pin2">
            <radio define="PORT.P1_DIR.P2">
              <radiobutton label="Input">
              </radiobutton>
              <radiobutton label="Output" uielement="branch">
                <combo define="PORT.P1_DATA.P2" label="Data">
                  <item label="Low (0)" override="value1"/>
                  <item label="High (1)" override="value2"/>
                </combo>
                <combo define="PORT.P1_OD.P3_P2" label="Mode">
                  <item label="Push-Pull" override="value1"/>
                  <item label="Open-Drain" override="value2"/>
                </combo>
                <combo define="PORT.P1_2_ALT[1:0]" svd="0" label="Function">
                  <item label="GPIO"/>
                  <item label="MRST_2_0"/>
                  <item label="COUT63_0"/>
                  <item label="T3OUT"/>
                </combo>
                <math visible="false" define="PORT.P1_ALTSEL0.P2" formula="PORT.P1_2_ALT[1:0].*1"/>
                <math visible="false" define="PORT.P1_ALTSEL1.P2" formula="(PORT.P1_2_ALT[1:0].*2)/2"/>
                <combo define="SCU.P1_POCON1.PDM2" label="Driver Mode" default="label=Medium driver">
                  <item hide="value1"/>
                  <item hide="value2"/>
                  <item hide="value3"/>
                  <item label="Weak driver" override="value4"/>
                  <item label="Medium driver" override="value5"/>
                  <item hide="value6"/>
                  <item hide="value7"/>
                  <item hide="value8"/>
                </combo>
              </radiobutton>
            </radio>
            <combo define="PORT.P1_2_PUD[1:0]" svd="0" label="Pull mode">
              <item label="None" value="0"/>
              <item label="Pull-Down" value="2"/>
              <item label="Pull-Up" value="3"/>
            </combo>
            <math visible="false" define="PORT.P1_PUDEN.P2" formula="PORT.P1_2_PUD[1:0]?1:0"/>
            <math visible="false" define="PORT.P1_PUDSEL.P2" formula="PORT.P1_2_PUD[1:0].*1"/>
          </branch>
          <branch label="Pin3">
            <radio define="PORT.P1_DIR.P3">
              <radiobutton label="Input">
              </radiobutton>
              <radiobutton label="Output" uielement="branch">
                <combo define="PORT.P1_DATA.P3" label="Data">
                  <item label="Low (0)" override="value1"/>
                  <item label="High (1)" override="value2"/>
                </combo>
                <!--combo define="PORT.P1_OD.P3" label="Mode">
                  <item label="Push-Pull" override="value1"/>
                  <item label="Open-Drain" override="value2"/>
                </combo-->
                <branch label="Mode - Please set mode in Pin2 branch above"/>
                <combo define="PORT.P1_3_ALT[1:0]" svd="0" label="Function">
                  <item label="GPIO"/>
                  <item label="EXF21_1"/>
                  <item label="CC62_0"/>
                  <item label="TXD2_1"/>
                </combo>
                <combo define="SCU.P1_POCON1.PDM3" label="Driver Mode" default="label=Medium driver">
                  <item label="Strong driver and sharp edge" override="value1"/>
                  <item label="Strong driver and medium edge" override="value2"/>
                  <item label="Strong driver and soft edge" override="value3"/>
                  <item label="Weak driver" override="value4"/>
                  <item label="Medium driver" override="value5"/>
                  <item hide="value6"/>
                  <item hide="value7"/>
                  <item hide="value8"/>
                </combo>
                <math visible="false" define="PORT.P1_ALTSEL0.P3" formula="PORT.P1_3_ALT[1:0].*1"/>
                <math visible="false" define="PORT.P1_ALTSEL1.P3" formula="(PORT.P1_3_ALT[1:0].*2)/2"/>
              </radiobutton>
            </radio>
            <combo define="PORT.P1_3_PUD[1:0]" svd="0" label="Pull mode">
              <item label="None" value="0"/>
              <item label="Pull-Down" value="2"/>
              <item label="Pull-Up" value="3"/>
            </combo>
            <math visible="false" define="PORT.P1_PUDEN.P3" formula="PORT.P1_3_PUD[1:0]?1:0"/>
            <math visible="false" define="PORT.P1_PUDSEL.P3" formula="PORT.P1_3_PUD[1:0].*1"/>
          </branch>
          <branch label="Pin4">
            <radio define="PORT.P1_DIR.P4">
              <radiobutton label="Input">
              </radiobutton>
              <radiobutton label="Output" uielement="branch">
                <combo define="PORT.P1_DATA.P4" label="Data">
                  <item label="Low (0)" override="value1"/>
                  <item label="High (1)" override="value2"/>
                </combo>
                <combo define="PORT.P1_OD.P4" label="Mode">
                  <item label="Push-Pull" override="value1"/>
                  <item label="Open-Drain" override="value2"/>
                </combo>
                <combo define="PORT.P1_4_ALT[1:0]" svd="0" label="Function">
                  <item label="GPIO"/>
                  <item label="CLKOUT_1"/>
                  <item label="COUT62_0"/>
                  <item label="RxD1"/>
                </combo>
                <combo define="SCU.P1_POCON2.PDM4" label="Driver Mode" default="label=Medium driver">
                  <item label="Strong driver and sharp edge" override="value1"/>
                  <item label="Strong driver and medium edge" override="value2"/>
                  <item label="Strong driver and soft edge" override="value3"/>
                  <item label="Weak driver" override="value4"/>
                  <item label="Medium driver" override="value5"/>
                  <item hide="value6"/>
                  <item hide="value7"/>
                  <item hide="value8"/>
                </combo>
                <math visible="false" define="PORT.P1_ALTSEL0.P4" formula="PORT.P1_4_ALT[1:0].*1"/>
                <math visible="false" define="PORT.P1_ALTSEL1.P4" formula="(PORT.P1_4_ALT[1:0].*2)/2"/>
              </radiobutton>
            </radio>
            <combo define="PORT.P1_4_PUD[1:0]" svd="0" label="Pull mode">
              <item label="None" value="0"/>
              <item label="Pull-Down" value="2"/>
              <item label="Pull-Up" value="3"/>
            </combo>
            <math visible="false" define="PORT.P1_PUDEN.P4" formula="PORT.P1_4_PUD[1:0]?1:0"/>
            <math visible="false" define="PORT.P1_PUDSEL.P4" formula="PORT.P1_4_PUD[1:0].*1"/>
          </branch>
        </branch>
        <branch label="Port2">
          <branch label="Pin0">
            <radio define="PORT.P2_DIR.P0">
              <radiobutton label="Input"/>
              <radiobutton label="Disabled"/>
            </radio>
            <combo define="PORT.P2_0_PUD[1:0]" svd="0" label="Pull mode">
              <item label="None" value="0"/>
              <item label="Pull-Down" value="2"/>
              <item label="Pull-Up" value="3"/>
            </combo>
            <math visible="false" define="PORT.P2_PUDEN.P0" formula="PORT.P2_0_PUD[1:0]?1:0"/>
            <math visible="false" define="PORT.P2_PUDSEL.P0" formula="PORT.P2_0_PUD[1:0].*1"/>
          </branch>
          <branch label="Pin1">
            <!--radio define="PORT.P2_DIR.P1">
              <radiobutton label="Input"/>
              <radiobutton label="Disabled"/>
            </radio-->
            <combo define="PORT.P2_1_PUD[1:0]" svd="0" label="Pull mode">
              <item label="None" value="0"/>
              <item label="Pull-Down" value="2"/>
              <item label="Pull-Up" value="3"/>
            </combo>
            <!-- <math visible="false" define="PORT.P2_PUDEN.P1" formula="PORT.P2_1_PUD[1:0]?1:0"/> -->
            <!-- <math visible="false" define="PORT.P2_PUDSEL.P1" formula="PORT.P2_1_PUD[1:0].*1"/>-->
          </branch>
          <branch label="Pin2">
            <radio define="PORT.P2_DIR.P2">
              <radiobutton label="Input"/>
              <radiobutton label="Disabled"/>
            </radio>
            <combo define="PORT.P2_2_PUD[1:0]" svd="0" label="Pull mode">
              <item label="None" value="0"/>
              <item label="Pull-Down" value="2"/>
              <item label="Pull-Up" value="3"/>
            </combo>
            <math visible="false" define="PORT.P2_PUDEN.P2" formula="PORT.P2_2_PUD[1:0]?1:0"/>
            <math visible="false" define="PORT.P2_PUDSEL.P2" formula="PORT.P2_2_PUD[1:0].*1"/>
          </branch>
          <branch label="Pin3">
            <radio define="PORT.P2_DIR.P3">
              <radiobutton label="Input"/>
              <radiobutton label="Disabled"/>
            </radio>
            <combo define="PORT.P2_3_PUD[1:0]" svd="0" label="Pull mode">
              <item label="None" value="0"/>
              <item label="Pull-Down" value="2"/>
              <item label="Pull-Up" value="3"/>
            </combo>
            <math visible="false" define="PORT.P2_PUDEN.P3" formula="PORT.P2_3_PUD[1:0]?1:0"/>
            <math visible="false" define="PORT.P2_PUDSEL.P3" formula="PORT.P2_3_PUD[1:0].*1"/>
          </branch>
          <branch label="Pin4">
            <radio define="PORT.P2_DIR.P4">
              <radiobutton label="Input"/>
              <radiobutton label="Disabled"/>
            </radio>
            <combo define="PORT.P2_4_PUD[1:0]" svd="0" label="Pull mode">
              <item label="None" value="0"/>
              <item label="Pull-Down" value="2"/>
              <item label="Pull-Up" value="3"/>
            </combo>
            <math visible="false" define="PORT.P2_PUDEN.P4" formula="PORT.P2_4_PUD[1:0]?1:0"/>
            <math visible="false" define="PORT.P2_PUDSEL.P4" formula="PORT.P2_4_PUD[1:0].*1"/>
          </branch>
          <branch label="Pin5">
            <radio define="PORT.P2_DIR.P5">
              <radiobutton label="Input"/>
              <radiobutton label="Disabled"/>
            </radio>
            <combo define="PORT.P2_5_PUD[1:0]" svd="0" label="Pull mode">
              <item label="None" value="0"/>
              <item label="Pull-Down" value="2"/>
              <item label="Pull-Up" value="3"/>
            </combo>
            <math visible="false" define="PORT.P2_PUDEN.P5" formula="PORT.P2_5_PUD[1:0]?1:0"/>
            <math visible="false" define="PORT.P2_PUDSEL.P5" formula="PORT.P2_5_PUD[1:0].*1"/>
          </branch>
          <!--<branch label="Pin7">
            <radio define="PORT.P2_DIR.P7">
              <radiobutton label="Input"/>
              <radiobutton label="Disabled"/>
            </radio
            <combo define="PORT.P2_7_PUD[1:0]" svd="0" label="Pull mode">
              <item label="None" value="0"/>
              <item label="Pull-Down" value="2"/>
              <item label="Pull-Up" value="3"/>
            </combo>
          </branch>-->
        </branch>
      </header>
    </treecontainer>
    <treecontainer headerlabels="Structure;Settings;" label="ADC1" desc="10bit ADC" columnwidths="300;250">
      <header file="adc1_defines.h">
        <checkbox label="ADC1 enable" define="ADC1.GLOBCTR[8]" uielement="branch">
          <math visible="false" define="ADC1.GLOBCTR[9]" formula="ADC1.GLOBCTR[8]"/>
          <math label="ADC1 Clock" unit="MHz" define="ADC1.CLK" svd="0" formula="SCU.PLL_fPLL/(ADC1.GLOBCTR.DIVA+1)"/>
          <branch label="Clock">
            <spinbox label="Clock Divider [0..63]+1" define="ADC1.GLOBCTR.DIVA"/>
          </branch>
          <checkbox label="VAREF enable" define="MF.REF2_CTRL.VREF5V_PD_N" default="1"/>
          <radio define="ADC1.SQ_FB.SQ_RUN">
            <radiobutton label="Software Mode" lockon="ADC1.CHx_ESM.TRIG_SEL.label=none;ADC1.CHx_EIM.TRIG_SEL.label=none">
            </radiobutton>
            <radiobutton label="Sequencer Mode" uielement="branch">
              <horizontalcontainer label="Channel">
                <text label="0"/>
                <text label="1"/>
                <text label="2"/>
                <text label="3"/>
                <text label="4"/>
                <text label="5"/>
                <text label="6"/>
              </horizontalcontainer>
              <horizontalcontainer label="Sequence 1">
                <checkbox define="ADC1.SQ1_4.SQ1[0]"/>
                <checkbox define="ADC1.SQ1_4.SQ1[1]"/>
                <checkbox define="ADC1.SQ1_4.SQ1[2]"/>
                <checkbox define="ADC1.SQ1_4.SQ1[3]"/>
                <checkbox define="ADC1.SQ1_4.SQ1[4]"/>
                <checkbox define="ADC1.SQ1_4.SQ1[5]"/>
                <checkbox define="ADC1.SQ1_4.SQ1[6]"/>
              </horizontalcontainer>
              <horizontalcontainer label="Sequence 2">
                <checkbox define="ADC1.SQ1_4.SQ2[0]"/>
                <checkbox define="ADC1.SQ1_4.SQ2[1]"/>
                <checkbox define="ADC1.SQ1_4.SQ2[2]"/>
                <checkbox define="ADC1.SQ1_4.SQ2[3]"/>
                <checkbox define="ADC1.SQ1_4.SQ2[4]"/>
                <checkbox define="ADC1.SQ1_4.SQ2[5]"/>
                <checkbox define="ADC1.SQ1_4.SQ2[6]"/>
              </horizontalcontainer>
              <horizontalcontainer label="Sequence 3">
                <checkbox define="ADC1.SQ1_4.SQ3[0]"/>
                <checkbox define="ADC1.SQ1_4.SQ3[1]"/>
                <checkbox define="ADC1.SQ1_4.SQ3[2]"/>
                <checkbox define="ADC1.SQ1_4.SQ3[3]"/>
                <checkbox define="ADC1.SQ1_4.SQ3[4]"/>
                <checkbox define="ADC1.SQ1_4.SQ3[5]"/>
                <checkbox define="ADC1.SQ1_4.SQ3[6]"/>
              </horizontalcontainer>
              <horizontalcontainer label="Sequence 4">
                <checkbox define="ADC1.SQ1_4.SQ4[0]"/>
                <checkbox define="ADC1.SQ1_4.SQ4[1]"/>
                <checkbox define="ADC1.SQ1_4.SQ4[2]"/>
                <checkbox define="ADC1.SQ1_4.SQ4[3]"/>
                <checkbox define="ADC1.SQ1_4.SQ4[4]"/>
                <checkbox define="ADC1.SQ1_4.SQ4[5]"/>
                <checkbox define="ADC1.SQ1_4.SQ4[6]"/>
              </horizontalcontainer>
              <horizontalcontainer label="Sequence 5">
                <checkbox define="ADC1.SQ5_8.SQ5[0]"/>
                <checkbox define="ADC1.SQ5_8.SQ5[1]"/>
                <checkbox define="ADC1.SQ5_8.SQ5[2]"/>
                <checkbox define="ADC1.SQ5_8.SQ5[3]"/>
                <checkbox define="ADC1.SQ5_8.SQ5[4]"/>
                <checkbox define="ADC1.SQ5_8.SQ5[5]"/>
                <checkbox define="ADC1.SQ5_8.SQ5[6]"/>
              </horizontalcontainer>
              <horizontalcontainer label="Sequence 6">
                <checkbox define="ADC1.SQ5_8.SQ6[0]"/>
                <checkbox define="ADC1.SQ5_8.SQ6[1]"/>
                <checkbox define="ADC1.SQ5_8.SQ6[2]"/>
                <checkbox define="ADC1.SQ5_8.SQ6[3]"/>
                <checkbox define="ADC1.SQ5_8.SQ6[4]"/>
                <checkbox define="ADC1.SQ5_8.SQ6[5]"/>
                <checkbox define="ADC1.SQ5_8.SQ6[6]"/>
              </horizontalcontainer>
              <horizontalcontainer label="Sequence 7">
                <checkbox define="ADC1.SQ5_8.SQ7[0]"/>
                <checkbox define="ADC1.SQ5_8.SQ7[1]"/>
                <checkbox define="ADC1.SQ5_8.SQ7[2]"/>
                <checkbox define="ADC1.SQ5_8.SQ7[3]"/>
                <checkbox define="ADC1.SQ5_8.SQ7[4]"/>
                <checkbox define="ADC1.SQ5_8.SQ7[5]"/>
                <checkbox define="ADC1.SQ5_8.SQ7[6]"/>
              </horizontalcontainer>
              <horizontalcontainer label="Sequence 8">
                <checkbox define="ADC1.SQ5_8.SQ8[0]"/>
                <checkbox define="ADC1.SQ5_8.SQ8[1]"/>
                <checkbox define="ADC1.SQ5_8.SQ8[2]"/>
                <checkbox define="ADC1.SQ5_8.SQ8[3]"/>
                <checkbox define="ADC1.SQ5_8.SQ8[4]"/>
                <checkbox define="ADC1.SQ5_8.SQ8[5]"/>
                <checkbox define="ADC1.SQ5_8.SQ8[6]"/>
              </horizontalcontainer>
            </radiobutton>
          </radio>
          <branch label="Channel Configuration">
            <branch label="Channel 0 (P2.0)">
              <spinbox suffix=" ticks" label="Sample Time" define="ADC1.STC_0_3.ch0"/>
              <combo label="Data Width [bit]" define="ADC1.DWSEL.ch0">
                <item label="10" override="10BIT"/>
                <item label="8" override="8BIT"/>
              </combo>
              <combo label="Result Mode" define="ADC1.RES_OUT0.WFR0">
                <item label="overwrite" override="DISABLE"/>
                <item label="wait for read" override="ENABLE"/>
              </combo>
              <math label="Conversion time" unit="us" formula="(3+ADC1.STC_0_3.ch0+ADC1.DWSEL.ch0.label)*(1/ADC1.CLK)+(1/SCU.PLL_fPLL)"/>
            </branch>
            <branch label="Channel 1 (P2.1/OpAmp)">
              <spinbox suffix=" ticks" label="Sample Time" define="ADC1.STC_0_3.ch1"/>
              <combo label="Data Width [bit]" define="ADC1.DWSEL.ch1">
                <item label="10" override="10BIT"/>
                <item label="8" override="8BIT"/>
              </combo>
              <combo label="Result Mode" define="ADC1.RES_OUT1.WFR1">
                <item label="overwrite" override="DISABLE"/>
                <item label="wait for read" override="ENABLE"/>
              </combo>
              <math label="Conversion time" unit="us" formula="(3+ADC1.STC_0_3.ch1+ADC1.DWSEL.ch1.label)*(1/ADC1.CLK)+(1/SCU.PLL_fPLL)"/>
            </branch>
            <branch label="Channel 2 (P2.2)">
              <spinbox suffix=" ticks" label="Sample Time" define="ADC1.STC_0_3.ch2"/>
              <combo label="Data Width [bit]" define="ADC1.DWSEL.ch2">
                <item label="10" override="10BIT"/>
                <item label="8" override="8BIT"/>
              </combo>
              <combo label="Result Mode" define="ADC1.RES_OUT2.WFR2">
                <item label="overwrite" override="DISABLE"/>
                <item label="wait for read" override="ENABLE"/>
              </combo>
              <math label="Conversion time" unit="us" formula="(3+ADC1.STC_0_3.ch2+ADC1.DWSEL.ch2.label)*(1/ADC1.CLK)+(1/SCU.PLL_fPLL)"/>
            </branch>
            <branch label="Channel 3 (P2.3)">
              <spinbox suffix=" ticks" label="Sample Time" define="ADC1.STC_0_3.ch3"/>
              <combo label="Data Width [bit]" define="ADC1.DWSEL.ch3">
                <item label="10" override="10BIT"/>
                <item label="8" override="8BIT"/>
              </combo>
              <combo label="Result Mode" define="ADC1.RES_OUT3.WFR3">
                <item label="overwrite" override="DISABLE"/>
                <item label="wait for read" override="ENABLE"/>
              </combo>
              <math label="Conversion time" unit="us" formula="(3+ADC1.STC_0_3.ch3+ADC1.DWSEL.ch3.label)*(1/ADC1.CLK)+(1/SCU.PLL_fPLL)"/>
            </branch>
            <branch label="Channel 4 (P2.4)">
              <spinbox suffix=" ticks" label="Sample Time" define="ADC1.STC_4_7.ch4"/>
              <combo label="Data Width [bit]" define="ADC1.DWSEL.ch4">
                <item label="10" override="10BIT"/>
                <item label="8" override="8BIT"/>
              </combo>
              <combo label="Result Mode" define="ADC1.RES_OUT4.WFR4">
                <item label="overwrite" override="DISABLE"/>
                <item label="wait for read" override="ENABLE"/>
              </combo>
              <math label="Conversion time" unit="us" formula="(3+ADC1.STC_4_7.ch4+ADC1.DWSEL.ch4.label)*(1/ADC1.CLK)+(1/SCU.PLL_fPLL)"/>
            </branch>
            <branch label="Channel 5 (P2.5)">
              <spinbox suffix=" ticks" label="Sample Time" define="ADC1.STC_4_7.ch5"/>
              <combo label="Data Width [bit]" define="ADC1.DWSEL.ch5">
                <item label="10" override="10BIT"/>
                <item label="8" override="8BIT"/>
              </combo>
              <combo label="Result Mode" define="ADC1.RES_OUT5.WFR5">
                <item label="overwrite" override="DISABLE"/>
                <item label="wait for read" override="ENABLE"/>
              </combo>
              <math label="Conversion time" unit="us" formula="(3+ADC1.STC_4_7.ch5+ADC1.DWSEL.ch5.label)*(1/ADC1.CLK)+(1/SCU.PLL_fPLL)"/>
            </branch>
            <branch label="Channel 6 (VDH)">
              <spinbox suffix=" ticks" label="Sample Time" define="ADC1.STC_4_7.ch6"/>
              <combo label="Data Width [bit]" define="ADC1.DWSEL.ch6">
                <item label="10" override="10BIT"/>
                <item label="8" override="8BIT"/>
              </combo>
              <combo label="Result Mode" define="ADC1.RES_OUT6.WFR6">
                <item label="overwrite" override="DISABLE"/>
                <item label="wait for read" override="ENABLE"/>
              </combo>
              <var define="MF.VMON_SEN_CTRL.VMON_SEN_HRESO_5V"/>
              <checkbox label="Enable VDH Attenuator" define="MF.VMON_SEN_CTRL.VMON_SEN_PD_N" setdef="MF.VMON_SEN_CTRL.VMON_SEN_HRESO_5V=0" uielement="branch">
                <combo label="Measurement Range" define="MF.VMON_SEN_CTRL.VMON_SEN_SEL_INRANGE">
                  <item label="0V to 20V" override="range0"/>
                  <item label="0V to 30V" override="range1"/>
                </combo>
              </checkbox>
              <math label="Conversion time" unit="us" formula="(3+ADC1.STC_4_7.ch6+ADC1.DWSEL.ch6.label)*(1/ADC1.CLK)+(1/SCU.PLL_fPLL)"/>
            </branch>
          </branch>
          <branch label="Exceptional Sequencer Mode - ESM">
            <combo label="Trigger" define="ADC1.CHx_ESM.TRIG_SEL" default="label=none">
              <item label="none" override="NONE"/>
              <item label="CCU6 COUT63" override="COUT63"/>
              <item label="GPT12E T6OUT" override="GPT12_T6OUT"/>
              <item label="GPT12E T3OUT" override="GPT12_T3OUT"/>
              <item label="Timer2" override="T2"/>
              <item label="Timer21" override="T21"/>
              <item label="Timer3" override="CCU_6_INT"/>
            </combo>
            <branch label="ESM Sequence">
              <checkbox label="Channel 0 (P2.0)" define="ADC1.CHx_ESM.ESM_0[0]"/>
              <checkbox label="Channel 1 (P2.1/OpAmp)" define="ADC1.CHx_ESM.ESM_0[1]"/>
              <checkbox label="Channel 2 (P2.2)" define="ADC1.CHx_ESM.ESM_0[2]"/>
              <checkbox label="Channel 3 (P2.3)" define="ADC1.CHx_ESM.ESM_0[3]"/>
              <checkbox label="Channel 4 (P2.4)" define="ADC1.CHx_ESM.ESM_0[4]"/>
              <checkbox label="Channel 5 (P2.5)" define="ADC1.CHx_ESM.ESM_0[5]"/>
              <checkbox label="Channel 6 (VDH)" define="ADC1.CHx_ESM.ESM_0[6]"/>
            </branch>
          </branch>
          <branch label="Exceptional Interrupt Mode - EIM">
            <combo label="Trigger" define="ADC1.CHx_EIM.TRIG_SEL" default="label=none">
              <item label="none" override="NONE"/>
              <item label="CCU6 COUT63" override="COUT63"/>
              <item label="GPT12E T6OUT" override="GPT12_T6OUT"/>
              <item label="GPT12E T3OUT" override="GPT12_T3OUT"/>
              <item label="Timer2" override="T2"/>
              <item label="Timer21" override="T21"/>
              <item label="Timer3" override="CCU_6_INT"/>
            </combo>
            <combo label="Channel" define="ADC1.CHx_EIM.CHx" default="label=Channel 0 (P2.0)">
              <item label="Channel 0 (P2.0)" override="CH0_EN"/>
              <item label="Channel 1 (P2.1/OpAmp)" override="CH1_EN"/>
              <item label="Channel 2 (P2.2)" override="CH2_EN"/>
              <item label="Channel 3 (P2.3)" override="CH3_EN"/>
              <item label="Channel 4 (P2.4)" override="CH4_EN"/>
              <item label="Channel 5 (P2.5)" override="CH5_EN"/>
              <item label="Channel 6 (VDH)" override="CH6_EN"/>
            </combo>
            <combo label="Repetitive Measurements" define="ADC1.CHx_EIM.REP" default="label=1">
              <item label="1" override="1"/>
              <item label="2" override="2"/>
              <item label="4" override="4"/>
              <item label="8" override="8"/>
              <item label="16" override="16"/>
              <item label="32" override="32"/>
              <item label="64" override="64"/>
              <item label="128" override="128"/>
            </combo>
            <combo label="Result Mode" define="ADC1.RES_OUT_EIM.WFR8">
              <item label="overwrite" override="DISABLE"/>
              <item label="wait for read" override="ENABLE"/>
            </combo>
          </branch>
          <branch label="Interrupts">
            <checkbox label="Channel 0 (P2.0)" define="ADC1.CH0_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_ADC1=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="ADC1.IE.CH0_IE"/>
              <edit label="Call Back" define="ADC1.CH0_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
            <checkbox label="Channel 1 (P2.1/OpAmp)" define="ADC1.CH1_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_ADC1=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="ADC1.IE.CH1_IE"/>
              <edit label="Call Back" define="ADC1.CH1_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
            <checkbox label="Channel 2 (P2.2)" define="ADC1.CH2_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_ADC1=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="ADC1.IE.CH2_IE"/>
              <edit label="Call Back" define="ADC1.CH2_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
            <checkbox label="Channel 3 (P2.3)" define="ADC1.CH3_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_ADC1=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="ADC1.IE.CH3_IE"/>
              <edit label="Call Back" define="ADC1.CH3_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
            <checkbox label="Channel 4 (P2.4)" define="ADC1.CH4_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_ADC1=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="ADC1.IE.CH4_IE"/>
              <edit label="Call Back" define="ADC1.CH4_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
            <checkbox label="Channel 5 (P2.5)" define="ADC1.CH5_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_ADC1=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="ADC1.IE.CH5_IE"/>
              <edit label="Call Back" define="ADC1.CH5_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
            <checkbox label="Channel 6 (VDH)" define="ADC1.CH6_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_ADC1=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="ADC1.IE.CH6_IE"/>
              <edit label="Call Back" define="ADC1.CH6_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
            <checkbox label="EIM" define="ADC1.EIM_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_ADC1=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="ADC1.IE.EIM_IE"/>
              <edit label="Call Back" define="ADC1.EIM_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
            <checkbox label="ESM" define="ADC1.ESM_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_ADC1=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="ADC1.IE.ESM_IE"/>
              <edit label="Call Back" define="ADC1.ESM_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
          </branch>
        </checkbox>
      </header>
    </treecontainer>
    <treecontainer headerlabels="Structure;Settings;" label="ADC2" desc="8bit ADC" columnwidths="300;250">
      <header file="adc2_defines.h">
        <checkbox label="Configure ADC2" define="ADC2.CTRL2.MCM_PD_N" lockon="ADC2.CH9_UPTH_DEG=200" uielement="branch">
          <math label="ADC2 Clock" unit="MHz" define="ADC2.CLK" svd="0" formula="SCU.APCLK_MI_CLK*1"/>
          <math visible="false" unit="us" define="ADC2.CONV_TIME" svd="0" formula="1/SCU.APCLK_MI_CLK*(ADC2.CTRL2.SAMPLE_TIME_int.label+15)"/>
          <branch label="Sample Time Configuration">
            <combo label="Sample Time [MI_Clock ticks]" define="ADC2.CTRL2.SAMPLE_TIME_int" default="label=18">
              <item label="4" override="MICLK4"/>
              <item label="6" override="MICLK6"/>
              <item label="8" override="MICLK8"/>
              <item label="10" override="MICLK10"/>
              <item label="12" override="MICLK12"/>
              <item label="14" override="MICLK14"/>
              <item label="16" override="MICLK16"/>
              <item label="18" override="MICLK18"/>
              <item label="20" override="MICLK20"/>
              <item label="22" override="MICLK22"/>
            </combo>
          </branch>
          <branch label="Channel Configuration">
            <branch label="Channel 0 - VBAT_SENSE (TLE986x devices only)">
            </branch>
            <branch label="Channel 1 - VS">
              <combo label="Measurement Range" define="ADC2.CTRL_STS.VS_RANGE">
                <item label="3V to 22V" override="Range1"/>
                <item label="3V to 31V" override="Range2"/>
              </combo>
              <doublespinbox suffix=" V" label="Upper Threshold" define="ADC2.CH1_UPTH_VOLT" svd="0" range="3.0;31.0" default="17.30"/>
              <doublespinbox suffix=" V" label="Lower Threshold" define="ADC2.CH1_LOTH_VOLT" svd="0" range="3.0;31.0" default="5.78"/>
              <math label="Upper Threshold value" define="ADC2.TH0_3_UPPER.CH1" formula="trunc(ADC2.CH1_UPTH_VOLT*((0.039*ADC2.CTRL_STS.VS_RANGE)+(0.055*(ADC2.CTRL_STS.VS_RANGE.^1)))*255/1.211)"/>
              <math label="Lower Threshold value" define="ADC2.TH0_3_LOWER.CH1" formula="trunc(ADC2.CH1_LOTH_VOLT*((0.039*ADC2.CTRL_STS.VS_RANGE)+(0.055*(ADC2.CTRL_STS.VS_RANGE.^1)))*255/1.211)"/>
              <branch label="Mode">
                <combo label="Measurement Mode" define="ADC2.MMODE0_5.Ch1">
                  <item label="Upper and lower limits" override="MMODE0"/>
                  <item label="Lower limits" override="MMODEUV"/>
                  <item label="Upper limits" override="MMODEOV"/>
                </combo>
                <branch label="Upper Hysteresis">
                  <combo label="Hysteresis" define="ADC2.CNT0_3_UPPER.HYST_UP_CH1">
                    <item label="hysteresis off" override="HYSTOFF"/>
                  </combo>
                  <combo label="Event Count" define="ADC2.CNT0_3_UPPER.CNT_UP_CH1">
                  </combo>
                </branch>
                <branch label="Lower Hysteresis">
                  <combo label="Hysteresis" define="ADC2.CNT0_3_LOWER.HYST_LO_CH1">
                    <item label="hysteresis off" override="HYSTOFF"/>
                  </combo>
                  <combo label="Event Count" define="ADC2.CNT0_3_LOWER.CNT_LO_CH1">
                  </combo>
                </branch>
              </branch>
              <checkbox label="Filter" define="ADC2.CTRL4.FILT_OUT_SEL_5_0[1]" uielement="branch">
                <checkbox label="Upper Threshold Filter" define="ADC2.FILT_UP_CTRL.Ch1_EN"/>
                <checkbox label="Lower Threshold Filter" define="ADC2.FILT_LO_CTRL.Ch1_EN"/>
                <combo label="Coefficient" define="ADC2.FILTCOEFF0_5.CH1">
                  <!--item label="1/2 weight of current sample" override="1/2"/>
                  <item label="1/4 weight of current sample" override="1/4"/>
                  <item label="1/8 weight of current sample" override="1/8"/>
                  <item label="1/16 weight of current sample" override="1/16"/-->
                </combo>
              </checkbox>
              <branch label="Calibration">
                <checkbox label="Calibration enable" define="ADC2.CTRL1.CALIB_EN[1]"/>
              </branch>
              <branch label="Interrupt">
                <checkbox label="Upper Threshold" define="ADC2.VS_UP_INT_EN" svd="0" header="isr_defines.h" lockon="SCU.NMICON.NMISUP=1" uielement="branch">
                  <checkbox label="Enable Interrupt" define="SCUPM.SYS_SUPPLY_IRQ_CTRL.VS_OV_IE" header="int_defines.h"/>
                  <edit label="Call Back" define="ADC2.VS_UP_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
                </checkbox>
                <checkbox label="Lower Threshold" define="ADC2.VS_LO_INT_EN" svd="0" header="isr_defines.h" lockon="SCU.NMICON.NMISUP=1" uielement="branch">
                  <checkbox label="Enable Interrupt" define="SCUPM.SYS_SUPPLY_IRQ_CTRL.VS_UV_IE" header="int_defines.h"/>
                  <edit label="Call Back" define="ADC2.VS_LO_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
                </checkbox>
              </branch>
              <math label="Conversion Time" unit="us" formula="ADC2.CONV_TIME+1/SCU.APCLK_MI_CLK*(ADC2.CTRL1.CALIB_EN[1]*13+ADC2.CTRL4.FILT_OUT_SEL_5_0[1]*(2^(ADC2.FILTCOEFF0_5.CH1+1)))"/>
            </branch>
            <branch label="Channel 2 - VSD">
              <doublespinbox suffix=" V" label="Upper Threshold" define="ADC2.CH2_UPTH_VOLT" svd="0" range="3.0;30.0" default="23.4"/>
              <doublespinbox suffix=" V" label="Lower Threshold" define="ADC2.CH2_LOTH_VOLT" svd="0" range="3.0;30.0" default="5.78"/>
              <math label="Upper Threshold value" define="ADC2.TH0_3_UPPER.CH2" formula="trunc(ADC2.CH2_UPTH_VOLT*0.039*255/1.211)"/>
              <math label="Lower Threshold value" define="ADC2.TH0_3_LOWER.CH2" formula="trunc(ADC2.CH2_LOTH_VOLT*0.039*255/1.211)"/>
              <branch label="Mode">
                <combo label="Measurement Mode" define="ADC2.MMODE0_5.Ch2">
                  <item label="Upper and lower limits" override="MMODE0"/>
                  <item label="Lower limits" override="MMODEUV"/>
                  <item label="Upper limits" override="MMODEOV"/>
                </combo>
                <branch label="Upper Hysteresis">
                  <combo label="Hysteresis" define="ADC2.CNT0_3_UPPER.HYST_UP_CH2">
                    <item label="hysteresis off" override="HYSTOFF"/>
                  </combo>
                  <combo label="Event Count" define="ADC2.CNT0_3_UPPER.CNT_UP_CH2">
                  </combo>
                </branch>
                <branch label="Lower Hysteresis">
                  <combo label="Hysteresis" define="ADC2.CNT0_3_LOWER.HYST_LO_CH2">
                    <item label="hysteresis off" override="HYSTOFF"/>
                  </combo>
                  <combo label="Event Count" define="ADC2.CNT0_3_LOWER.CNT_LO_CH2">
                  </combo>
                </branch>
              </branch>
              <checkbox label="Filter" define="ADC2.CTRL4.FILT_OUT_SEL_5_0[2]" uielement="branch">
                <checkbox label="Upper Threshold Filter" define="ADC2.FILT_UP_CTRL.Ch2_EN"/>
                <checkbox label="Lower Threshold Filter" define="ADC2.FILT_LO_CTRL.Ch2_EN"/>
                <combo label="Coefficient" define="ADC2.FILTCOEFF0_5.CH2">
                  <!--item label="1/2 weight of current sample" override="1/2"/>
                  <item label="1/4 weight of current sample" override="1/4"/>
                  <item label="1/8 weight of current sample" override="1/8"/>
                  <item label="1/16 weight of current sample" override="1/16"/-->
                </combo>
              </checkbox>
              <branch label="Calibration">
                <checkbox label="Calibration enable" define="ADC2.CTRL1.CALIB_EN[2]"/>
              </branch>
              <branch label="Interrupt">
                <checkbox label="Upper Threshold" define="ADC2.VSD_UP_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_BDRV=1" uielement="branch">
                  <checkbox label="Enable Interrupt" define="SCUPM.BDRV_IRQ_CTRL.VSD_UPTH_IE" header="int_defines.h"/>
                  <edit label="Call Back" define="ADC2.VSD_UP_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
                </checkbox>
                <checkbox label="Lower Threshold" define="ADC2.VSD_LO_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_BDRV=1" uielement="branch">
                  <checkbox label="Enable Interrupt" define="SCUPM.BDRV_IRQ_CTRL.VSD_LOWTH_IE" header="int_defines.h"/>
                  <edit label="Call Back" define="ADC2.VSD_LO_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
                </checkbox>
              </branch>
              <math label="Conversion Time" unit="us" formula="ADC2.CONV_TIME+1/SCU.APCLK_MI_CLK*(ADC2.CTRL1.CALIB_EN[2]*13+ADC2.CTRL4.FILT_OUT_SEL_5_0[2]*(2^(ADC2.FILTCOEFF0_5.CH2+1)))"/>
            </branch>
            <branch label="Channel 3 - VCP">
              <doublespinbox suffix=" V" label="Upper Threshold" define="ADC2.CH3_UPTH_VOLT" svd="0" range="5.0;53.0" default="35.00"/>
              <doublespinbox suffix=" V" label="Lower Threshold" define="ADC2.CH3_LOTH_VOLT" svd="0" range="5.0;53.0" default="5.2"/>
              <math label="Upper Threshold value" define="ADC2.TH0_3_UPPER.CH3" formula="trunc(ADC2.CH3_UPTH_VOLT*0.023*255/1.211)"/>
              <math label="Lower Threshold value" define="ADC2.TH0_3_LOWER.CH3" formula="trunc(ADC2.CH3_LOTH_VOLT*0.023*255/1.211)"/>
              <branch label="Mode">
                <combo label="Measurement Mode" define="ADC2.MMODE0_5.Ch3">
                  <item label="Upper and lower limits" override="MMODE0"/>
                  <item label="Lower limits" override="MMODEUV"/>
                  <item label="Upper limits" override="MMODEOV"/>
                </combo>
                <branch label="Upper Hysteresis">
                  <combo label="Hysteresis" define="ADC2.CNT0_3_UPPER.HYST_UP_CH3">
                    <item label="hysteresis off" override="HYSTOFF"/>
                  </combo>
                  <combo label="Event Count" define="ADC2.CNT0_3_UPPER.CNT_UP_CH3">
                  </combo>
                </branch>
                <branch label="Lower Hysteresis">
                  <combo label="Hysteresis" define="ADC2.CNT0_3_LOWER.HYST_LO_CH3">
                    <item label="hysteresis off" override="HYSTOFF"/>
                  </combo>
                  <combo label="Event Count" define="ADC2.CNT0_3_LOWER.CNT_LO_CH3">
                  </combo>
                </branch>
              </branch>
              <checkbox label="Filter" define="ADC2.CTRL4.FILT_OUT_SEL_5_0[3]" uielement="branch">
                <checkbox label="Upper Threshold Filter" define="ADC2.FILT_UP_CTRL.Ch3_EN"/>
                <checkbox label="Lower Threshold Filter" define="ADC2.FILT_LO_CTRL.Ch3_EN"/>
                <combo label="Coefficient" define="ADC2.FILTCOEFF0_5.CH3">
                  <!--item label="1/2 weight of current sample" override="1/2"/>
                  <item label="1/4 weight of current sample" override="1/4"/>
                  <item label="1/8 weight of current sample" override="1/8"/>
                  <item label="1/16 weight of current sample" override="1/16"/-->
                </combo>
              </checkbox>
              <branch label="Calibration">
                <checkbox label="Calibration enable" define="ADC2.CTRL1.CALIB_EN[3]"/>
              </branch>
              <branch label="Interrupt">
                <checkbox label="Upper Threshold" define="ADC2.VCP_UP_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_BDRV=1" uielement="branch">
                  <checkbox label="Enable Interrupt" define="SCUPM.BDRV_IRQ_CTRL.VCP_UPTH_IE" header="int_defines.h"/>
                  <edit label="Call Back" define="ADC2.VCP_UP_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
                </checkbox>
                <checkbox label="Lower Threshold" define="ADC2.VCP_LO_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_BDRV=1" uielement="branch">
                  <checkbox label="Enable Interrupt" define="SCUPM.BDRV_IRQ_CTRL.VCP_LOWTH1_IE" header="int_defines.h"/>
                  <edit label="Call Back" define="ADC2.VCP_LO_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
                </checkbox>
              </branch>
              <math label="Conversion Time" unit="us" formula="ADC2.CONV_TIME+1/SCU.APCLK_MI_CLK*(ADC2.CTRL1.CALIB_EN[3]*13+ADC2.CTRL4.FILT_OUT_SEL_5_0[3]*(2^(ADC2.FILTCOEFF0_5.CH3+1)))"/>
            </branch>
            <branch label="Channel 4 - MON">
              <doublespinbox suffix=" V" label="Upper Threshold" define="ADC2.CH4_UPTH_VOLT" svd="0" range="3.0;30.0" default="16.88"/>
              <doublespinbox suffix=" V" label="Lower Threshold" define="ADC2.CH4_LOTH_VOLT" svd="0" range="3.0;30.0" default="5.078"/>
              <math label="Upper Threshold value" define="ADC2.TH4_5_UPPER.CH4" formula="trunc(ADC2.CH4_UPTH_VOLT*0.039*255/1.211)"/>
              <math label="Lower Threshold value" define="ADC2.TH4_5_LOWER.CH4" formula="trunc(ADC2.CH4_LOTH_VOLT*0.039*255/1.211)"/>
              <branch label="Mode">
                <combo label="Measurement Mode" define="ADC2.MMODE0_5.Ch4">
                  <item label="Upper and lower limits" override="MMODE0"/>
                  <item label="Lower limits" override="MMODEUV"/>
                  <item label="Upper limits" override="MMODEOV"/>
                </combo>
                <branch label="Upper Hysteresis">
                  <combo label="Hysteresis" define="ADC2.CNT4_5_UPPER.HYST_UP_CH4">
                    <item label="hysteresis off" override="HYSTOFF"/>
                  </combo>
                  <combo label="Event Count" define="ADC2.CNT4_5_UPPER.CNT_UP_CH4">
                  </combo>
                </branch>
                <branch label="Lower Hysteresis">
                  <combo label="Hysteresis" define="ADC2.CNT4_5_LOWER.HYST_LO_CH4">
                    <item label="hysteresis off" override="HYSTOFF"/>
                  </combo>
                  <combo label="Event Count" define="ADC2.CNT4_5_LOWER.CNT_LO_CH4">
                  </combo>
                </branch>
              </branch>
              <checkbox label="Filter" define="ADC2.CTRL4.FILT_OUT_SEL_5_0[4]" uielement="branch">
                <checkbox label="Upper Threshold Filter" define="ADC2.FILT_UP_CTRL.Ch4_EN"/>
                <checkbox label="Lower Threshold Filter" define="ADC2.FILT_LO_CTRL.Ch4_EN"/>
                <combo label="Coefficient" define="ADC2.FILTCOEFF0_5.CH4">
                  <!--item label="1/2 weight of current sample" override="1/2"/>
                  <item label="1/4 weight of current sample" override="1/4"/>
                  <item label="1/8 weight of current sample" override="1/8"/>
                  <item label="1/16 weight of current sample" override="1/16"/-->
                </combo>
              </checkbox>
              <branch label="Calibration">
                <checkbox label="Calibration enable" define="ADC2.CTRL1.CALIB_EN[4]"/>
              </branch>
              <branch label="Interrupt">
                <checkbox label="Upper Threshold" define="ADC2.MON_UP_INT_EN" svd="0" header="isr_defines.h" lockon="SCU.NMICON.NMISUP=1" uielement="branch">
                  <checkbox label="Enable Interrupt" define="SCUPM.SYS_SUPPLY_IRQ_CTRL.MON_OV_IE" header="int_defines.h"/>
                  <edit label="Call Back" define="ADC2.MON_UP_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
                </checkbox>
                <checkbox label="Lower Threshold" define="ADC2.MON_LO_INT_EN" svd="0" header="isr_defines.h" lockon="SCU.NMICON.NMISUP=1" uielement="branch">
                  <checkbox label="Enable Interrupt" define="SCUPM.SYS_SUPPLY_IRQ_CTRL.MON_UV_IE" header="int_defines.h"/>
                  <edit label="Call Back" define="ADC2.MON_LO_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
                </checkbox>
              </branch>
              <math label="Conversion Time" unit="us" formula="ADC2.CONV_TIME+1/SCU.APCLK_MI_CLK*(ADC2.CTRL1.CALIB_EN[4]*13+ADC2.CTRL4.FILT_OUT_SEL_5_0[4]*(2^(ADC2.FILTCOEFF0_5.CH4+1)))"/>
            </branch>
            <branch label="Channel 5 - VDDP">
              <doublespinbox suffix=" V" label="Upper Threshold" define="ADC2.CH5_UPTH_VOLT" svd="0" range="3.0;6.0" default="5.50"/>
              <doublespinbox suffix=" V" label="Lower Threshold" define="ADC2.CH5_LOTH_VOLT" svd="0" range="3.0;6.0" default="4.50"/>
              <math label="Upper Threshold value" define="ADC2.TH4_5_UPPER.CH5" formula="trunc(ADC2.CH5_UPTH_VOLT*0.164*255/1.211)"/>
              <math label="Lower Threshold value" define="ADC2.TH4_5_LOWER.CH5" formula="trunc(ADC2.CH5_LOTH_VOLT*0.164*255/1.211)"/>
              <branch label="Mode">
                <combo label="Measurement Mode" define="ADC2.MMODE0_5.Ch5">
                  <item label="Upper and lower limits" override="MMODE0"/>
                  <item label="Lower limits" override="MMODEUV"/>
                  <item label="Upper limits" override="MMODEOV"/>
                </combo>
                <branch label="Upper Hysteresis">
                  <combo label="Hysteresis" define="ADC2.CNT4_5_UPPER.HYST_UP_CH5">
                    <item label="hysteresis off" override="HYSTOFF"/>
                  </combo>
                  <combo label="Event Count" define="ADC2.CNT4_5_UPPER.CNT_UP_CH5">
                  </combo>
                </branch>
                <branch label="Lower Hysteresis">
                  <combo label="Hysteresis" define="ADC2.CNT4_5_LOWER.HYST_LO_CH5">
                    <item label="hysteresis off" override="HYSTOFF"/>
                  </combo>
                  <combo label="Event Count" define="ADC2.CNT4_5_LOWER.CNT_LO_CH5">
                  </combo>
                </branch>
              </branch>               
              <checkbox label="Filter" define="ADC2.CTRL4.FILT_OUT_SEL_5_0[5]" uielement="branch">
                <checkbox label="Upper Threshold Filter" define="ADC2.FILT_UP_CTRL.Ch5_EN"/>
                <checkbox label="Lower Threshold Filter" define="ADC2.FILT_LO_CTRL.Ch5_EN"/>
                <combo label="Coefficient" define="ADC2.FILTCOEFF0_5.CH5">
                  <!--item label="1/2 weight of current sample" override="1/2"/>
                  <item label="1/4 weight of current sample" override="1/4"/>
                  <item label="1/8 weight of current sample" override="1/8"/>
                  <item label="1/16 weight of current sample" override="1/16"/-->
                </combo>
              </checkbox>
              <branch label="Calibration">
                <checkbox label="Calibration enable" define="ADC2.CTRL1.CALIB_EN[5]"/>
              </branch>
              <branch label="Interrupt">
                <checkbox label="Upper Threshold" define="ADC2.VDDP_UP_INT_EN" svd="0" header="isr_defines.h" lockon="SCU.NMICON.NMISUP=1" uielement="branch">
                  <checkbox label="Enable Interrupt" define="SCUPM.SYS_SUPPLY_IRQ_CTRL.VDD5V_OV_IE" header="int_defines.h"/>
                  <edit label="Call Back" define="ADC2.VDDP_UP_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
                </checkbox>
                <checkbox label="Lower Threshold" define="ADC2.VDDP_LO_INT_EN" svd="0" header="isr_defines.h" lockon="SCU.NMICON.NMISUP=1" uielement="branch">
                  <checkbox label="Enable Interrupt" define="SCUPM.SYS_SUPPLY_IRQ_CTRL.VDD5V_UV_IE" header="int_defines.h"/>
                  <edit label="Call Back" define="ADC2.VDDP_LO_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
                </checkbox>
              </branch>
              <math label="Conversion Time" unit="us" formula="ADC2.CONV_TIME+1/SCU.APCLK_MI_CLK*(ADC2.CTRL1.CALIB_EN[5]*13+ADC2.CTRL4.FILT_OUT_SEL_5_0[5]*(2^(ADC2.FILTCOEFF0_5.CH5+1)))"/>
            </branch>
            <branch label="Channel 6 - VAREF">
              <doublespinbox suffix=" V" label="Upper Threshold" define="ADC2.CH6_UPTH_VOLT" svd="0" range="3.0;6.0" default="5.50"/>
              <doublespinbox suffix=" V" label="Lower Threshold" define="ADC2.CH6_LOTH_VOLT" svd="0" range="3.0;6.0" default="4.50"/>
              <math label="Upper Threshold value" define="ADC2.TH6_9_UPPER.CH6" formula="trunc(ADC2.CH6_UPTH_VOLT*0.219*255/1.211)"/>
              <math label="Lower Threshold value" define="ADC2.TH6_9_LOWER.CH6" formula="trunc(ADC2.CH6_LOTH_VOLT*0.219*255/1.211)"/>
              <branch label="Mode - protected, cannot be changed"/>
              <checkbox label="Filter" define="ADC2.CTRL4.FILT_OUT_SEL_9_6[0]"/>
              <branch label="Interrupt">
                <checkbox label="Upper Threshold" define="ADC2.VAREF_UP_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_ADC1=1" uielement="branch">
                  <checkbox label="Enable Interrupt" define="SCUPM.SYS_IRQ_CTRL.VREF5V_UPTH_IE" header="int_defines.h"/>
                  <edit label="Call Back" define="ADC2.VAREF_UP_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
                </checkbox>
                <checkbox label="Lower Threshold" define="ADC2.VAREF_LO_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_ADC1=1" uielement="branch">
                  <checkbox label="Enable Interrupt" define="SCUPM.SYS_IRQ_CTRL.VREF5V_LOWTH_IE" header="int_defines.h"/>
                  <edit label="Call Back" define="ADC2.VAREF_LO_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
                </checkbox>
                <checkbox label="Over Load" define="ADC2.VAREF_OL_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_ADC1=1" uielement="branch">
                  <checkbox label="Enable Interrupt" define="SCUPM.SYS_IRQ_CTRL.VREF5V_OVL_IE" header="int_defines.h"/>
                  <edit label="Call Back" define="ADC2.VAREF_OL_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
                </checkbox>
              </branch>
              <math label="Conversion Time" unit="us" formula="ADC2.CONV_TIME+1/SCU.APCLK_MI_CLK*(0*13+ADC2.CTRL4.FILT_OUT_SEL_9_6[0]*8)"/>
            </branch>
            <branch label="Channel 7 - VBG !do not change!">
              <doublespinbox suffix=" V" label="Upper Threshold" define="ADC2.CH7_UPTH_VOLT" svd="0" range="1.0;2.0" default="1.30"/>
              <doublespinbox suffix=" V" label="Lower Threshold" define="ADC2.CH7_LOTH_VOLT" svd="0" range="1.0;2.0" default="1.01"/>
              <math label="Upper Threshold value" define="ADC2.TH6_9_UPPER.CH7" formula="trunc(ADC2.CH7_UPTH_VOLT*0.75*255/1.211)"/>
              <math label="Lower Threshold value" define="ADC2.TH6_9_LOWER.CH7" formula="trunc(ADC2.CH7_LOTH_VOLT*0.75*255/1.211)"/>
              <branch label="Mode - protected, cannot be changed"/>
              <checkbox label="Filter" define="ADC2.CTRL4.FILT_OUT_SEL_9_6[1]"/>
              <branch label="Interrupt">
                <checkbox label="Upper Threshold" define="ADC2.VBG_UP_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_ADC2=1" uielement="branch">
                  <checkbox label="Enable Interrupt" define="SCUPM.SYS_IRQ_CTRL.REFBG_UPTHWARN_IE" header="int_defines.h"/>
                  <edit label="Call Back" define="ADC2.VBG_UP_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
                </checkbox>
                <checkbox label="Lower Threshold" define="ADC2.VBG_LO_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_ADC2=1" uielement="branch">
                  <checkbox label="Enable Interrupt" define="SCUPM.SYS_IRQ_CTRL.REFBG_LOTHWARN_IE" header="int_defines.h"/>
                  <edit label="Call Back" define="ADC2.VBG_LO_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
                </checkbox>
              </branch>
              <math label="Conversion Time" unit="us" formula="ADC2.CONV_TIME+1/SCU.APCLK_MI_CLK*(0*13+ADC2.CTRL4.FILT_OUT_SEL_9_6[1]*8)"/>
            </branch>
            <branch label="Channel 8 - VDDC">
              <doublespinbox suffix=" V" label="Upper Threshold" define="ADC2.CH8_UPTH_VOLT" svd="0" range="1.0;2.0" default="1.60"/>
              <doublespinbox suffix=" V" label="Lower Threshold" define="ADC2.CH8_LOTH_VOLT" svd="0" range="1.0;2.0" default="1.35"/>
              <math label="Upper Threshold value" define="ADC2.TH6_9_UPPER.CH8" formula="trunc(ADC2.CH8_UPTH_VOLT*0.75*255/1.211)"/>
              <math label="Lower Threshold value" define="ADC2.TH6_9_LOWER.CH8" formula="trunc(ADC2.CH8_LOTH_VOLT*0.75*255/1.211)"/>
              <branch label="Mode - protected, cannot be changed"/>
              <checkbox label="Filter" define="ADC2.CTRL4.FILT_OUT_SEL_9_6[2]"/>
              <branch label="Interrupt">
                <checkbox label="Upper Threshold" define="ADC2.VDDC_UP_INT_EN" svd="0" header="isr_defines.h" lockon="SCU.NMICON.NMISUP=1" uielement="branch">
                  <checkbox label="Enable Interrupt" define="SCUPM.SYS_SUPPLY_IRQ_CTRL.VDD1V5_OV_IE" header="int_defines.h"/>
                  <edit label="Call Back" define="ADC2.VDDC_UP_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
                </checkbox>
                <checkbox label="Lower Threshold" define="ADC2.VDDC_LO_INT_EN" svd="0" header="isr_defines.h" lockon="SCU.NMICON.NMISUP=1" uielement="branch">
                  <checkbox label="Enable Interrupt" define="SCUPM.SYS_SUPPLY_IRQ_CTRL.VDD1V5_UV_IE" header="int_defines.h"/>
                  <edit label="Call Back" define="ADC2.VDDC_LO_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
                </checkbox>
              </branch>
              <math label="Conversion Time" unit="us" formula="ADC2.CONV_TIME+1/SCU.APCLK_MI_CLK*(0*13+ADC2.CTRL4.FILT_OUT_SEL_9_6[2]*8)"/>
            </branch>
            <branch label="Channel 9 - Temperature Sensor">
              <doublespinbox suffix=" C" label="Upper Threshold" define="ADC2.CH9_UPTH_DEG" svd="0" range="-40;250" default="200.00"/>
              <doublespinbox suffix=" C" label="Prewarning Threshold" define="ADC2.CH9_LOTH_DEG" svd="0" range="-40;250" default="150.00"/>
              <math label="Upper Threshold value" define="ADC2.TH6_9_UPPER.CH9" formula="trunc(((ADC2.CH9_UPTH_DEG*2.31+666)/4.749)+1)"/>
              <math label="Prewarning Threshold value" define="ADC2.TH6_9_LOWER.CH9" formula="trunc(((ADC2.CH9_LOTH_DEG*2.31+666)/4.749)+1)"/>
              <branch label="Mode - protected, cannot be changed"/>
              <checkbox label="Filter" define="ADC2.CTRL4.FILT_OUT_SEL_9_6[3]"/>
              <branch label="Interrupt">
                <radio define="ADC2.CTRL2.TSENSE_SD_SEL">
                  <radiobutton label="PMU Temperature" uielement="branch">
                    <checkbox label="Over Temperature" define="ADC2.PMU_TEMP_UP_INT_EN" svd="0" header="isr_defines.h" lockon="SCU.NMICON.NMIOT=1" uielement="branch">
                      <checkbox label="Enable Interrupt" define="SCUPM.SYS_IRQ_CTRL.PMU_OT_IE" header="int_defines.h"/>
                      <edit label="Call Back" define="ADC2.PMU_TEMP_UP_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
                    </checkbox>
                    <checkbox label="Prewarning Temperature" define="ADC2.PMU_TEMP_LO_INT_EN" svd="0" header="isr_defines.h" lockon="SCU.NMICON.NMIOT=1" uielement="branch">
                      <checkbox label="Enable Interrupt" define="SCUPM.SYS_IRQ_CTRL.PMU_OTWARN_IE" header="int_defines.h"/>
                      <edit label="Call Back" define="ADC2.PMU_TEMP_LO_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
                    </checkbox>
                  </radiobutton>
                  <radiobutton label="System Temperature" uielement="branch">
                    <checkbox label="Over Temperature" define="ADC2.SYS_TEMP_UP_INT_EN" svd="0" header="isr_defines.h" lockon="SCU.NMICON.NMIOT=1" uielement="branch">
                      <checkbox label="Enable Interrupt" define="SCUPM.SYS_IRQ_CTRL.SYS_OT_IE" header="int_defines.h"/>
                      <edit label="Call Back" define="ADC2.SYS_TEMP_UP_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
                    </checkbox>
                    <checkbox label="Prewarning Temperature" define="ADC2.SYS_TEMP_LO_INT_EN" svd="0" header="isr_defines.h" lockon="SCU.NMICON.NMIOT=1" uielement="branch">
                      <checkbox label="Enable Interrupt" define="SCUPM.SYS_IRQ_CTRL.SYS_OTWARN_IE" header="int_defines.h"/>
                      <edit label="Call Back" define="ADC2.SYS_TEMP_LO_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
                    </checkbox>
                  </radiobutton>
                </radio>
              </branch>
              <math label="Conversion Time" unit="us" formula="ADC2.CONV_TIME+1/SCU.APCLK_MI_CLK*(0*13+ADC2.CTRL4.FILT_OUT_SEL_9_6[3]*16)"/>
            </branch>
          </branch>
        </checkbox>
      </header>
    </treecontainer>
    <treecontainer headerlabels="Structure;Settings;" label="BDRV" desc="Bridge Driver (incl. Charge Pump)" columnwidths="300;300">
      <header file="bdrv_defines.h">
        <checkbox define="BDRV.CP_CTRL_STS.CP_EN" label="Charge Pump Settings" uielement="branch">
          <checkbox label="Charge Pump Clock" define="BDRV.CP_CLK_CTRL.CPCLK_EN" default="1" uielement="branch">
            <branch label="Clock Source">
              <radio define="SCU.APCLK_CTRL1.CPCLK_SEL" header="scu_defines.h">
                <radiobutton label="LP_CLK (~18 MHz)"/>
                <radiobutton label="fSYS" uielement="branch">
                  <combo label="Clock Divider" define="SCU.APCLK_CTRL1.CPCLK_DIV" header="scu_defines.h" default="label=fSYS / 2">
                    <item label="fSYS" value="1" override="value2"/>
                    <item label="fSYS / 2" value="0" override="value1"/>
                  </combo>
                </radiobutton>
              </radio>
            </branch>
            <math visible="true" define="BDRV.CP_CLK_SRC" svd="0" formula="SCU.APCLK_CTRL1.CPCLK_SEL&lt;1?18000000:SCU.APCLK_CTRL1.CPCLK_DIV&lt;1?SCU.FSYS/2:SCU.FSYS"/>
            <math label="Charge Pump Clock" unit="kHz" define="BDRV.CP_CLK" svd="0" formula="BDRV.CP_CLK_SRC/80000"/>
            <spinbox suffix=" kHz" label="Upper Dither Freq." define="BDRV.UP_DITH_FREQ" svd="0" default="243"/>
            <spinbox suffix=" kHz" label="Lower Dither Freq." define="BDRV.LO_DITH_FREQ" svd="0" default="209"/>
            <math label="Upper Dither Freq. (eff.)" unit="kHz" define="BDRV.UP_DITH" svd="0" formula="(BDRV.CP_CLK_SRC/((BDRV.CP_CLK_CTRL.F_CP*32)+BDRV.CP_CLK_CTRL.DITH_UPPER))/1000"/>
            <math label="Lower Dither Freq. (eff.)" unit="kHz" define="BDRV.LO_DITH" svd="0" formula="(BDRV.CP_CLK_SRC/((BDRV.CP_CLK_CTRL.F_CP*32)+BDRV.CP_CLK_CTRL.DITH_LOWER))/1000"/>
            <branch label="Register Values">
              <math label="F_CP (max. 0x3)" define="BDRV.CP_CLK_CTRL.F_CP" format="%1X" formula="trunc((BDRV.CP_CLK_SRC/(BDRV.UP_DITH_FREQ*1000))/32)"/>
              <math label="DITH_UPPER (max. 0x1F)" define="BDRV.CP_CLK_CTRL.DITH_UPPER" format="%02X" formula="(BDRV.CP_CLK_SRC/(BDRV.UP_DITH_FREQ*1000)).*31"/>
              <math label="DITH_LOWER (max. 0x1F)" define="BDRV.CP_CLK_CTRL.DITH_LOWER" format="%02X" formula="(BDRV.CP_CLK_SRC/(BDRV.LO_DITH_FREQ*1000)).*31"/>
            </branch>
          </checkbox>
          <branch label="Charge Pump Output">
            <radio define="BDRV.CP_CTRL_STS.VCP9V_SET">
              <radiobutton label="Charge Pump Output 14V"/>
              <radiobutton label="Charge Pump Output 9V" uielement="branch" lockon="BDRV.CP_CTRL_STS.CPLOPWRM_EN=1">
                <combo label="9V Trim" define="BDRV.CP_CTRL_STS.VTHVCP9V_TRIM" default="label=9.0V">
                  <item label="7.5V" override="Threshold0"/>
                  <item label="8.0V" override="Threshold1"/>
                  <item label="8.5V" override="Threshold2"/>
                  <item label="9.0V" override="Threshold3"/>
                </combo>
                <checkbox label="Low Power Enable" define="BDRV.CP_CTRL_STS.CPLOPWRM_EN"/>
              </radiobutton>
            </radio>
          </branch>
        </checkbox>
        <branch label="Diagnosis Settings">
          <branch label="Charge Pump Diagnosis">
            <combo label="Driver shutdown on VSD overvoltage" define="BDRV.CP_CTRL_STS.DRVx_VSDUP_DIS" default="label=No DRVx shutdown, driver enabled">
              <item label="DRVx shutdown, driver disabled" override="Driver_Disabled"/>
              <item label="No DRVx shutdown, driver enabled" override="Driver_Enabled"/>
            </combo>
            <combo label="Driver shutdown on VSD undervoltage" define="BDRV.CP_CTRL_STS.DRVx_VSDLO_DIS" default="label=No DRVx shutdown, driver enabled">
              <item label="DRVx shutdown, driver disabled" override="Driver_Disabled"/>
              <item label="No DRVx shutdown, driver enabled" override="Driver_Enabled"/>
            </combo>
            <combo label="Driver shutdown on VCP overvoltage" define="BDRV.CP_CTRL_STS.DRVx_VCPUP_DIS" default="label=No DRVx shutdown, driver enabled">
              <item label="DRVx shutdown, driver disabled" override="Driver_Disabled"/>
              <item label="No DRVx shutdown, driver enabled" override="Driver_Enabled"/>
            </combo>
            <combo label="Driver shutdown on VCP undervoltage" define="BDRV.CP_CTRL_STS.DRVx_VCPLO_DIS" default="label=No DRVx shutdown, driver enabled">
              <item label="DRVx shutdown, driver disabled" override="Driver_Disabled"/>
              <item label="No DRVx shutdown, driver enabled" override="Driver_Enabled"/>
            </combo>
            <combo label="VCP Low Voltage Threshold" define="BDRV.CP_CTRL_STS.VCP_LOWTH2" default="label=7.325V">
              <item label="7.325V" override="Threshold0"/>
              <item label="7.654V" override="Threshold1"/>
              <item label="7.982V" override="Threshold2"/>
              <item label="8.309V" override="Threshold3"/>
              <item label="8.638V" override="Threshold4"/>
              <item label="8.966V" override="Threshold5"/>
              <item label="9.293V" override="Threshold6"/>
              <item label="9.620V" override="Threshold7"/>
            </combo>
            <combo label="VCP Low Voltage Filter Time" define="BDRV.TRIM_DRVx.CPLOW_TFILT_SEL" default="label=4us">
              <item label="4us" override="4_us"/>
              <item label="8us" override="8_us"/>
              <item label="16us" override="16_us"/>
              <item label="32us" override="32_us"/>
            </combo>
            <checkbox label="VCP Low Voltage Interrupt" define="BDRV.VCP_LO2_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_BDRV=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCUPM.BDRV_IRQ_CTRL.VCP_LOWTH2_IE" header="int_defines.h"/>
              <edit label="Call Back" define="BDRV.VCP_LO_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
          </branch>
          <branch label="Fast Discharge">
            <checkbox label="LS1 Fast-Discharge" role="inverted" define="BDRV.TRIM_DRVx.LS1DRV_FDISCHG_DIS"/>
            <checkbox label="LS2 Fast-Discharge" role="inverted" define="BDRV.TRIM_DRVx.LS2DRV_FDISCHG_DIS"/>
            <checkbox label="LS3 Fast-Discharge" role="inverted" define="BDRV.TRIM_DRVx.LS3DRV_FDISCHG_DIS"/>
            <checkbox label="HS1 Fast-Discharge" role="inverted" define="BDRV.TRIM_DRVx.HS1DRV_FDISCHG_DIS"/>
            <checkbox label="HS2 Fast-Discharge" role="inverted" define="BDRV.TRIM_DRVx.HS2DRV_FDISCHG_DIS"/>
            <checkbox label="HS3 Fast-Discharge" role="inverted" define="BDRV.TRIM_DRVx.HS3DRV_FDISCHG_DIS"/>
          </branch>
          <branch label="Over-Current Shutdown">
            <radio label="Over-Current Shutdown" define="BDRV.HSx_LSx_OC_DIS" svd="0">
              <radiobutton label="Global Shutdown" define="BDRV.HSx_LSx_OC_DIS_GLOB" svd="0" lockon="BDRV.CTRL1.LS1_OC_DIS=0;BDRV.CTRL1.HS1_OC_DIS=0;BDRV.CTRL1.LS2_OC_DIS=0;BDRV.CTRL1.HS2_OC_DIS=0;BDRV.CTRL2.LS3_OC_DIS=0;BDRV.CTRL2.HS3_OC_DIS=0"/>
              <radiobutton label="Local Shutdown" define="BDRV.HSx_LSx_OC_DIS_LOC" svd="0" uielement="branch">
                <checkbox label="LS1 Over-Current Shutdown" default="1" define="BDRV.CTRL1.LS1_OC_DIS"/>
                <checkbox label="HS1 Over-Current Shutdown" default="1" define="BDRV.CTRL1.HS1_OC_DIS"/>
                <checkbox label="LS2 Over-Current Shutdown" default="1" define="BDRV.CTRL1.LS2_OC_DIS"/>
                <checkbox label="HS2 Over-Current Shutdown" default="1" define="BDRV.CTRL1.HS2_OC_DIS"/>
                <checkbox label="LS3 Over-Current Shutdown" default="1" define="BDRV.CTRL2.LS3_OC_DIS"/>
                <checkbox label="HS3 Over-Current Shutdown" default="1" define="BDRV.CTRL2.HS3_OC_DIS"/>
              </radiobutton>
            </radio>
          </branch>
          <branch label="Pre-Driver Over-Current Shutdown">
            <checkbox label="LS1 Pre-Driver Over-Current Shutdown" role="inverted" define="BDRV.TRIM_DRVx.LS1DRV_OCSDN_DIS"/>
            <checkbox label="LS2 Pre-Driver Over-Current Shutdown" role="inverted" define="BDRV.TRIM_DRVx.LS2DRV_OCSDN_DIS"/>
            <checkbox label="LS3 Pre-Driver Over-Current Shutdown" role="inverted" define="BDRV.TRIM_DRVx.LS3DRV_OCSDN_DIS"/>
            <checkbox label="HS1 Pre-Driver Over-Current Shutdown" role="inverted" define="BDRV.TRIM_DRVx.HS1DRV_OCSDN_DIS"/>
            <checkbox label="HS2 Pre-Driver Over-Current Shutdown" role="inverted" define="BDRV.TRIM_DRVx.HS2DRV_OCSDN_DIS"/>
            <checkbox label="HS3 Pre-Driver Over-Current Shutdown" role="inverted" define="BDRV.TRIM_DRVx.HS3DRV_OCSDN_DIS"/>
          </branch>
          <branch label="Drain-Source Monitoring">
            <combo label="HS DS-Monitoring Filter Time" define="BDRV.TRIM_DRVx.HSDRV_DS_TFILT_SEL" default="label=1us">
              <item label="1us" override="1_us"/>
              <item label="2us" override="2_us"/>
              <item label="4us" override="4_us"/>
              <item label="8us" override="8_us"/>
            </combo>
            <combo label="LS DS-Monitoring Filter Time" define="BDRV.TRIM_DRVx.LSDRV_DS_TFILT_SEL" default="label=1us">
              <item label="1us" override="1_us"/>
              <item label="2us" override="2_us"/>
              <item label="4us" override="4_us"/>
              <item label="8us" override="8_us"/>
            </combo>
            <combo label="DS-Monitoring Blanking Time" define="BDRV.TRIM_DRVx.LS_HS_BT_TFILT_SEL" default="label=1us">
              <item label="1us" override="1_us"/>
              <item label="2us" override="2_us"/>
              <item label="4us" override="4_us"/>
              <item label="8us" override="8_us"/>
            </combo>
            <combo label="DS-Monitoring Threshold" define="BDRV.CTRL3.DSMONVTH" default="label=0.50V">
              <item label="0.25V" override="value0"/>
              <item label="0.50V" override="value1"/>
              <item label="0.75V" override="value2"/>
              <item label="1.00V" override="value3"/>
              <item label="1.25V" override="value4"/>
              <item label="1.50V" override="value5"/>
              <item label="1.75V" override="value6"/>
              <item label="2.00V" override="value7"/>
            </combo>
          </branch>
          <branch label="Interrupts">
            <checkbox label="HS1 Over Current" define="BDRV.HS1_OC_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_BDRV=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCUPM.BDRV_IRQ_CTRL.HS1_OC_IE" header="int_defines.h"/>
              <edit label="Call Back" define="BDRV.HS1_OC_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
            <checkbox label="LS1 Over Current" define="BDRV.LS1_OC_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_BDRV=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCUPM.BDRV_IRQ_CTRL.LS1_OC_IE" header="int_defines.h"/>
              <edit label="Call Back" define="BDRV.LS1_OC_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
            <checkbox label="HS2 Over Current" define="BDRV.HS2_OC_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_BDRV=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCUPM.BDRV_IRQ_CTRL.HS2_OC_IE" header="int_defines.h"/>
              <edit label="Call Back" define="BDRV.HS2_OC_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
            <checkbox label="LS2 Over Current" define="BDRV.LS2_OC_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_BDRV=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCUPM.BDRV_IRQ_CTRL.LS2_OC_IE" header="int_defines.h"/>
              <edit label="Call Back" define="BDRV.LS2_OC_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
            <checkbox label="HS3 Over Current" define="BDRV.HS3_OC_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_BDRV=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCUPM.BDRV_IRQ_CTRL.HS3_OC_IE" header="int_defines.h"/>
              <edit label="Call Back" define="BDRV.HS3_OC_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
            <checkbox label="LS3 Over Current" define="BDRV.LS3_OC_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_BDRV=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCUPM.BDRV_IRQ_CTRL.LS3_OC_IE" header="int_defines.h"/>
              <edit label="Call Back" define="BDRV.LS3_OC_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
            <checkbox label="HS1 Drain Source Monitoring" define="BDRV.HS1_DS_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_BDRV=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCUPM.BDRV_IRQ_CTRL.HS1_DS_IE" header="int_defines.h"/>
              <edit label="Call Back" define="BDRV.HS1_DS_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
            <checkbox label="LS1 Drain Source Monitoring" define="BDRV.LS1_DS_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_BDRV=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCUPM.BDRV_IRQ_CTRL.LS1_DS_IE" header="int_defines.h"/>
              <edit label="Call Back" define="BDRV.LS1_DS_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
            <checkbox label="HS2 Drain Source Monitoring" define="BDRV.HS2_DS_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_BDRV=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCUPM.BDRV_IRQ_CTRL.HS2_DS_IE" header="int_defines.h"/>
              <edit label="Call Back" define="BDRV.HS2_DS_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
            <checkbox label="LS2 Drain Source Monitoring" define="BDRV.LS2_DS_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_BDRV=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCUPM.BDRV_IRQ_CTRL.LS2_DS_IE" header="int_defines.h"/>
              <edit label="Call Back" define="BDRV.LS2_DS_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
            <checkbox label="HS3 Drain Source Monitoring" define="BDRV.HS3_DS_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_BDRV=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCUPM.BDRV_IRQ_CTRL.HS3_DS_IE" header="int_defines.h"/>
              <edit label="Call Back" define="BDRV.HS3_DS_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
            <checkbox label="LS3 Drain Source Monitoring" define="BDRV.LS3_DS_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_BDRV=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCUPM.BDRV_IRQ_CTRL.LS3_DS_IE" header="int_defines.h"/>
              <edit label="Call Back" define="BDRV.LS3_DS_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
          </branch>
          <branch label="Cross-Current Protection">
            <radio define="BDRV.CTRL3.DRV_CCP_DIS">
              <radiobutton label="Enable CCP" uielement="branch">
                <combo label="Time Multiplier (BF-Step)" define="BDRV.TRIM_DRVx.DRV_CCPTIMMUL" default="label=1x">
                  <item label="1x" override="MUL1"/>
                  <item label="2x" override="MUL2"/>
                  <item label="4x" override="MUL4"/>
                </combo>
                <combo label="Time" define="BDRV.CTRL3.DRV_CCP_TIMSEL" default="label=0.2us">
                  <item label="0.2us" override="value0"/>
                  <item label="0.4us" override="value1"/>
                  <item label="0.8us" override="value2"/>
                  <item label="1.6us" override="value3"/>
                </combo>
              </radiobutton>
              <radiobutton label="Disable CCP"/>
            </radio>
          </branch>
        </branch>
        <branch label="Gate Charge/Discharge">
          <text label="Effect. values are approximations!"/>
          <branch label="Gate Charge" expand="1">
            <combo label="Charge Current Range" define="BDRV.CTRL3.ICHARGEDIV2_N" default="label=10..150mA" size="150;-1">
              <item label="10..150mA" override="Half_Range"/>
              <item label="20..300mA" override="Full_Range"/>
            </combo>
            <horizontalcontainer label="Charge Current (register value)" stretch="2">
              <spinbox label="Charge Current" define="BDRV.CTRL3.ICHARGE_TRIM" default="17" range="2;31" size="150;-1"/>
              <text label="Effect. current:"/>
              <math label="effective Charge Current (approx.)" unit="mA" define="BDRV.EFF_CRG_CURR" format="%4f" svd="0" formula="BDRV.CTRL3.ICHARGE_TRIM*5*(BDRV.CTRL3.ICHARGEDIV2_N+1)"/>
            </horizontalcontainer>
            <checkbox define="BDRV.CTRL3.ON_SEQ_EN" label="Charge Sequencer" uielement="branch">
              <horizontalcontainer label="Step 1 - Current (register value)" stretch="2">
                <spinbox label="Step 1 - Current" define="BDRV.ON_SEQ_CTRL.DRV_ON_I_1" range="2;31" size="150;-1"/>
                <text label="Effect. current:"/>
                <math unit="mA" define="BDRV.EFF_CRG_STEP1_CURR" format="%4f" svd="0" formula="BDRV.ON_SEQ_CTRL.DRV_ON_I_1*5*(BDRV.CTRL3.ICHARGEDIV2_N+1)"/>
              </horizontalcontainer>
              <combo label="Step 1 - Duration Time" define="BDRV.ON_SEQ_CTRL.DRV_ON_t_1" default="label=50ns" size="150;-1">
                <item label="50ns" override="50ns"/>
                <item label="100ns"/>
                <item label="150ns"/>
                <item label="200ns"/>
                <item label="250ns"/>
                <item label="300ns"/>
                <item label="350ns"/>
                <item label="400ns" override="400ns"/>
              </combo>
              <horizontalcontainer label="Step 2 - Current (register value)" stretch="2">
                <spinbox label="Step 2 - Current" define="BDRV.ON_SEQ_CTRL.DRV_ON_I_2" range="2;31" size="150;-1"/>
                <text label="Effect. current:"/>
                <math unit="mA" define="BDRV.EFF_CRG_STEP2_CURR" format="%4f" svd="0" formula="BDRV.ON_SEQ_CTRL.DRV_ON_I_2*5*(BDRV.CTRL3.ICHARGEDIV2_N+1)"/>
              </horizontalcontainer>
              <combo label="Step 2 - Duration Time" define="BDRV.ON_SEQ_CTRL.DRV_ON_t_2" default="label=50ns" size="150;-1">
                <item label="50ns" override="50ns"/>
                <item label="100ns"/>
                <item label="150ns"/>
                <item label="200ns"/>
                <item label="250ns"/>
                <item label="300ns"/>
                <item label="350ns"/>
                <item label="400ns" override="400ns"/>
              </combo>
              <horizontalcontainer label="Step 3 - Current (register value)" stretch="2">
                <spinbox label="Step 3 - Current" define="BDRV.ON_SEQ_CTRL.DRV_ON_I_3" range="2;31" size="150;-1"/>
                <text label="Effect. current:"/>
                <math unit="mA" define="BDRV.EFF_CRG_STEP3_CURR" format="%4f" svd="0" formula="BDRV.ON_SEQ_CTRL.DRV_ON_I_3*5*(BDRV.CTRL3.ICHARGEDIV2_N+1)"/>
              </horizontalcontainer>
              <combo label="Step 3 - Duration Time" define="BDRV.ON_SEQ_CTRL.DRV_ON_t_3" default="label=50ns" size="150;-1">
                <item label="50ns" override="50ns"/>
                <item label="100ns"/>
                <item label="150ns"/>
                <item label="200ns"/>
                <item label="250ns"/>
                <item label="300ns"/>
                <item label="350ns"/>
                <item label="400ns" override="400ns"/>
              </combo>
              <horizontalcontainer label="Step 4 - Current (register value)" stretch="2">
                <spinbox label="Step 4 - Current" define="BDRV.ON_SEQ_CTRL.DRV_ON_I_4" range="2;31" size="150;-1"/>
                <text label="Effect. current:"/>
                <math unit="mA" define="BDRV.EFF_CRG_STEP4_CURR" format="%4f" svd="0" formula="BDRV.ON_SEQ_CTRL.DRV_ON_I_4*5*(BDRV.CTRL3.ICHARGEDIV2_N+1)"/>
              </horizontalcontainer>
              <combo label="Step 4 - Duration Time" define="BDRV.ON_SEQ_CTRL.DRV_ON_t_4" default="label=50ns" size="150;-1">
                <item label="50ns" override="50ns"/>
                <item label="100ns"/>
                <item label="150ns"/>
                <item label="200ns"/>
                <item label="250ns"/>
                <item label="300ns"/>
                <item label="350ns"/>
                <item label="400ns" override="400ns"/>
              </combo>
            </checkbox>
          </branch>
          <branch label="Gate Discharge" expand="1">
            <combo label="Discharge Current Range" define="BDRV.CTRL3.IDISCHARGEDIV2_N" default="label=10..150mA" size="150;-1">
              <item label="10..150mA" override="Half_Range"/>
              <item label="20..300mA" override="Full_Range"/>
            </combo>
            <horizontalcontainer label="Discharge Current (register value)" stretch="2">
              <spinbox label="Discharge Current" define="BDRV.CTRL3.IDISCHARGE_TRIM" default="17" range="2;31" size="150;-1"/>
              <text label="Effect. current:"/>
              <math label="effective Discharge Current (approx.)" unit="mA" define="BDRV.EFF_DISCRG_CURR" format="%4f" svd="0" formula="BDRV.CTRL3.IDISCHARGE_TRIM*5*(BDRV.CTRL3.IDISCHARGEDIV2_N+1)"/>
            </horizontalcontainer>
            <checkbox define="BDRV.CTRL3.OFF_SEQ_EN" label="Discharge Sequencer" uielement="branch">
              <horizontalcontainer label="Step 1 - Current (register value)" stretch="2">
                <spinbox label="Step 1 - Current" define="BDRV.OFF_SEQ_CTRL.DRV_OFF_I_1" range="2;31" size="150;-1"/>
                <text label="Effect. current:"/>
                <math unit="mA" define="BDRV.EFF_DISCRG_STEP1_CURR" format="%4f" svd="0" formula="BDRV.OFF_SEQ_CTRL.DRV_OFF_I_1*5*(BDRV.CTRL3.IDISCHARGEDIV2_N+1)"/>
              </horizontalcontainer>
              <combo label="Step 1 - Duration Time" define="BDRV.OFF_SEQ_CTRL.DRV_OFF_t_1" default="label=50ns" size="150;-1">
                <item label="50ns" override="50ns"/>
                <item label="100ns"/>
                <item label="150ns"/>
                <item label="200ns"/>
                <item label="250ns"/>
                <item label="300ns"/>
                <item label="350ns"/>
                <item label="400ns" override="400ns"/>
              </combo>
              <horizontalcontainer label="Step 2 - Current (register value)" stretch="2">
                <spinbox label="Step 2 - Current" define="BDRV.OFF_SEQ_CTRL.DRV_OFF_I_2" range="2;31" size="150;-1"/>
                <text label="Effect. current:"/>
                <math unit="mA" define="BDRV.EFF_DISCRG_STEP2_CURR" format="%4f" svd="0" formula="BDRV.OFF_SEQ_CTRL.DRV_OFF_I_2*5*(BDRV.CTRL3.IDISCHARGEDIV2_N+1)"/>
              </horizontalcontainer>
              <combo label="Step 2 - Duration Time" define="BDRV.OFF_SEQ_CTRL.DRV_OFF_t_2" default="label=50ns" size="150;-1">
                <item label="50ns" override="50ns"/>
                <item label="100ns"/>
                <item label="150ns"/>
                <item label="200ns"/>
                <item label="250ns"/>
                <item label="300ns"/>
                <item label="350ns"/>
                <item label="400ns" override="400ns"/>
              </combo>
              <horizontalcontainer label="Step 3 - Current (register value)" stretch="2">
                <spinbox label="Step 3 - Current" define="BDRV.OFF_SEQ_CTRL.DRV_OFF_I_3" range="2;31" size="150;-1"/>
                <text label="Effect. current:"/>
                <math unit="mA" define="BDRV.EFF_DISCRG_STEP3_CURR" format="%4f" svd="0" formula="BDRV.OFF_SEQ_CTRL.DRV_OFF_I_3*5*(BDRV.CTRL3.IDISCHARGEDIV2_N+1)"/>
              </horizontalcontainer>
              <combo label="Step 3 - Duration Time" define="BDRV.OFF_SEQ_CTRL.DRV_OFF_t_3" default="label=50ns" size="150;-1">
                <item label="50ns" override="50ns"/>
                <item label="100ns"/>
                <item label="150ns"/>
                <item label="200ns"/>
                <item label="250ns"/>
                <item label="300ns"/>
                <item label="350ns"/>
                <item label="400ns" override="400ns"/>
              </combo>
              <horizontalcontainer label="Step 4 - Current (register value)" stretch="2">
                <spinbox label="Step 4 - Current" define="BDRV.OFF_SEQ_CTRL.DRV_OFF_I_4" range="2;31" size="150;-1"/>
                <text label="Effect. current:"/>
                <math unit="mA" define="BDRV.EFF_DISCRG_STEP4_CURR" format="%4f" svd="0" formula="BDRV.OFF_SEQ_CTRL.DRV_OFF_I_4*5*(BDRV.CTRL3.IDISCHARGEDIV2_N+1)"/>
              </horizontalcontainer>
              <combo label="Step 4 - Duration Time" define="BDRV.OFF_SEQ_CTRL.DRV_OFF_t_4" default="label=50ns" size="150;-1">
                <item label="50ns" override="50ns"/>
                <item label="100ns"/>
                <item label="150ns"/>
                <item label="200ns"/>
                <item label="250ns"/>
                <item label="300ns"/>
                <item label="350ns"/>
                <item label="400ns" override="400ns"/>
              </combo>
            </checkbox>
          </branch>
        </branch>
      </header>
    </treecontainer>
    <treecontainer headerlabels="Structure;Settings;" label="BEMF" desc="Back Electromagnetic Force" columnwidths="300;250">
      <header file="bdrv_defines.h">
        <checkbox label="BEMF Settings" define="MF.BEMFC_CTRL_STS.PHUCOMP_EN" uielement="branch">
          <math visible="false" define="MF.BEMFC_CTRL_STS.PHVCOMP_EN" formula="MF.BEMFC_CTRL_STS.PHUCOMP_EN"/><!-- to be compatible when loading old icwp files -->
          <math visible="false" define="MF.BEMFC_CTRL_STS.PHWCOMP_EN" formula="MF.BEMFC_CTRL_STS.PHUCOMP_EN"/><!-- to be compatible when loading old icwp files -->
          <checkbox label="Comparators enable" define="MF.BEMFC_CTRL_STS.PHUCOMP_ON"/>
          <math visible="false" define="MF.BEMFC_CTRL_STS.PHVCOMP_ON" formula="MF.BEMFC_CTRL_STS.PHUCOMP_ON"/><!-- to be compatible when loading old icwp files -->
          <math visible="false" define="MF.BEMFC_CTRL_STS.PHWCOMP_ON" formula="MF.BEMFC_CTRL_STS.PHUCOMP_ON"/><!-- to be compatible when loading old icwp files -->
          <checkbox label="connect to CCU6" define="MF.BEMFC_CTRL_STS.CCPOS_INSEL" lockon="CCU6.PISEL0.ISPOS0.label=CCPOS0_3 (P2.0) or BEMF Comp.;CCU6.PISEL0.ISPOS1.label=BEMF Comparator;CCU6.PISEL0.ISPOS2.label=CCPOS2_3 (P2.2) or BEMF Comp."/>
          <checkbox label="connect to GPT2.CAPIN" define="SCU.MODPISEL1.GPT12CAPINB" header="scu_defines.h" lockon="GPT12E.PISEL_ISCAPIN=1" uielement="branch">
            <combo label="Capture Input Select" define="MF.TRIM_BEMFx.BEMF_GPT_CAPIN_SEL" default="label=SWTRIG">
              <item label="SWTRIG" override="SWTRIG"/>
              <item label="Phase U" override="Phase_U"/>
              <item label="Phase V" override="Phase_V"/>
              <item label="Phase W" override="Phase_W"/>
            </combo>
          </checkbox>
          <combo label="Spike Filter Time" define="MF.TRIM_BEMFx.BEMF_TFILT_SEL" default="label=1us">
            <item label="1us" override="1_us"/>
            <item label="2us" override="2_us"/>
            <item label="4us" override="4_us"/>
            <item label="8us" override="8_us"/>
          </combo>
          <checkbox label="Blank Filter enable" role="inverted" define="MF.BEMFC_CTRL_STS.FILTBYPS" uielement="branch">
            <combo label="Blank Filter Time" define="MF.TRIM_BEMFx[2:0]" svd="0" default="label=3us">
              <item label="3us" value="4"/>
              <item label="6us" value="0"/>
              <item label="8us" value="1"/>
              <item label="12us" value="2"/>
              <item label="16us" value="3"/>
            </combo>
            <checkbox label="Demag. Pulse Filter enable" role="inverted" define="MF.BEMFC_CTRL_STS.DEMGFILTDIS"/>
          </checkbox>
          <branch label="Interrupt">
            <checkbox label="Phase U, X-ing, High" define="BEMF.U_HI_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_ADC2=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCUPM.SYS_IRQ_CTRL.PHU_ZCHI_IE" header="int_defines.h"/>
              <edit label="Call Back" define="BEMF.U_HI_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
            <checkbox label="Phase U, X-ing, Low" define="BEMF.U_LO_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_ADC2=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCUPM.SYS_IRQ_CTRL.PHU_ZCLOW_IE" header="int_defines.h"/>
              <edit label="Call Back" define="BEMF.U_LO_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
            <checkbox label="Phase V, X-ing, High" define="BEMF.V_HI_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_ADC2=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCUPM.SYS_IRQ_CTRL.PHV_ZCHI_IE" header="int_defines.h"/>
              <edit label="Call Back" define="BEMF.V_HI_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
            <checkbox label="Phase V, X-ing, Low" define="BEMF.V_LO_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_ADC2=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCUPM.SYS_IRQ_CTRL.PHV_ZCLOW_IE" header="int_defines.h"/>
              <edit label="Call Back" define="BEMF.V_LO_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
            <checkbox label="Phase W, X-ing, High" define="BEMF.W_HI_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_ADC2=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCUPM.SYS_IRQ_CTRL.PHW_ZCHI_IE" header="int_defines.h"/>
              <edit label="Call Back" define="BEMF.W_HI_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
            <checkbox label="Phase W, X-ing, Low" define="BEMF.W_LO_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_ADC2=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCUPM.SYS_IRQ_CTRL.PHW_ZCLOW_IE" header="int_defines.h"/>
              <edit label="Call Back" define="BEMF.W_LO_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
          </branch>
        </checkbox>
      </header>
    </treecontainer>
    <treecontainer headerlabels="Structure;Settings;" label="CCU6" desc="Capture Compare Unit 6" columnwidths="300;250">
      <header file="ccu6_defines.h">
        <branch label="Timer12/13 Configuration">
          <branch label="Timer12">
            <math label="Timer12 Clock" unit="MHz" define="CCU6.T12_CLK" svd="0" formula="SCU.PLL_fPLL/((2^CCU6.TCTR0.T12CLK)*(CCU6.TCTR0.T12PRE?256:1))"/>
            <math label="Max. Period" unit="us" define="CCU6.T12_MAX_PERIOD" svd="0" formula="65535/CCU6.T12_CLK"/>
            <branch label="Clock Prescaler">
              <combo label="Clock Divider" define="CCU6.TCTR0.T12CLK" default="label=div 1">
                <item label="div 1" override="value1"/>
                <item label="div 2" override="value2"/>
                <item label="div 4" override="value3"/>
                <item label="div 8" override="value4"/>
                <item label="div 16" override="value5"/>
                <item label="div 32" override="value6"/>
                <item label="div 64" override="value7"/>
                <item label="div 128" override="value8"/>
              </combo>
              <checkbox label="additional /256 Clock Prescaler enable" define="CCU6.TCTR0.T12PRE"/>
            </branch>
            <branch label="Period Value">
              <radio define="CCU6.T12_PERIOD_SEL" svd="0" default="label=...as time [us]">
                <radiobutton label="...as clock ticks" uielement="branch">
                  <spinbox label="Period Value [ticks]" define="CCU6.T12_TICK[15:0]" svd="0" default="1"/>
                </radiobutton>
                <radiobutton label="...as time [us]" uielement="branch">
                  <doublespinbox label="Time" suffix=" us" define="CCU6.T12_TIME" svd="0" default="1.00"/>
                </radiobutton>
                <radiobutton label="...as frequency [Hz]" uielement="branch">
                  <spinbox label="Frequency" suffix=" Hz" define="CCU6.T12_FREQ" svd="0" default="20000"/>
                </radiobutton>
              </radio>
              <math visible="true" define="CCU6.T12PERIOD[15:0]" svd="0" formula="CCU6.T12_PERIOD_SEL&lt;1?CCU6.T12_TICK[15:0]:CCU6.T12_PERIOD_SEL&lt;2?CCU6.T12_CLK*CCU6.T12_TIME/(1+1*CCU6.TCTR0.CTM):((CCU6.T12_CLK*1e6)/CCU6.T12_FREQ)/(1+1*CCU6.TCTR0.CTM)"/>
              <math label="Period (ticks)" define="CCU6.T12PR.T12PV" formula="CCU6.T12_PERIOD_SEL&lt;1?CCU6.T12_TICK[15:0]-1:CCU6.T12_PERIOD_SEL&lt;2?CCU6.T12_CLK*CCU6.T12_TIME/(1+1*CCU6.TCTR0.CTM)-1:((CCU6.T12_CLK*1e6)/CCU6.T12_FREQ)/(1+1*CCU6.TCTR0.CTM)-1"/>
            </branch>
            <combo label="Operation Mode" define="CCU6.TCTR0.CTM">
              <item label="Edge-aligned" override="value1"/>
              <item label="Center-aligned" override="value2"/>
            </combo>
            <combo label="Single Shot" define="CCU6.TCTR2.T12SSC">
              <item label="disabled" override="value1"/>
              <item label="enabled" override="value2"/>
            </combo>
            <combo label="Trigger External Run Select" define="CCU6.TCTR2.T12RSEL">
              <item label="disabled" override="value1"/>
              <item label="on rising edge on T12HR" override="value2"/>
              <item label="on falling edge on T12HR" override="value3"/>
              <item label="on any edge on T12HR" override="value4"/>
            </combo>
            <branch label="Dead Time Control">
              <doublespinbox label="Dead Time" suffix=" us" define="CCU6.DEADTIME" svd="0"/>
              <math label="Dead Time" unit="ticks" define="CCU6.T12DTC.DTM" formula="CCU6.T12_CLK*CCU6.DEADTIME"/>
              <checkbox label="Channel 0 enabled" define="CCU6.T12DTC.DTE0"/>
              <checkbox label="Channel 1 enabled" define="CCU6.T12DTC.DTE1"/>
              <checkbox label="Channel 2 enabled" define="CCU6.T12DTC.DTE2"/>
            </branch>
          </branch>
          <branch label="Timer13">
            <math label="Timer13 Clock" unit="MHz" define="CCU6.T13_CLK" svd="0" formula="SCU.PLL_fPLL/((2^CCU6.TCTR0.T13CLK)*(CCU6.TCTR0.T13PRE?256:1))"/>
            <math label="Max. Period" unit="us" define="CCU6.T13_MAX_PERIOD" svd="0" formula="65535/CCU6.T13_CLK"/>
            <branch label="Clock Prescaler">
              <combo label="Clock Divider" define="CCU6.TCTR0.T13CLK" default="label=div 1">
                <item label="div 1" override="value1"/>
                <item label="div 2" override="value2"/>
                <item label="div 4" override="value3"/>
                <item label="div 8" override="value4"/>
                <item label="div 16" override="value5"/>
                <item label="div 32" override="value6"/>
                <item label="div 64" override="value7"/>
                <item label="div 128" override="value8"/>
              </combo>
              <checkbox label="additional /256 Clock Prescaler enable" define="CCU6.TCTR0.T13PRE"/>
            </branch>
            <branch label="Period Value">
              <radio define="CCU6.T13_PERIOD_SEL" svd="0" default="label=...as time [us]">
                <radiobutton label="...as clock ticks" uielement="branch">
                  <spinbox label="Period Value [ticks]" define="CCU6.T13_TICK[15:0]" svd="0" default="1"/>
                </radiobutton>
                <radiobutton label="...as time [us]" uielement="branch">
                  <doublespinbox label="Time" suffix=" us" define="CCU6.T13_TIME" svd="0" default="1.00"/>
                </radiobutton>
                <radiobutton label="...as frequency [Hz]" uielement="branch">
                  <spinbox label="Frequency" suffix=" Hz" define="CCU6.T13_FREQ" svd="0" default="20000"/>
                </radiobutton>
              </radio>
              <math visible="true" define="CCU6.T13PERIOD[15:0]" svd="0" formula="CCU6.T13_PERIOD_SEL&lt;1?CCU6.T13_TICK[15:0]:CCU6.T13_PERIOD_SEL&lt;2?CCU6.T13_CLK*CCU6.T13_TIME:(CCU6.T13_CLK*1e6)/CCU6.T13_FREQ"/>
              <math label="Period (ticks)" define="CCU6.T13PR.T13PV" formula="CCU6.T13_PERIOD_SEL&lt;1?CCU6.T13_TICK[15:0]-1:CCU6.T13_PERIOD_SEL&lt;2?CCU6.T13_CLK*CCU6.T13_TIME-1:(CCU6.T13_CLK*1e6)/CCU6.T13_FREQ-1"/>
            </branch>
            <combo label="Single Shot" define="CCU6.TCTR2.T13SSC">
              <item label="disabled" override="value1"/>
              <item label="enabled" override="value2"/>
            </combo>
            <combo label="Trigger Select" define="CCU6.TCTR2.T13TEC">
              <item label="no trigger" override="value1"/>
              <item label="T12 Compare Match on Ch0 " override="value2"/>
              <item label="T12 Compare Match on Ch1 " override="value3"/>
              <item label="T12 Compare Match on Ch2 " override="value4"/>
              <item label="T12 Compare Match on any channel" override="value5"/>
              <item label="T12 Period Match" override="value6"/>
              <item label="T12 Zero Match" override="value7"/>
              <item label="any edge on CCPOSx inputs" override="value8"/>
            </combo>
            <combo label="Trigger Event Direction" define="CCU6.TCTR2.T13TED">
              <item label="no action" override="value1"/>
              <item label="T12 counting up" override="value2"/>
              <item label="T12 counting down" override="value3"/>
              <item label="T12 any counting direction" override="value4"/>
            </combo>
            <combo label="Trigger External Run Select" define="CCU6.TCTR2.T13RSEL">
              <item label="disabled" override="value1"/>
              <item label="on rising edge on T13HR" override="value2"/>
              <item label="on falling edge on T13HR" override="value3"/>
              <item label="on any edge on T13HR" override="value4"/>
            </combo>
          </branch>
        </branch>
        <branch label="Channel Configuration">
          <branch label="Channel 0">
            <branch label="Compare Value">
              <radio define="CCU6.CH0_CMP_SEL" svd="0">
                <radiobutton label="...as timer ticks" lockon="CCU6.CH0_CMP_TIME=0;CCU6.CH0_CMP_DC=0" uielement="branch">
                  <spinbox label="Compare Value" define="CCU6.CH0_CMP_TICK" svd="0" range="0;0xFFFF" suffix=" ticks"/>
                </radiobutton>
                <radiobutton label="...as time [us]" lockon="CCU6.CH0_CMP_TICK=0;CCU6.CH0_CMP_DC=0" uielement="branch">
                  <doublespinbox label="Time" suffix=" us" define="CCU6.CH0_CMP_TIME" svd="0"/>
                </radiobutton>
                <radiobutton label="...as duty cycle" lockon="CCU6.CH0_CMP_TICK=0;CCU6.CH0_CMP_TIME=0" uielement="branch">
                  <spinbox label="Duty Cycle" suffix=" %" define="CCU6.CH0_CMP_DC" svd="0"/>
                </radiobutton>
              </radio>
              <math label="Compare Value" unit="ticks" define="CCU6.CC60SR.CCS" formula="CCU6.CH0_CMP_TICK+(CCU6.T12_CLK*CCU6.CH0_CMP_TIME)+((CCU6.T12PR.T12PV+1)*CCU6.CH0_CMP_DC/100)"/>           
            </branch>
            <combo label="Capture/Compare Mode" define="CCU6.T12MSEL[3:0]" svd="0">
              <item label="(0b0000) Compare outputs disabled"/>
              <item label="(0b0001) Compare output on CC60"/>
              <item label="(0b0010) Compare output on COUT60"/>
              <item label="(0b0011) Compare output on CC60/COUT60"/>
              <item label="(0b0100) Capture T12 into CC60R/COUT60R on input CC60"/>
              <item label="(0b0101) CC60SR -&gt; CC60R on rising edge CC60 input, T12 capture"/>
              <item label="(0b0110) CC60SR -&gt; CC60R on falling edge CC60 input, T12 capture"/>
              <item label="(0b0111) CC60SR -&gt; CC60R on any edge CC60 input, T12 capture"/>
              <item label="(0b1000) Hall-Sensor Mode"/>
              <item label="(0b1001) Hysteresis-like control mode with dead-time generation"/>
              <item label="(0b1010) T12 -&gt; CC60R on rising edge CC60 input, T12 -&gt; CC60SR on falling edge CCPOS60"/>
              <item label="(0b1011) T12 -&gt; CC60R on falling edge CC60 input, T12 -&gt; CC60SR on rising edge CCPOS60"/>
              <item label="(0b1100) T12 -&gt; CC60R on rising edge CC60 input, T12 -&gt; CC60SR on rising edge CCPOS60"/>
              <item label="(0b1101) T12 -&gt; CC60R on falling edge CC60 input, T12 -&gt; CC60SR on falling edge CCPOS60"/>
              <item label="(0b1110) T12 -&gt; CC60R on any edge CC60 input, T12 -&gt; CC60SR on any edge CCPOS60"/>
            </combo>
            <branch label="Passive State">
              <branch label="CC60">
                <combo label="Passive State Select" define="CCU6.CMPSTAT.CC60PS" default="label=Passive State before Compare">
                  <item label="Passive State before Compare" override="value1"/>
                  <item label="Passive State after Compare" override="value2"/>
                </combo>
                <combo label="Passive State Level" define="CCU6.PSLR.PSL[0]" default="label=Low">
                  <item label="Low"/>
                  <item label="High"/>
                </combo>
              </branch>
              <branch label="COUT60">
                <combo label="Passive State Select" define="CCU6.CMPSTAT.COUT60PS" default="label=Passive State after Compare">
                  <item label="Passive State before Compare" override="value1"/>
                  <item label="Passive State after Compare" override="value2"/>
                </combo>
                <combo label="Passive State Level" define="CCU6.PSLR.PSL[1]" default="label=Low">
                  <item label="Low"/>
                  <item label="High"/>
                </combo>
              </branch>
            </branch>
            <branch label="Modulation">
              <checkbox label="Timer12 modulates CC60" define="CCU6.MODCTR.T12MODEN[0]"/>
              <checkbox label="Timer12 modulates COUT60" define="CCU6.MODCTR.T12MODEN[1]"/>
              <checkbox label="Timer13 modulates CC60" define="CCU6.MODCTR.T13MODEN[0]"/>
              <checkbox label="Timer13 modulates COUT60" define="CCU6.MODCTR.T13MODEN[1]"/>
            </branch>
          </branch>
          <branch label="Channel 1">
            <branch label="Compare Value">
              <radio define="CCU6.CH1_CMP_SEL" svd="0">
                <radiobutton label="...as timer ticks" lockon="CCU6.CH1_CMP_TIME=0;CCU6.CH1_CMP_DC=0" uielement="branch">
                  <spinbox label="Compare Value" define="CCU6.CH1_CMP_TICK" svd="0" range="0;0xFFFF" suffix=" ticks"/>
                </radiobutton>
                <radiobutton label="...as time [us]" lockon="CCU6.CH1_CMP_TICK=0;CCU6.CH1_CMP_DC=0" uielement="branch">
                  <doublespinbox label="Time" suffix=" us" define="CCU6.CH1_CMP_TIME" svd="0"/>
                </radiobutton>
                <radiobutton label="...as duty cycle" lockon="CCU6.CH1_CMP_TICK=0;CCU6.CH1_CMP_TIME=0" uielement="branch">
                  <spinbox label="Duty Cycle" suffix=" %" define="CCU6.CH1_CMP_DC" svd="0"/>
                </radiobutton>
              </radio>
              <math label="Compare Value" unit="ticks" define="CCU6.CC61SR.CCS" formula="CCU6.CH1_CMP_TICK+(CCU6.T12_CLK*CCU6.CH1_CMP_TIME)+((CCU6.T12PR.T12PV+1)*CCU6.CH1_CMP_DC/100)"/>
            </branch>
            <combo label="Capture/Compare Mode" define="CCU6.T12MSEL[7:4]" svd="0">
              <item label="(0b0000) Compare outputs disabled"/>
              <item label="(0b0001) Compare output on CC61"/>
              <item label="(0b0010) Compare output on COUT61"/>
              <item label="(0b0011) Compare output on CC61/COUT61"/>
              <item label="(0b0100) Capture T12 into CC61R/COUT61R on input CC61"/>
              <item label="(0b0101) CC61SR -&gt; CC61R on rising edge CC61 input, T12 capture"/>
              <item label="(0b0110) CC61SR -&gt; CC61R on falling edge CC61 input, T12 capture"/>
              <item label="(0b0111) CC61SR -&gt; CC61R on any edge CC61 input, T12 capture"/>
              <item label="(0b1000) Hall-Sensor Mode"/>
              <item label="(0b1001) Hysteresis-like control mode with dead-time generation"/>
              <item label="(0b1010) T12 -&gt; CC61R on rising edge CC61 input, T12 -&gt; CC61SR on falling edge CCPOS61"/>
              <item label="(0b1011) T12 -&gt; CC61R on falling edge CC61 input, T12 -&gt; CC61SR on rising edge CCPOS61"/>
              <item label="(0b1100) T12 -&gt; CC61R on rising edge CC61 input, T12 -&gt; CC61SR on rising edge CCPOS61"/>
              <item label="(0b1101) T12 -&gt; CC61R on falling edge CC61 input, T12 -&gt; CC61SR on falling edge CCPOS61"/>
              <item label="(0b1110) T12 -&gt; CC61R on any edge CC61 input, T12 -&gt; CC61SR on any edge CCPOS61"/>
            </combo>
            <branch label="Passive State">
              <branch label="CC61">
                <combo label="Passive State Select" define="CCU6.CMPSTAT.CC61PS" default="label=Passive State before Compare">
                  <item label="Passive State before Compare" override="value1"/>
                  <item label="Passive State after Compare" override="value2"/>
                </combo>
                <combo label="Passive State Level" define="CCU6.PSLR.PSL[2]" default="label=Low">
                  <item label="Low"/>
                  <item label="High"/>
                </combo>
              </branch>
              <branch label="COUT61">
                <combo label="Passive State Select" define="CCU6.CMPSTAT.COUT61PS" default="label=Passive State after Compare">
                  <item label="Passive State before Compare" override="value1"/>
                  <item label="Passive State after Compare" override="value2"/>
                </combo>
                <combo label="Passive State Level" define="CCU6.PSLR.PSL[3]" default="label=Low">
                  <item label="Low"/>
                  <item label="High"/>
                </combo>
              </branch>
            </branch>
            <branch label="Modulation">
              <checkbox label="Timer12 modulates CC61" define="CCU6.MODCTR.T12MODEN[2]"/>
              <checkbox label="Timer12 modulates COUT61" define="CCU6.MODCTR.T12MODEN[3]"/>
              <checkbox label="Timer13 modulates CC61" define="CCU6.MODCTR.T13MODEN[2]"/>
              <checkbox label="Timer13 modulates COUT61" define="CCU6.MODCTR.T13MODEN[3]"/>
            </branch>
          </branch>
          <branch label="Channel 2">
            <branch label="Compare Value">
              <radio define="CCU6.CH2_CMP_SEL" svd="0">
                <radiobutton label="...as timer ticks" lockon="CCU6.CH2_CMP_TIME=0;CCU6.CH2_CMP_DC=0" uielement="branch">
                  <spinbox label="Compare Value" define="CCU6.CH2_CMP_TICK" svd="0" range="0;0xFFFF" suffix=" ticks"/>
                </radiobutton>
                <radiobutton label="...as time [us]" lockon="CCU6.CH2_CMP_TICK=0;CCU6.CH2_CMP_DC=0" uielement="branch">
                  <doublespinbox label="Time" suffix=" us" define="CCU6.CH2_CMP_TIME" svd="0"/>
                </radiobutton>
                <radiobutton label="...as duty cycle" lockon="CCU6.CH2_CMP_TICK=0;CCU6.CH2_CMP_TIME=0" uielement="branch">
                  <spinbox label="Duty Cycle" suffix=" %" define="CCU6.CH2_CMP_DC" svd="0"/>
                </radiobutton>
              </radio>
              <math label="Compare Value" unit="ticks" define="CCU6.CC62SR.CCS" formula="CCU6.CH2_CMP_TICK+(CCU6.T12_CLK*CCU6.CH2_CMP_TIME)+((CCU6.T12PR.T12PV+1)*CCU6.CH2_CMP_DC/100)"/>
            </branch>
            <combo label="Capture/Compare Mode" define="CCU6.T12MSEL[11:8]" svd="0">
              <item label="(0b0000) Compare outputs disabled"/>
              <item label="(0b0001) Compare output on CC62"/>
              <item label="(0b0010) Compare output on COUT62"/>
              <item label="(0b0011) Compare output on CC62/COUT62"/>
              <item label="(0b0100) Capture T12 into CC62R/COUT62R on input CC62"/>
              <item label="(0b0101) CC62SR -&gt; CC62R on rising edge CC62 input, T12 capture"/>
              <item label="(0b0110) CC62SR -&gt; CC62R on falling edge CC62 input, T12 capture"/>
              <item label="(0b0111) CC62SR -&gt; CC62R on any edge CC62 input, T12 capture"/>
              <item label="(0b1000) Hall-Sensor Mode"/>
              <item label="(0b1001) Hysteresis-like control mode with dead-time generation"/>
              <item label="(0b1010) T12 -&gt; CC62R on rising edge CC62 input, T12 -&gt; CC62SR on falling edge CCPOS62"/>
              <item label="(0b1011) T12 -&gt; CC62R on falling edge CC62 input, T12 -&gt; CC62SR on rising edge CCPOS62"/>
              <item label="(0b1100) T12 -&gt; CC62R on rising edge CC62 input, T12 -&gt; CC62SR on rising edge CCPOS62"/>
              <item label="(0b1101) T12 -&gt; CC62R on falling edge CC62 input, T12 -&gt; CC62SR on falling edge CCPOS62"/>
              <item label="(0b1110) T12 -&gt; CC62R on any edge CC62 input, T12 -&gt; CC62SR on any edge CCPOS62"/>
            </combo>
            <branch label="Passive State">
              <branch label="CC62">
                <combo label="Passive State Select" define="CCU6.CMPSTAT.CC62PS" default="label=Passive State before Compare">
                  <item label="Passive State before Compare" override="value1"/>
                  <item label="Passive State after Compare" override="value2"/>
                </combo>
                <combo label="Passive State Level" define="CCU6.PSLR.PSL[4]" default="label=Low">
                  <item label="Low"/>
                  <item label="High"/>
                </combo>
              </branch>
              <branch label="COUT62">
                <combo label="Passive State Select" define="CCU6.CMPSTAT.COUT62PS" default="label=Passive State after Compare">
                  <item label="Passive State before Compare" override="value1"/>
                  <item label="Passive State after Compare" override="value2"/>
                </combo>
                <combo label="Passive State Level" define="CCU6.PSLR.PSL[5]" default="label=Low">
                  <item label="Low"/>
                  <item label="High"/>
                </combo>
              </branch>
            </branch>
            <branch label="Modulation">
              <checkbox label="Timer12 modulates CC62" define="CCU6.MODCTR.T12MODEN[4]"/>
              <checkbox label="Timer12 modulates COUT62" define="CCU6.MODCTR.T12MODEN[5]"/>
              <checkbox label="Timer13 modulates CC62" define="CCU6.MODCTR.T13MODEN[4]"/>
              <checkbox label="Timer13 modulates COUT62" define="CCU6.MODCTR.T13MODEN[5]"/>
            </branch>
          </branch>
          <branch label="Channel 3">
            <branch label="Compare Value">
              <radio define="CCU6.CH3_CMP_SEL" svd="0">
                <radiobutton label="...as timer ticks" lockon="CCU6.CH3_CMP_TIME=0;CCU6.CH3_CMP_DC=0" uielement="branch">
                  <spinbox label="Compare Value" define="CCU6.CH3_CMP_TICK" svd="0" range="0;0xFFFF" suffix=" ticks"/>
                </radiobutton>
                <radiobutton label="...as time [us]" lockon="CCU6.CH3_CMP_TICK=0;CCU6.CH3_CMP_DC=0" uielement="branch">
                  <doublespinbox label="Time" suffix=" us" define="CCU6.CH3_CMP_TIME" svd="0"/>
                </radiobutton>
                <radiobutton label="...as duty cycle" lockon="CCU6.CH3_CMP_TICK=0;CCU6.CH3_CMP_TIME=0" uielement="branch">
                  <spinbox label="Duty Cycle" suffix=" %" define="CCU6.CH3_CMP_DC" svd="0"/>
                </radiobutton>
              </radio>
              <math label="Compare Value" unit="ticks" define="CCU6.CC63SR.CCS" formula="CCU6.CH3_CMP_TICK+(CCU6.T13_CLK*CCU6.CH3_CMP_TIME)+((CCU6.T13PR.T13PV+1)*CCU6.CH3_CMP_DC/100)"/>
            </branch>
            <branch label="Passive State - COUT63">
              <combo label="Passive State Select" define="CCU6.CMPSTAT.COUT63PS">
                <item label="Passive State before Compare" override="value1"/>
                <item label="Passive State after Compare" override="value2"/>
              </combo>
              <combo label="Passive State Level" define="CCU6.PSLR.PSL63">
                <item label="Low" override="value1"/>
                <item label="High" override="value2"/>
              </combo>
            </branch>
            <checkbox label="Invert COUT63" define="CCU6.CMPSTAT.T13IM"/>
            <branch label="Modulation">
              <checkbox label="Timer13 modulates COUT63" define="CCU6.MODCTR.ECT13O"/>
            </branch>
          </branch>
        </branch>
        <branch label="HALL Configuration">
          <combo label="HALL Synchronization" define="CCU6.T12MSEL.HSYNC">
            <item label="(0b000) any edge on CCPOS0(1,2)" override="value1"/>
            <item label="(0b001) T13 compare match" override="value2"/>
            <item label="(0b010) T13 period match" override="value3"/>
            <item label="(0b011) HALL sampling switched off" override="value4"/>
            <item label="(0b100) T12 period match (counting up)" override="value5"/>
            <item label="(0b101) T12 one-match (counting down)" override="value6"/>
            <item label="(0b110) T12 compare match on Channel 0 (counting up)" override="value7"/>
            <item label="(0b111) T12 compare match on Channel 0 (counting down)" override="value8"/>
          </combo>
          <checkbox label="Delay Bypass" define="CCU6.T12MSEL.DBYP"/>
          <checkbox label="Enable Idle Mode in case of Wrong HALL Event" define="CCU6.IEN.ENIDLE"/>
        </branch>
        <branch label="Interrupt Configuration">
          <branch label="Interrupt Enable">
            <checkbox label="Capture, Compare-Match Rising Edge for Channel 0 " define="CCU6.CH0_CM_R_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
              <checkbox label="Enable Interrupt" define="CCU6.IEN.ENCC60R"/>
              <edit label="Call Back" define="CCU6.CH0_CM_R_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
            <checkbox label="Capture, Compare-Match Falling Edge for Channel 0" define="CCU6.CH0_CM_F_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
              <checkbox label="Enable Interrupt" define="CCU6.IEN.ENCC60F"/>
              <edit label="Call Back" define="CCU6.CH0_CM_F_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
            <checkbox label="Capture, Compare-Match Rising Edge for Channel 1 " define="CCU6.CH1_CM_R_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
              <checkbox label="Enable Interrupt" define="CCU6.IEN.ENCC61R"/>
              <edit label="Call Back" define="CCU6.CH1_CM_R_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
            <checkbox label="Capture, Compare-Match Falling Edge for Channel 1" define="CCU6.CH1_CM_F_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
              <checkbox label="Enable Interrupt" define="CCU6.IEN.ENCC61F"/>
              <edit label="Call Back" define="CCU6.CH1_CM_F_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
            <checkbox label="Capture, Compare-Match Rising Edge for Channel 2 " define="CCU6.CH2_CM_R_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
              <checkbox label="Enable Interrupt" define="CCU6.IEN.ENCC62R"/>
              <edit label="Call Back" define="CCU6.CH2_CM_R_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
            <checkbox label="Capture, Compare-Match Falling Edge for Channel 2" define="CCU6.CH2_CM_F_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
              <checkbox label="Enable Interrupt" define="CCU6.IEN.ENCC62F"/>
              <edit label="Call Back" define="CCU6.CH2_CM_F_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
            <checkbox label="Timer12 One-Match" define="CCU6.T12_OM_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
              <checkbox label="Enable Interrupt" define="CCU6.IEN.ENT12OM"/>
              <edit label="Call Back" define="CCU6.T12_OM_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
            <checkbox label="Timer12 Period-Match" define="CCU6.T12_PM_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
              <checkbox label="Enable Interrupt" define="CCU6.IEN.ENT12PM"/>
              <edit label="Call Back" define="CCU6.T12_PM_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
            <checkbox label="Timer13 Compare-Match" define="CCU6.T13_CM_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
              <checkbox label="Enable Interrupt" define="CCU6.IEN.ENT13CM"/>
              <edit label="Call Back" define="CCU6.T13_CM_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
            <checkbox label="Timer13 Period-Match" define="CCU6.T13_PM_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
              <checkbox label="Enable Interrupt" define="CCU6.IEN.ENT13PM"/>
              <edit label="Call Back" define="CCU6.T13_PM_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
            <checkbox label="Trap Flag" define="CCU6.TRAP_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
              <checkbox label="Enable Interrupt" define="CCU6.IEN.ENTRPF"/>
              <edit label="Call Back" define="CCU6.TRAP_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
            <checkbox label="Correct Hall Event" define="CCU6.CHE_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
              <checkbox label="Enable Interrupt" define="CCU6.IEN.ENCHE"/>
              <edit label="Call Back" define="CCU6.CORRECT_HALL_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
            <checkbox label="Wrong Hall Event" define="CCU6.WHE_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
              <checkbox label="Enable Interrupt" define="CCU6.IEN.ENWHE"/>
              <edit label="Call Back" define="CCU6.WRONG_HALL_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
            <checkbox label="Multi-Channel Mode Shadow Transfer" define="CCU6.MCM_STR_INT_EN" svd="0" header="isr_defines.h" uielement="branch">
              <checkbox label="Enable Interrupt" define="CCU6.IEN.ENSTR"/>
              <edit label="Call Back" define="CCU6.MCM_STR_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
          </branch>
          <branch label="Interrupt Node Selection">
            <combo label="Channel 0" define="CCU6.INP.INPCC60">
              <item label="SR0" override="value1"/>
              <item label="SR1" override="value2"/>
              <item label="SR2" override="value3"/>
              <item label="SR3" override="value4"/>
            </combo>
            <combo label="Channel 1" define="CCU6.INP.INPCC61">
              <item label="SR0" override="value1"/>
              <item label="SR1" override="value2"/>
              <item label="SR2" override="value3"/>
              <item label="SR3" override="value4"/>
            </combo>
            <combo label="Channel 2" define="CCU6.INP.INPCC62">
              <item label="SR0" override="value1"/>
              <item label="SR1" override="value2"/>
              <item label="SR2" override="value3"/>
              <item label="SR3" override="value4"/>
            </combo>
            <combo label="Correct Hall Event" define="CCU6.INP.INPCHE">
              <item label="SR0" override="value1"/>
              <item label="SR1" override="value2"/>
              <item label="SR2" override="value3"/>
              <item label="SR3" override="value4"/>
            </combo>
            <combo label="Error" define="CCU6.INP.INPERR">
              <item label="SR0" override="value1"/>
              <item label="SR1" override="value2"/>
              <item label="SR2" override="value3"/>
              <item label="SR3" override="value4"/>
            </combo>
            <combo label="Timer 12" define="CCU6.INP.INPT12">
              <item label="SR0" override="value1"/>
              <item label="SR1" override="value2"/>
              <item label="SR2" override="value3"/>
              <item label="SR3" override="value4"/>
            </combo>
            <combo label="Timer 13" define="CCU6.INP.INPT13">
              <item label="SR0" override="value1"/>
              <item label="SR1" override="value2"/>
              <item label="SR2" override="value3"/>
              <item label="SR3" override="value4"/>
            </combo>
          </branch>
          <branch label="Interrupt Node Enable">
            <checkbox label="SR0 enable" define="CCU6.NVIC[0]" svd="0" default="1" lockon="CPU.NVIC_ISER0.Int_CCU6SR0=1"/>
            <checkbox label="SR1 enable" define="CCU6.NVIC[1]" svd="0" lockon="CPU.NVIC_ISER0.Int_CCU6SR1=1"/>
            <checkbox label="SR2 enable" define="CCU6.NVIC[2]" svd="0" lockon="CPU.NVIC_ISER0.Int_CCU6SR2=1"/>
            <checkbox label="SR3 enable" define="CCU6.NVIC[3]" svd="0" lockon="CPU.NVIC_ISER0.Int_CCU6SR3=1"/>
          </branch>
        </branch>
        <checkbox label="Multi-Channel Configuration" define="CCU6.MODCTR.MCMEN" uielement="branch">
          <combo label="Switching Selection" define="CCU6.MCMCTR.SWSEL">
            <item label="no action" override="value1"/>
            <item label="correct HALL pattern detected" override="value2"/>
            <item label="Timer13 period match" override="value3"/>
            <item label="Timer12 one match" override="value4"/>
            <item label="Timer12 Channel 1 compare match" override="value5"/>
            <item label="Timer12 period match" override="value6"/>
          </combo>
          <combo label="Switching Synchronization" define="CCU6.MCMCTR.SWSYN">
            <item label="direct trigger of shadow transfer" override="value1"/>
            <item label="Timer13 zero match triggers shadow transfer" override="value2"/>
            <item label="Timer12 zero match triggers shadow transfer" override="value3"/>
            <item hide="value4"/>
          </combo>
          <checkbox label="Shadow transfer for Timer12 up counting" define="CCU6.MCMCTR.STE12U"/>
          <checkbox label="Shadow transfer for Timer12 down counting" define="CCU6.MCMCTR.STE12D"/>
          <checkbox label="Shadow transfer for Timer13 up counting" define="CCU6.MCMCTR.STE13U"/>
        </checkbox>
        <branch label="Trap Control">
          <combo label="Trap Mode" define="CCU6.TRPCTR[1:0]">
            <item label="trap state left on Timer12 zero match" value="0"/>
            <item label="trap state left on Timer13 zero match" value="1"/>
            <item label="trap state left immediately" value="3"/>
          </combo>
          <combo label="Trap Mode 2" define="CCU6.TRPCTR.TRPM2">
            <item label="trap state left on /CTRAP input inactive" override="value1"/>
            <item label="trap state left on TRPF reset by SW and /CTRAP input inactive" override="value2"/>
          </combo>
          <checkbox label="Trap on CC60" define="CCU6.TRPCTR.TRPEN[0]"/>
          <checkbox label="Trap on COUT60" define="CCU6.TRPCTR.TRPEN[1]"/>
          <checkbox label="Trap on CC61" define="CCU6.TRPCTR.TRPEN[2]"/>
          <checkbox label="Trap on COUT61" define="CCU6.TRPCTR.TRPEN[3]"/>
          <checkbox label="Trap on CC62" define="CCU6.TRPCTR.TRPEN[4]"/>
          <checkbox label="Trap on COUT62" define="CCU6.TRPCTR.TRPEN[5]"/>
          <checkbox label="Trap for Timer13" define="CCU6.TRPCTR.TRPEN13"/>
          <checkbox label="Trap Pin (CTRAP)" define="CCU6.TRPCTR.TRPPEN"/>
        </branch>
        <branch label="Pin Select">
          <branch label="Inputs">
            <branch label="Channels">
              <combo label="CC60" define="CCU6.PISEL0.ISCC60" default="label=CC60_1 (P2.3)">
                <item label="CC60_0 (P0.4)" lockon="PORT.P0_DIR.P4.label=Input" override="value1"/>
                <item label="CC60_1 (P2.3)" override="value2"/>
                <item hide="value3"/>
              </combo>
              <combo label="CC61" define="CCU6.PISEL0.ISCC61" default="label=none">
                <item label="CC61_0 (P1.0)" lockon="PORT.P1_DIR.P0.label=Input" override="value1"/>
                <item label="none" override="value2"/>
              </combo>
              <combo label="CC62" define="CCU6.PISEL0.ISCC62" default="label=CC62_2 (P2.2)">
                <item label="CC62_0 (P1.3)" lockon="PORT.P1_DIR.P3.label=Input" override="value1"/>
                <item label="CC62_2 (P2.2)" override="value3"/>
                <item hide="value2"/>
              </combo>
              <combo label="CTRAP" define="CCU6.PISEL0.ISTRP">
                <item label="CTRAP_0 (P2.4)" override="value1"/>
                <item label="CTRAP_1 (P2.3)" override="value2"/>
              </combo>
              <combo label="CCPOS0" define="CCU6.PISEL0.ISPOS0" default="label=CCPOS0_3 (P2.0) or BEMF Comp.">
                <item label="CCPOS0_1 (P0.3)" lockon="PORT.P0_DIR.P3.label=Input" override="CCPOS0_1"/>
                <item label="CCPOS0_2 (P1.3)" lockon="PORT.P1_DIR.P3.label=Input" override="CCPOS0_2"/>
                <item label="CCPOS0_3 (P2.0) or BEMF Comp." override="CCPOS0_3"/>
                <item hide="value0"/>
              </combo>
              <combo label="CCPOS1" define="CCU6.PISEL0.ISPOS1">
                <item label="CCPOS1_0 (P2.3)" override="CCPOS1_0"/>
                <item label="CCPOS1_1 (P0.4)" lockon="PORT.P0_DIR.P4.label=Input" override="CCPOS1_1"/>
                <item label="CCPOS1_2 (P1.4)" lockon="PORT.P1_DIR.P4.label=Input" override="CCPOS1_2"/>
                <item label="BEMF Comparator" override="BEMF_Comp"/>
              </combo>
              <combo label="CCPOS2" define="CCU6.PISEL0.ISPOS2" default="label=CCPOS2_3 (P2.2) or BEMF Comp.">
                <item label="CCPOS2_1 (P0.2)" lockon="PORT.P0_DIR.P2.label=Input" override="CCPOS2_1"/>
                <item label="CCPOS2_2 (P1.2)" lockon="PORT.P1_DIR.P2.label=Input" override="CCPOS2_2"/>
                <item label="CCPOS2_3 (P2.2) or BEMF Comp." override="CCPOS2_3"/>
                <item hide="value0"/>
              </combo>
            </branch>
            <branch label="Timers">
              <combo label="T12HR" define="CCU6.PISEL0.IST12HR" default="label=T12HR_2 (P2.0)">
                <item label="T12HR_0 (P0.0)" lockon="PORT.P0_DIR.P0.label=Input" override="value1"/>
                <item label="T12HR_2 (P2.0)" override="value3"/>
                <item hide="value2"/>
                <item hide="value4"/>
              </combo>
              <combo label="T13HR" define="CCU6.PISEL2.IST13HR" default="label=T13HR_2 (P2.2)">
                <item label="T13HR_0 (P0.1)" lockon="PORT.P0_DIR.P1.label=Input" override="value1"/>
                <item label="T13HR_2 (P2.2)" override="value3"/>
                <item hide="value2"/>
                <item hide="value4"/>
              </combo>
              <combo label="Timer12 Counting Input" define="CCU6.PISEL2.ISCNT12">
                <item label="T12 prescaler" override="value1"/>
                <item label="TCTR4.T12CNT" override="value2"/>
                <item label="rising edge on T12HR" override="value3"/>
                <item label="falling edge on T12HR" override="value4"/>
              </combo>
              <combo label="Timer13 Counting Inputs" define="CCU6.PISEL2.ISCNT13">
                <item label="T13 prescaler" override="value1"/>
                <item label="TCTR4.T13CNT" override="value2"/>
                <item label="rising edge on T13HR" override="value3"/>
                <item label="falling edge on T13HR" override="value4"/>
              </combo>
            </branch>
          </branch>
          <branch label="Outputs">
            <branch label="Channels">
              <combo label="CC60" define="CCU6.TEMP_CC60_OUT" svd="0" default="label=none">
                <item label="none"/>
                <item label="CC60_0 (P0.4)" lockon="PORT.P0_DIR.P4.label=Output;PORT.P0_4_ALT[1:0].label=CC60_0"/>
              </combo>
              <combo label="COUT60" define="CCU6.TEMP_COUT60_OUT" svd="0" default="label=none">
                <item label="none"/>
                <item label="COUT60_0 (P0.2)" lockon="PORT.P0_DIR.P2.label=Output;PORT.P0_2_ALT[1:0].label=COUT60_0"/>
              </combo>
              <combo label="CC61" define="CCU6.TEMP_CC61_OUT" svd="0" default="label=none">
                <item label="none"/>
                <item label="CC61_0 (P1.0)" lockon="PORT.P1_DIR.P0.label=Output;PORT.P1_0_ALT[1:0].label=CC61_0"/>
              </combo>
              <combo label="COUT61" define="CCU6.TEMP_COUT61_OUT" svd="0" default="label=none">
                <item label="none"/>
                <item label="COUT61_0 (P1.1)" lockon="PORT.P1_DIR.P1.label=Output;PORT.P1_1_ALT[1:0].label=COUT61_0"/>
              </combo>
              <combo label="CC62" define="CCU6.TEMP_CC62_OUT" svd="0" default="label=none">
                <item label="none"/>
                <item label="CC62_0 (P1.3)" lockon="PORT.P1_DIR.P3.label=Output;PORT.P1_3_ALT[1:0].label=CC62_0"/>
              </combo>
              <combo label="COUT62" define="CCU6.TEMP_COUT62_OUT" svd="0" default="label=none">
                <item label="none"/>
                <item label="COUT62_0 (P1.4)" lockon="PORT.P1_DIR.P4.label=Output;PORT.P1_4_ALT[1:0].label=COUT62_0"/>
              </combo>
              <combo label="COUT63" define="CCU6.TEMP_COUT63_OUT" svd="0" default="label=none">
                <item label="none"/>
                <item label="COUT63_0 (P1.2)" lockon="PORT.P1_DIR.P2.label=Output;PORT.P1_2_ALT[1:0].label=COUT63_0"/>
              </combo>
            </branch>
          </branch>
        </branch>
      </header>
    </treecontainer>
    <treecontainer headerlabels="Structure;Settings;" label="GPT12E" desc="General Purpose Timer 12E" columnwidths="300;250">
      <header file="gpt12e_defines.h">
        <branch label="GPT1">
          <branch label="Clock">
            <combo label="Block Prescaler" define="GPT12E.T3CON.BPS1" default="label=fGPT / 4">
              <item label="fGPT / 4" override="value2"/>
              <item label="fGPT / 8" override="value1"/>
              <item label="fGPT / 16" override="value4"/>
              <item label="fGPT / 32" override="value3"/>
            </combo>
            <math label="GPT1 Clock" unit="MHz" define="GPT1.BASE_CLK" svd="0" formula="SCU.PLL_fPLL/(4*(2^(GPT12E.T3CON.BPS1.^1)))"/>
          </branch>
          <branch label="Aux. Timer2">
            <math label="GPT1 Timer2 Clock" unit="MHz" define="GPT1.T2_CLK" svd="0" formula="GPT12E.T2CON.T2M&lt;1?(GPT1.BASE_CLK/2^(GPT12E.T2CON_T2I_TIMER)):(GPT12E.T2CON.T2M&lt;2?GPT1.BASE_CLK:(GPT12E.T2CON.T2M&lt;3?(GPT1.BASE_CLK/2^(GPT12E.T2CON_T2I_GATED_TIMER_LOW)):(GPT12E.T2CON.T2M&lt;4?(GPT1.BASE_CLK/2^(GPT12E.T2CON_T2I_GATED_TIMER_HIGH)):GPT1.BASE_CLK)))"/>
            <branch label="Mode Select">
              <radio define="GPT12E.T2CON.T2M">
                <radiobutton label="Timer Mode" value="0" uielement="branch">
                  <combo label="Individual Prescaler" define="GPT12E.T2CON_T2I_TIMER" svd="0">
                    <item label="Block Prescaler / 1"/>
                    <item label="Block Prescaler / 2"/>
                    <item label="Block Prescaler / 4"/>
                    <item label="Block Prescaler / 8"/>
                    <item label="Block Prescaler / 16"/>
                    <item label="Block Prescaler / 32"/>
                    <item label="Block Prescaler / 64"/>
                    <item label="Block Prescaler / 128"/>
                  </combo>
                </radiobutton>
                <radiobutton label="Counter Mode" value="1" uielement="branch">
                  <combo label="Input Edge Select" define="GPT12E.T2CON_T2I_COUNTER" svd="0">
                    <item label="None. Counter T2 is disabled" value="0"/>
                    <item label="Rising edge on T2IN" value="1"/>
                    <item label="Falling edge on T2IN" value="2"/>
                    <item label="Rising or Falling edge on T2IN" value="3"/>
                    <item label="Rising edge on T3OTL" value="5"/>
                    <item label="Falling edge on T3OTL" value="6"/>
                    <item label="Rising or Falling edge on T3OTL" value="7"/>
                  </combo>
                </radiobutton>
                <radiobutton label="Gated Timer Mode, low active" value="2" uielement="branch">
                  <combo label="Individual Prescaler" define="GPT12E.T2CON_T2I_GATED_TIMER_LOW" svd="0">
                    <item label="Block Prescaler / 1"/>
                    <item label="Block Prescaler / 2"/>
                    <item label="Block Prescaler / 4"/>
                    <item label="Block Prescaler / 8"/>
                    <item label="Block Prescaler / 16"/>
                    <item label="Block Prescaler / 32"/>
                    <item label="Block Prescaler / 64"/>
                    <item label="Block Prescaler / 128"/>
                  </combo>
                </radiobutton>
                <radiobutton label="Gated Timer Mode, high active" value="3" uielement="branch">
                  <combo label="Individual Prescaler" define="GPT12E.T2CON_T2I_GATED_TIMER_HIGH" svd="0">
                    <item label="Block Prescaler / 1"/>
                    <item label="Block Prescaler / 2"/>
                    <item label="Block Prescaler / 4"/>
                    <item label="Block Prescaler / 8"/>
                    <item label="Block Prescaler / 16"/>
                    <item label="Block Prescaler / 32"/>
                    <item label="Block Prescaler / 64"/>
                    <item label="Block Prescaler / 128"/>
                  </combo>
                </radiobutton>
                <radiobutton label="Reload Mode" value="4" uielement="branch">
                  <combo label="Input Edge Select" define="GPT12E.T2CON_T2I_RELOAD" svd="0">
                    <item label="None. Counter T2 is disabled" value="0"/>
                    <item label="Rising edge on T2IN" value="1"/>
                    <item label="Falling edge on T2IN" value="2"/>
                    <item label="Rising or Falling edge on T2IN" value="3"/>
                    <item label="Rising edge on T3OTL" value="5"/>
                    <item label="Falling edge on T3OTL" value="6"/>
                    <item label="Rising or Falling edge on T3OTL" value="7"/>
                  </combo>
                </radiobutton>
                <radiobutton label="Capture Mode" value="5" uielement="branch">
                  <combo label="Input Edge Select" define="GPT12E.T2CON_T2I_CAPTURE" svd="0">
                    <item label="None. Counter T2 is disabled" value="0"/>
                    <item label="Rising edge on T2IN" value="1"/>
                    <item label="Falling edge on T2IN" value="2"/>
                    <item label="Rising or Falling edge on T2IN" value="3"/>
                  </combo>
                </radiobutton>
                <radiobutton label="Inc. Interface Mode, rotation detection" value="6" uielement="branch">
                  <combo label="Input Edge Select" define="GPT12E.T2CON_T2I_INC_ROT" svd="0">
                    <item label="None. Counter T2 stopped"/>
                    <item label="Rising or Falling edge on T2IN"/>
                    <item label="Rising or Falling edge on T2EUD"/>
                    <item label="Rising or Falling edge on any T2 input (T2IN, T2EUD)"/>
                  </combo>
                </radiobutton>
                <radiobutton label="Inc. Interface Mode, edge detection" value="7" uielement="branch">
                  <combo label="Input Edge Select" define="GPT12E.T2CON_T2I_INC_EDGE" svd="0">
                    <item label="None. Counter T2 stopped"/>
                    <item label="Rising or Falling edge on T2IN"/>
                    <item label="Rising or Falling edge on T2EUD"/>
                    <item label="Rising or Falling edge on any T2 input (T2IN, T2EUD)"/>
                  </combo>
                </radiobutton>
              </radio>
              <math label="T2I" define="GPT12E.T2CON.T2I" formula="GPT12E.T2CON.T2M&lt;1?GPT12E.T2CON_T2I_TIMER:GPT12E.T2CON.T2M&lt;2?GPT12E.T2CON_T2I_COUNTER:GPT12E.T2CON.T2M&lt;3?GPT12E.T2CON_T2I_GATED_TIMER_LOW:GPT12E.T2CON.T2M&lt;4?GPT12E.T2CON_T2I_GATED_TIMER_HIGH:GPT12E.T2CON.T2M&lt;5?GPT12E.T2CON_T2I_RELOAD:GPT12E.T2CON.T2M&lt;6?GPT12E.T2CON_T2I_CAPTURE:GPT12E.T2CON.T2M&lt;7?GPT12E.T2CON_T2I_INC_ROT:GPT12E.T2CON_T2I_INC_EDGE"/>
            </branch>
            <checkbox label="Remote Run Control by T3" define="GPT12E.T2CON.T2RC"/>
            <branch label="Direction Control">
              <radio define="GPT12E.T2CON.T2UDE">
                <radiobutton label="Software Direction Control" uielement="branch">
                  <combo label="Count Direction" define="GPT12E.T2CON.T2UD">
                    <item label="up counting" override="value1"/>
                    <item label="down counting" override="value2"/>
                  </combo>
                </radiobutton>
                <radiobutton label="Hardware Direction Control, by T2EUD input" uielement="branch">
                  <combo label="T2EUD Input Pin Select" define="GPT12E.PISEL.IST2EUD" default="label=T2EUDB (P2.4)">
                    <item label="T2EUDA (P0.2)" override="value1" lockon="PORT.P0_DIR.P2.label=Input"/>
                    <item label="T2EUDB (P2.4)" override="value2"/>
                  </combo>
                </radiobutton>
              </radio>
            </branch>
            <branch label="Timer Value">
              <radio define="GPT12E.TEMP_T2_SEL" svd="0">
                <radiobutton label="...as clock ticks" lockon="GPT12E.T2_TIME=0" uielement="branch">
                  <spinbox label="T2 Value" suffix=" ticks" define="GPT12E.T2_TICK[15:0]" svd="0" default="1"/>
                </radiobutton>
                <radiobutton label="...as time [us]" lockon="GPT12E.T2_TICK[15:0]=0" uielement="branch">
                  <doublespinbox label="Time" suffix=" us" define="GPT12E.T2_TIME" svd="0" default="1.00"/>
                </radiobutton>
              </radio>
              <math label="Timer Value" unit="ticks" define="GPT12E.T2.T2" formula="GPT12E.T2CON.T2UD&gt;0?(GPT12E.T2_TICK[15:0]+GPT1.T2_CLK*GPT12E.T2_TIME):(0x10000-(GPT12E.T2_TICK[15:0]+GPT1.T2_CLK*GPT12E.T2_TIME))"/>
            </branch>
            <checkbox label="Pin Select" define="GPT12E.TEMP_T2_PISEL" svd="0" uielement="branch">
              <combo label="T2IN Pin Select" define="GPT12E.PISEL.IST2IN" default="label=T2INA (P1.2)">
                <item label="T2INA (P1.2)" override="value1" lockon="PORT.P1_DIR.P2.label=Input"/>
                <item label="T2INB (P1.4)" override="value2" lockon="PORT.P1_DIR.P4.label=Input"/>
              </combo>
            </checkbox>
            <checkbox label="Interrupt" define="GPT12E.T2_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_GPT1=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCU.GPT12IEN.T2IE" header="int_defines.h"/>
              <edit label="Call Back" define="GPT1.T2_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
          </branch>
          <branch label="Core Timer3">
            <math label="GPT1 Timer3 Clock" unit="MHz" define="GPT1.T3_CLK" svd="0" formula="GPT12E.T3CON.T3M&lt;1?(GPT1.BASE_CLK/2^(GPT12E.T3CON_T3I_TIMER)):(GPT12E.T3CON.T3M&lt;2?GPT1.BASE_CLK:(GPT12E.T3CON.T3M&lt;3?(GPT1.BASE_CLK/2^(GPT12E.T3CON_T3I_GATED_TIMER_LOW)):(GPT12E.T3CON.T3M&lt;6?(GPT1.BASE_CLK/2^(GPT12E.T3CON_T3I_GATED_TIMER_HIGH)):GPT1.BASE_CLK)))"/>
            <branch label="Mode Select">
              <radio define="GPT12E.T3CON.T3M">
                <radiobutton label="Timer Mode" value="0" uielement="branch">
                  <combo label="Individual Prescaler" define="GPT12E.T3CON_T3I_TIMER" svd="0">
                    <item label="Block Prescaler / 1"/>
                    <item label="Block Prescaler / 2"/>
                    <item label="Block Prescaler / 4"/>
                    <item label="Block Prescaler / 8"/>
                    <item label="Block Prescaler / 16"/>
                    <item label="Block Prescaler / 32"/>
                    <item label="Block Prescaler / 64"/>
                    <item label="Block Prescaler / 128"/>
                  </combo>
                </radiobutton>
                <radiobutton label="Counter Mode" value="1" uielement="branch">
                  <combo label="Input Edge Select" define="GPT12E.T3CON_T3I_COUNTER" svd="0">
                    <item label="None. Counter T3 is disabled"/>
                    <item label="Rising edge on T3IN"/>
                    <item label="Falling edge on T3IN"/>
                    <item label="Rising or Falling edge on T3IN"/>
                  </combo>
                </radiobutton>
                <radiobutton label="Gated Timer Mode, low active" value="2" uielement="branch">
                  <combo label="Individual Prescaler" define="GPT12E.T3CON_T3I_GATED_TIMER_LOW" svd="0">
                    <item label="Block Prescaler / 1"/>
                    <item label="Block Prescaler / 2"/>
                    <item label="Block Prescaler / 4"/>
                    <item label="Block Prescaler / 8"/>
                    <item label="Block Prescaler / 16"/>
                    <item label="Block Prescaler / 32"/>
                    <item label="Block Prescaler / 64"/>
                    <item label="Block Prescaler / 128"/>
                  </combo>
                </radiobutton>
                <radiobutton label="Gated Timer Mode, high active" value="3" uielement="branch">
                  <combo label="Individual Prescaler" define="GPT12E.T3CON_T3I_GATED_TIMER_HIGH" svd="0">
                    <item label="Block Prescaler / 1"/>
                    <item label="Block Prescaler / 2"/>
                    <item label="Block Prescaler / 4"/>
                    <item label="Block Prescaler / 8"/>
                    <item label="Block Prescaler / 16"/>
                    <item label="Block Prescaler / 32"/>
                    <item label="Block Prescaler / 64"/>
                    <item label="Block Prescaler / 128"/>
                  </combo>
                </radiobutton>
                <radiobutton label="Inc. Interface Mode, rotation detection" value="6" uielement="branch">
                  <combo label="Input Edge Select" define="GPT12E.T3CON_T3I_INC_ROT" svd="0">
                    <item label="None. Counter T3 stopped"/>
                    <item label="Rising or Falling edge on T3IN"/>
                    <item label="Rising or Falling edge on T3EUD"/>
                    <item label="Rising or Falling edge on any T3 input (T3IN, T3EUD)"/>
                  </combo>
                </radiobutton>
                <radiobutton label="Inc. Interface Mode, edge detection" value="7" uielement="branch">
                  <combo label="Input Edge Select" define="GPT12E.T3CON_T3I_INC_EDGE" svd="0">
                    <item label="None. Counter T3 stopped"/>
                    <item label="Rising or Falling edge on T3IN"/>
                    <item label="Rising or Falling edge on T3EUD"/>
                    <item label="Rising or Falling edge on any T3 input (T3IN, T3EUD)"/>
                  </combo>
                </radiobutton>
              </radio>
              <math label="T3I" define="GPT12E.T3CON.T3I" formula="GPT12E.T3CON.T3M&lt;1?GPT12E.T3CON_T3I_TIMER:GPT12E.T3CON.T3M&lt;2?GPT12E.T3CON_T3I_COUNTER:GPT12E.T3CON.T3M&lt;3?GPT12E.T3CON_T3I_GATED_TIMER_LOW:GPT12E.T3CON.T3M&lt;4?GPT12E.T3CON_T3I_GATED_TIMER_HIGH:GPT12E.T3CON.T3M&lt;7?GPT12E.T3CON_T3I_INC_ROT:GPT12E.T3CON_T3I_INC_EDGE"/>
            </branch>
            <branch label="Direction Control">
              <radio define="GPT12E.T3CON.T3UDE">
                <radiobutton label="Software Direction Control" uielement="branch">
                  <combo label="Count Direction" define="GPT12E.T3CON.T3UD">
                    <item label="up counting" override="value1"/>
                    <item label="down counting" override="value2"/>
                  </combo>
                </radiobutton>
                <radiobutton label="Hardware Direction Control, by T3EUD input" uielement="branch">
                  <combo label="T3EUD Input Pin Select" define="GPT12E.PISEL.IST3EUD" default="label=T3EUDB (P2.5)">
                    <item label="T3EUDA (P0.4)" override="value1" lockon="PORT.P0_DIR.P4.label=Input"/>
                    <item label="T3EUDB (P2.5)" override="value2"/>
                    <item hide="value3"/>
                    <item hide="value4"/>
                  </combo>
                </radiobutton>
              </radio>
            </branch>
            <checkbox label="Output Toggle Latch (T3OTL) preset" define="GPT12E.T3CON.T3OTL"/>
            <checkbox label="Overflow/Underflow Output Enable - T3OUT" define="GPT12E.T3CON.T3OE" uielement="branch">
              <combo label="T3OUT Pin Select" define="GPT12E.TEMP_T3OUT" svd="0" default="label=T3OUT (P0.0)">
                <item label="T3OUT (P0.0)" lockon="PORT.P0_DIR.P0.label=Output;PORT.P0_0_ALT[1:0].label=T3OUT"/>
                <item label="T3OUT (P1.2)" lockon="PORT.P1_DIR.P2.label=Output;PORT.P1_2_ALT[1:0].label=T3OUT"/>
              </combo>
            </checkbox>
            <branch label="Timer Value">
              <radio define="GPT12E.TEMP_T3_SEL" svd="0">
                <radiobutton label="...as clock ticks" lockon="GPT12E.T3_TIME=0" uielement="branch">
                  <spinbox label="T3 Value" suffix=" ticks" define="GPT12E.T3_TICK[15:0]" svd="0" default="1"/>
                </radiobutton>
                <radiobutton label="...as time [us]" lockon="GPT12E.T3_TICK[15:0]=0" uielement="branch">
                  <doublespinbox label="Time" suffix=" us" define="GPT12E.T3_TIME" svd="0" default="1.00"/>
                </radiobutton>
              </radio>
              <math label="Timer Value" unit="ticks" define="GPT12E.T3.T3" formula="GPT12E.T3CON.T3UD&gt;0?(GPT12E.T3_TICK[15:0]+GPT1.T3_CLK*GPT12E.T3_TIME):(0x10000-(GPT12E.T3_TICK[15:0]+GPT1.T3_CLK*GPT12E.T3_TIME))"/>
            </branch>
            <checkbox label="Pin Select" define="GPT12E.TEMP_T3_PISEL" svd="0" uielement="branch">
              <combo label="T3IN Pin Select" define="GPT12E.PISEL.IST3IN" default="label=T3IND (MON)">
                <item label="T3INA (CCU6 - CC60)" override="value1"/>
                <item label="T3INB (T3INB/T4IND Input Selector from CCU6)" override="value2"/>
                <item label="T3INC (P1.0)" lockon="PORT.P1_DIR.P0.label=Input" override="value3"/>
                <item label="T3IND (MON)" override="value4"/>
              </combo>
            </checkbox>
            <checkbox label="Interrupt" define="GPT12E.T3_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_GPT1=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCU.GPT12IEN.T3IE" header="int_defines.h"/>
              <edit label="Call Back" define="GPT1.T3_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
          </branch>
          <branch label="Aux. Timer4">
            <math label="GPT1 Timer4 Clock" unit="MHz" define="GPT1.T4_CLK" svd="0" formula="GPT12E.T4CON.T4M&lt;1?(GPT1.BASE_CLK/2^(GPT12E.T4CON_T4I_TIMER)):(GPT12E.T4CON.T4M&lt;2?GPT1.BASE_CLK:(GPT12E.T4CON.T4M&lt;3?(GPT1.BASE_CLK/2^(GPT12E.T4CON_T4I_GATED_TIMER_LOW)):(GPT12E.T4CON.T4M&lt;4?(GPT1.BASE_CLK/2^(GPT12E.T4CON_T4I_GATED_TIMER_HIGH)):GPT1.BASE_CLK)))"/>
            <branch label="Mode Select">
              <radio define="GPT12E.T4CON.T4M">
                <radiobutton label="Timer Mode" value="0" uielement="branch">
                  <combo label="Individual Prescaler" define="GPT12E.T4CON_T4I_TIMER" svd="0">
                    <item label="Block Prescaler / 1"/>
                    <item label="Block Prescaler / 2"/>
                    <item label="Block Prescaler / 4"/>
                    <item label="Block Prescaler / 8"/>
                    <item label="Block Prescaler / 16"/>
                    <item label="Block Prescaler / 32"/>
                    <item label="Block Prescaler / 64"/>
                    <item label="Block Prescaler / 128"/>
                  </combo>
                </radiobutton>
                <radiobutton label="Counter Mode" value="1" uielement="branch">
                  <combo label="Input Edge Select" define="GPT12E.T4CON_T4I_COUNTER" svd="0">
                    <item label="None. Counter T4 is disabled" value="0"/>
                    <item label="Rising edge on T4IN" value="1"/>
                    <item label="Falling edge on T4IN" value="2"/>
                    <item label="Rising or Falling edge on T4IN" value="3"/>
                    <item label="Rising edge on T3OTL" value="5"/>
                    <item label="Falling edge on T3OTL" value="6"/>
                    <item label="Rising or Falling edge on T3OTL" value="7"/>
                  </combo>
                </radiobutton>
                <radiobutton label="Gated Timer Mode, low active" value="2" uielement="branch">
                  <combo label="Individual Prescaler" define="GPT12E.T4CON_T4I_GATED_TIMER_LOW" svd="0">
                    <item label="Block Prescaler / 1"/>
                    <item label="Block Prescaler / 2"/>
                    <item label="Block Prescaler / 4"/>
                    <item label="Block Prescaler / 8"/>
                    <item label="Block Prescaler / 16"/>
                    <item label="Block Prescaler / 32"/>
                    <item label="Block Prescaler / 64"/>
                    <item label="Block Prescaler / 128"/>
                  </combo>
                </radiobutton>
                <radiobutton label="Gated Timer Mode, high active" value="3" uielement="branch">
                  <combo label="Individual Prescaler" define="GPT12E.T4CON_T4I_GATED_TIMER_HIGH" svd="0">
                    <item label="Block Prescaler / 1"/>
                    <item label="Block Prescaler / 2"/>
                    <item label="Block Prescaler / 4"/>
                    <item label="Block Prescaler / 8"/>
                    <item label="Block Prescaler / 16"/>
                    <item label="Block Prescaler / 32"/>
                    <item label="Block Prescaler / 64"/>
                    <item label="Block Prescaler / 128"/>
                  </combo>
                </radiobutton>
                <radiobutton label="Reload Mode" value="4" uielement="branch">
                  <combo label="Input Edge Select" define="GPT12E.T4CON_T4I_RELOAD" svd="0">
                    <item label="None. Counter T4 is disabled" value="0"/>
                    <item label="Rising edge on T4IN" value="1"/>
                    <item label="Falling edge on T4IN" value="2"/>
                    <item label="Rising or Falling edge on T4IN" value="3"/>
                    <item label="Rising edge on T3OTL" value="5"/>
                    <item label="Falling edge on T3OTL" value="6"/>
                    <item label="Rising or Falling edge on T3OTL" value="7"/>
                  </combo>
                </radiobutton>
                <radiobutton label="Capture Mode" value="5" uielement="branch">
                  <combo label="Input Edge Select" define="GPT12E.T4CON_T4I_CAPTURE" svd="0">
                    <item label="None. Counter T4 is disabled" value="0"/>
                    <item label="Rising edge on T4IN" value="1"/>
                    <item label="Falling edge on T4IN" value="2"/>
                    <item label="Rising or Falling edge on T4IN" value="3"/>
                  </combo>
                </radiobutton>
                <radiobutton label="Inc. Interface Mode, rotation detection" value="6" uielement="branch">
                  <combo label="Input Edge Select" define="GPT12E.T4CON_T4I_INC_ROT" svd="0">
                    <item label="None. Counter T4 stopped"/>
                    <item label="Rising or Falling edge on T4IN"/>
                    <item label="Rising or Falling edge on T4EUD"/>
                    <item label="Rising or Falling edge on any T4 input (T4IN, T4EUD)"/>
                  </combo>
                </radiobutton>
                <radiobutton label="Inc. Interface Mode, edge detection" value="7" uielement="branch">
                  <combo label="Input Edge Select" define="GPT12E.T4CON_T4I_INC_EDGE" svd="0">
                    <item label="None. Counter T4 stopped"/>
                    <item label="Rising or Falling edge on T4IN"/>
                    <item label="Rising or Falling edge on T4EUD"/>
                    <item label="Rising or Falling edge on any T4 input (T4IN, T4EUD)"/>
                  </combo>
                </radiobutton>
              </radio>
              <math label="T4I" define="GPT12E.T4CON.T4I" formula="GPT12E.T4CON.T4M&lt;1?GPT12E.T4CON_T4I_TIMER:GPT12E.T4CON.T4M&lt;2?GPT12E.T4CON_T4I_COUNTER:GPT12E.T4CON.T4M&lt;3?GPT12E.T4CON_T4I_GATED_TIMER_LOW:GPT12E.T4CON.T4M&lt;4?GPT12E.T4CON_T4I_GATED_TIMER_HIGH:GPT12E.T4CON.T4M&lt;5?GPT12E.T4CON_T4I_RELOAD:GPT12E.T4CON.T4M&lt;6?GPT12E.T4CON_T4I_CAPTURE:GPT12E.T4CON.T4M&lt;7?GPT12E.T4CON_T4I_INC_ROT:GPT12E.T4CON_T4I_INC_EDGE"/>
            </branch>
            <checkbox label="Remote Run Control by T3" define="GPT12E.T4CON.T4RC"/>
            <combo label="Clear Timer T2 Enable" define="GPT12E.T4CON.CLRT2EN">
              <item label="No effect on Timer T2" override="value1"/>
              <item label="A falling edge on T4EUD clears Timer T2" override="value2"/>
            </combo>
            <combo label="Clear Timer T3 Enable" define="GPT12E.T4CON.CLRT3EN">
              <item label="No effect on Timer T3" override="value1"/>
              <item label="A falling edge on T4EUD clears Timer T3" override="value2"/>
            </combo>
            <branch label="Direction Control">
              <radio define="GPT12E.T4CON.T4UDE">
                <radiobutton label="Software Direction Control" uielement="branch">
                  <combo label="Count Direction" define="GPT12E.T4CON.T4UD">
                    <item label="up counting" override="value1"/>
                    <item label="down counting" override="value2"/>
                  </combo>
                </radiobutton>
                <radiobutton label="Hardware Direction Control, by T4EUD input" uielement="branch">
                  <combo label="T4EUD Input Pin Select" define="GPT12E.PISEL.IST4EUD" default="label=T4EUDA (P0.3)">
                    <item label="T4EUDA (P0.3)" lockon="PORT.P0_DIR.P3.label=Input" override="value1"/>
                    <item label="T4EUDB (P1.0)" lockon="PORT.P1_DIR.P0.label=Input" override="value2"/>
                    <item hide="value3"/>
                    <item hide="value4"/>
                  </combo>
                </radiobutton>
              </radio>
            </branch>
            <branch label="Timer Value">
              <radio define="GPT12E.TEMP_T4_SEL" svd="0">
                <radiobutton label="...as clock ticks" lockon="GPT12E.T4_TIME=0" uielement="branch">
                  <spinbox label="T4 Value" suffix=" ticks" define="GPT12E.T4_TICK[15:0]" svd="0" default="1"/>
                </radiobutton>
                <radiobutton label="...as time [us]" lockon="GPT12E.T4_TICK[15:0]=0" uielement="branch">
                  <doublespinbox label="Time" suffix=" us" define="GPT12E.T4_TIME" svd="0" default="1.00"/>
                </radiobutton>
              </radio>
              <math label="Timer Value" unit="ticks" define="GPT12E.T4.T4" formula="GPT12E.T4CON.T4UD&gt;0?(GPT12E.T4_TICK[15:0]+GPT1.T4_CLK*GPT12E.T4_TIME):(0x10000-(GPT12E.T4_TICK[15:0]+GPT1.T4_CLK*GPT12E.T4_TIME))"/>
            </branch>
            <checkbox label="Pin Select" define="GPT12E.TEMP_T4_PISEL" svd="0" uielement="branch">
              <combo label="T4IN Pin Select" define="GPT12E.PISEL.IST4IN" default="label=T4INB (CCU6 - CC60)">
                <item label="T4INA (P0.0)" lockon="PORT.P0_DIR.P0.label=Input" override="value1"/>
                <item label="T4INB (CCU6 - CC60)" override="value2"/>
                <item label="T4INC (P0.1)" lockon="PORT.P0_DIR.P1.label=Input" override="value3"/>
                <item label="T4IND (T3INB/T4IND Input Selector from CCU6)" override="value4"/>
              </combo>
            </checkbox>
            <checkbox label="Interrupt" define="GPT12E.T4_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_GPT1=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCU.GPT12IEN.T4IE" header="int_defines.h"/>
              <edit label="Call Back" define="GPT1.T4_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
          </branch>
          <branch label="T3INB/T4IND Input Selector from CCU6">
            <combo label="Input Selector" define="SCU.GPT12PISEL.GPT12" header="scu_defines.h">
              <item label="CC60" override="value1"/>
              <item label="CC61" override="value2"/>
              <item label="CC62" override="value3"/>
              <item label="T12 Zero Match" override="value4"/>
              <item label="T12 Period Match" override="value5"/>
              <item label="T12 Compare Match Ch0" override="value6"/>
              <item label="T12 Compare Match Ch1" override="value7"/>
              <item label="T12 Compare Match Ch2" override="value8"/>
              <item label="T13 Period Match" override="value9"/>
              <item label="T13 Zero Match" override="value10"/>
              <item label="T13 Compare Match" override="value11"/>
              <item label="any rising/falling edge on CC60/61/62" override="value12"/>
              <item hide="value13"/>
              <item hide="value14"/>
              <item hide="value15"/>
              <item hide="value16"/>
            </combo>
          </branch>
        </branch>
        <branch label="GPT2">
          <branch label="Clock">
            <combo label="Block Prescaler" define="GPT12E.T6CON.BPS2" default="label=fGPT / 2">
              <item label="fGPT / 2" override="value2"/>
              <item label="fGPT / 4" override="value1"/>
              <item label="fGPT / 8" override="value4"/>
              <item label="fGPT / 16" override="value3"/>
            </combo>
            <math label="GPT2 Clock" unit="MHz" define="GPT2.BASE_CLK" svd="0" formula="SCU.PLL_fPLL/(2*(2^(GPT12E.T6CON.BPS2.^1)))"/>
          </branch>
          <branch label="Aux. Timer5">
            <math label="GPT2 Timer5 Clock" unit="MHz" define="GPT2.T5_CLK" svd="0" formula="GPT12E.T5CON.T5M&lt;1?(GPT2.BASE_CLK/2^(GPT12E.T5CON_T5I_TIMER)):(GPT12E.T5CON.T5M&lt;2?GPT2.BASE_CLK:(GPT12E.T5CON.T5M&lt;3?(GPT2.BASE_CLK/2^(GPT12E.T5CON_T5I_GATED_TIMER_LOW)):(GPT2.BASE_CLK/2^(GPT12E.T5CON_T5I_GATED_TIMER_HIGH))))"/>
            <branch label="Mode Select">
              <radio define="GPT12E.T5CON.T5M">
                <radiobutton label="Timer Mode" value="0" uielement="branch">
                  <combo label="Individual Prescaler" define="GPT12E.T5CON_T5I_TIMER" svd="0">
                    <item label="Block Prescaler / 1"/>
                    <item label="Block Prescaler / 2"/>
                    <item label="Block Prescaler / 4"/>
                    <item label="Block Prescaler / 8"/>
                    <item label="Block Prescaler / 16"/>
                    <item label="Block Prescaler / 32"/>
                    <item label="Block Prescaler / 64"/>
                    <item label="Block Prescaler / 128"/>
                  </combo>
                </radiobutton>
                <radiobutton label="Counter Mode" value="1" uielement="branch">
                  <combo label="Input Edge Select" define="GPT12E.T5CON_T5I_COUNTER" svd="0">
                    <item label="None. Counter T5 is disabled" value="0"/>
                    <item label="Rising edge on T5IN" value="1"/>
                    <item label="Falling edge on T5IN" value="2"/>
                    <item label="Rising or Falling edge on T5IN" value="3"/>
                    <item label="Rising edge on T6OTL" value="5"/>
                    <item label="Falling edge on T6OTL" value="6"/>
                    <item label="Rising or Falling edge on T6OTL" value="7"/>
                  </combo>
                </radiobutton>
                <radiobutton label="Gated Timer Mode, low active" value="2" uielement="branch">
                  <combo label="Individual Prescaler" define="GPT12E.T5CON_T5I_GATED_TIMER_LOW" svd="0">
                    <item label="Block Prescaler / 1"/>
                    <item label="Block Prescaler / 2"/>
                    <item label="Block Prescaler / 4"/>
                    <item label="Block Prescaler / 8"/>
                    <item label="Block Prescaler / 16"/>
                    <item label="Block Prescaler / 32"/>
                    <item label="Block Prescaler / 64"/>
                    <item label="Block Prescaler / 128"/>
                  </combo>
                </radiobutton>
                <radiobutton label="Gated Timer Mode, high active" value="3" uielement="branch">
                  <combo label="Individual Prescaler" define="GPT12E.T5CON_T5I_GATED_TIMER_HIGH" svd="0">
                    <item label="Block Prescaler / 1"/>
                    <item label="Block Prescaler / 2"/>
                    <item label="Block Prescaler / 4"/>
                    <item label="Block Prescaler / 8"/>
                    <item label="Block Prescaler / 16"/>
                    <item label="Block Prescaler / 32"/>
                    <item label="Block Prescaler / 64"/>
                    <item label="Block Prescaler / 128"/>
                  </combo>
                </radiobutton>
              </radio>
              <math label="T5I" define="GPT12E.T5CON.T5I" formula="GPT12E.T5CON.T5M&lt;1?GPT12E.T5CON_T5I_TIMER:GPT12E.T5CON.T5M&lt;2?GPT12E.T5CON_T5I_COUNTER:GPT12E.T5CON.T5M&lt;3?GPT12E.T5CON_T5I_GATED_TIMER_LOW:GPT12E.T5CON_T5I_GATED_TIMER_HIGH"/>
            </branch>
            <checkbox label="Capture into CAPREL enabled" define="GPT12E.T5CON.T5SC" uielement="branch">
              <combo label="CAPREL Capture Trigger Selection" define="GPT12E.T5CON[13:10]" default="label=Capture disabled">
                <item label="Capture disabled" value="0"/>
                <item label="rising edge on CAPIN" value="4"/>
                <item label="falling edge on CAPIN" value="8"/>
                <item label="rising or falling edge on CAPIN" value="12"/>
                <item label="any edge on T3IN" value="5"/>
                <item label="any edge on T3EUD" value="9"/>
                <item label="any edge on T3IN or T3EUD" value="13"/>
              </combo>
              <checkbox label="T5 cleared on capture event" define="GPT12E.T5CON.T5CLR"/>
            </checkbox>
            <checkbox label="Remote Run Control by T6" define="GPT12E.T5CON.T5RC"/>
            <branch label="Direction Control">
              <radio define="GPT12E.T5CON.T5UDE">
                <radiobutton label="Software Direction Control" uielement="branch">
                  <combo label="Count Direction" define="GPT12E.T5CON.T5UD">
                    <item label="up counting" override="value1"/>
                    <item label="down counting" override="value2"/>
                  </combo>
                </radiobutton>
                <radiobutton label="Hardware Direction Control, by T5EUD input" uielement="branch">
                  <combo label="T5EUD Input Pin Select" define="GPT12E.PISEL.IST5EUD" default="label=T5EUDB (P2.0)">
                    <item label="T5EUDA (P1.4)" lockon="PORT.P1_DIR.P4.label=Input" override="value1"/>
                    <item label="T5EUDB (P2.0)" override="value2"/>
                  </combo>
                </radiobutton>
              </radio>
            </branch>
            <branch label="Timer Value">
              <radio define="GPT12E.TEMP_T5_SEL" svd="0">
                <radiobutton label="...as clock ticks" lockon="GPT12E.T5_TIME=0" uielement="branch">
                  <spinbox label="T5 Value" suffix=" ticks" define="GPT12E.T5_TICK[15:0]" svd="0" default="1"/>
                </radiobutton>
                <radiobutton label="...as time [us]" lockon="GPT12E.T5_TICK[15:0]=0" uielement="branch">
                  <doublespinbox label="Time" suffix=" us" define="GPT12E.T5_TIME" svd="0" default="1.00"/>
                </radiobutton>
              </radio>
              <math label="Timer Value" unit="ticks" define="GPT12E.T5.T5" formula="GPT12E.T5CON.T5UD&gt;0?(GPT12E.T5_TICK[15:0]+GPT2.T5_CLK*GPT12E.T5_TIME):(0x10000-(GPT12E.T5_TICK[15:0]+GPT2.T5_CLK*GPT12E.T5_TIME))"/>
            </branch>
            <checkbox label="T5 Pin Select" define="GPT12E.T5IN_SEL" svd="0" uielement="branch">
              <combo label="T5IN Pin Select" define="GPT12E.PISEL.IST5IN" default="label=T5INA (P0.3)">
                <item label="T5INA (P0.3)" lockon="PORT.P0_DIR.P3.label=Input" override="value1"/>
                <item label="T5INB (P2.0)" hide="value2"/>
              </combo>
            </checkbox>
            <branch label="CAPIN Pin Select">
              <combo label="CAPIN Input Pin Select" define="GPT12E.PISEL_ISCAPIN" svd="0" default="label=CAPINC (read of T3)">
                <item label="CAPINA (P0.1)" lockon="PORT.P0_DIR.P1.label=Input"/>
                <item label="CAPINB (P0.3)" lockon="PORT.P0_DIR.P3.label=Input"/>
                <item label="CAPINC (read of T3)"/>
                <item label="CAPIND (read of T2, T3, T4)"/>
                <item label="BEMF Comparator"/>
              </combo>
              <math visible="false" define="GPT12E.PISEL.ISCAPIN" formula="GPT12E.PISEL_ISCAPIN&lt;4?GPT12E.PISEL_ISCAPIN:1"/>                            
            </branch>
            <checkbox label="Interrupt" define="GPT12E.T5_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_GPT2=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCU.GPT12IEN.T5IE" header="int_defines.h"/>
              <edit label="Call Back" define="GPT2.T5_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
          </branch>
          <branch label="CAPREL">
            <radio define="GPT12E.TEMP_CAPREL_SEL" svd="0">
              <radiobutton label="...as clock ticks" lockon="GPT12E.CAPREL_TIME=0" uielement="branch">
                <spinbox label="CAPREL Value" suffix=" ticks" define="GPT12E.CAPREL_TICK[15:0]" svd="0" default="1"/>
              </radiobutton>
              <radiobutton label="...as time [us]" lockon="GPT12E.CAPREL_TICK[15:0]=0" uielement="branch">
                <doublespinbox label="Time" suffix=" us" define="GPT12E.CAPREL_TIME" svd="0" default="1.00"/>
              </radiobutton>
            </radio>
            <math label="CAPREL Timer Value" unit="ticks" define="GPT12E.CAPREL.CAPREL" formula="GPT12E.T6CON.T6UD&gt;0?(GPT12E.CAPREL_TICK[15:0]+GPT2.T6_CLK*GPT12E.CAPREL_TIME):(0x10000-(GPT12E.CAPREL_TICK[15:0]+GPT2.T6_CLK*GPT12E.CAPREL_TIME))"/>
            <checkbox label="Capture Interrupt" define="GPT12E.CAP_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_GPT2=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCU.GPT12IEN.CRIE" header="int_defines.h"/>
              <edit label="Call Back" define="GPT2.CAPREL_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
          </branch>
          <branch label="Core Timer6">
            <math label="GPT2 Timer6 Clock" unit="MHz" define="GPT2.T6_CLK" svd="0" formula="GPT12E.T6CON.T6M&lt;1?(GPT2.BASE_CLK/2^(GPT12E.T6CON_T6I_TIMER)):(GPT12E.T6CON.T6M&lt;2?GPT2.BASE_CLK:(GPT12E.T6CON.T6M&lt;3?(GPT2.BASE_CLK/2^(GPT12E.T6CON_T6I_GATED_TIMER_LOW)):(GPT2.BASE_CLK/2^(GPT12E.T6CON_T6I_GATED_TIMER_HIGH))))"/>
            <branch label="Mode Select">
              <radio define="GPT12E.T6CON.T6M">
                <radiobutton label="Timer Mode" value="0" uielement="branch">
                  <combo label="Individual Prescaler" define="GPT12E.T6CON_T6I_TIMER" svd="0">
                    <item label="Block Prescaler / 1"/>
                    <item label="Block Prescaler / 2"/>
                    <item label="Block Prescaler / 4"/>
                    <item label="Block Prescaler / 8"/>
                    <item label="Block Prescaler / 16"/>
                    <item label="Block Prescaler / 32"/>
                    <item label="Block Prescaler / 64"/>
                    <item label="Block Prescaler / 128"/>
                  </combo>
                </radiobutton>
                <radiobutton label="Counter Mode" value="1" uielement="branch">
                  <combo label="Input Edge Select" define="GPT12E.T6CON_T6I_COUNTER" svd="0">
                    <item label="None. Counter T6 is disabled"/>
                    <item label="Rising edge on T6IN"/>
                    <item label="Falling edge on T6IN"/>
                    <item label="Rising or Falling edge on T6IN"/>
                  </combo>
                </radiobutton>
                <radiobutton label="Gated Timer Mode, low active" value="2" uielement="branch">
                  <combo label="Individual Prescaler" define="GPT12E.T6CON_T6I_GATED_TIMER_LOW" svd="0">
                    <item label="Block Prescaler / 1"/>
                    <item label="Block Prescaler / 2"/>
                    <item label="Block Prescaler / 4"/>
                    <item label="Block Prescaler / 8"/>
                    <item label="Block Prescaler / 16"/>
                    <item label="Block Prescaler / 32"/>
                    <item label="Block Prescaler / 64"/>
                    <item label="Block Prescaler / 128"/>
                  </combo>
                </radiobutton>
                <radiobutton label="Gated Timer Mode, high active" value="3" uielement="branch">
                  <combo label="Individual Prescaler" define="GPT12E.T6CON_T6I_GATED_TIMER_HIGH" svd="0">
                    <item label="Block Prescaler / 1"/>
                    <item label="Block Prescaler / 2"/>
                    <item label="Block Prescaler / 4"/>
                    <item label="Block Prescaler / 8"/>
                    <item label="Block Prescaler / 16"/>
                    <item label="Block Prescaler / 32"/>
                    <item label="Block Prescaler / 64"/>
                    <item label="Block Prescaler / 128"/>
                  </combo>
                </radiobutton>
              </radio>
              <math label="T6I" define="GPT12E.T6CON.T6I" formula="GPT12E.T6CON.T6M&lt;1?GPT12E.T6CON_T6I_TIMER:GPT12E.T6CON.T6M&lt;2?GPT12E.T6CON_T6I_COUNTER:GPT12E.T6CON.T6M&lt;3?GPT12E.T6CON_T6I_GATED_TIMER_LOW:GPT12E.T6CON_T6I_GATED_TIMER_HIGH"/>
            </branch>
            <checkbox label="T6 cleared on capture event" define="GPT12E.T6CON.T6CLR"/>
            <checkbox label="T6 reload by CAPREL" define="GPT12E.T6CON.T6SR"/>
            <branch label="Direction Control">
              <radio define="GPT12E.T6CON.T6UDE">
                <radiobutton label="Software Direction Control" uielement="branch">
                  <combo label="Count Direction" define="GPT12E.T6CON.T6UD">
                    <item label="up counting" override="value1"/>
                    <item label="down counting" override="value2"/>
                  </combo>
                </radiobutton>
                <radiobutton label="Hardware Direction Control, by T6EUD input" uielement="branch">
                  <combo label="T6EUD Input Pin Select" define="GPT12E.PISEL.IST6EUD" default="label=T6EUDA (P1.1)">
                    <item label="T6EUDA (P1.1)" lockon="PORT.P1_DIR.P1.label=Input" override="value1"/>
                    <item label="T6EUDB (P1.3)" lockon="PORT.P1_DIR.P3.label=Input" override="value2"/>
                  </combo>
                </radiobutton>
              </radio>
            </branch>
            <checkbox label="Output Toggle Latch (T6OTL) preset" define="GPT12E.T6CON.T6OTL"/>
            <checkbox label="Overflow/Underflow Output Enable - T6OUT" define="GPT12E.T6CON.T6OE" uielement="branch">
              <combo label="T6OUT Pin Select" define="GPT12E.TEMP_T6OUT" svd="0" default="label=T6OUT (P0.3)">
                <item label="T6OUT (P0.3)" lockon="PORT.P0_DIR.P3.label=Output;PORT.P0_3_ALT[1:0].label=T6OUT"/>
                <item label="T6OUT (P0.1)" lockon="PORT.P0_DIR.P1.label=Output;PORT.P0_1_ALT[1:0].label=T6OUT"/>
              </combo>
            </checkbox>
            <branch label="Timer Value">
              <radio define="GPT12E.TEMP_T6_SEL" svd="0">
                <radiobutton label="...as clock ticks" lockon="GPT12E.T6_TIME=0" uielement="branch">
                  <spinbox label="T6 Value" suffix=" ticks" define="GPT12E.T6_TICK[15:0]" svd="0" default="1"/>
                </radiobutton>
                <radiobutton label="...as time [us]" lockon="GPT12E.T6_TICK[15:0]=0" uielement="branch">
                  <doublespinbox label="Time" suffix=" us" define="GPT12E.T6_TIME" svd="0" default="1.00"/>
                </radiobutton>
              </radio>
              <math label="Timer Value" unit="ticks" define="GPT12E.T6.T6" formula="GPT12E.T6CON.T6UD&gt;0?(GPT12E.T6_TICK[15:0]+GPT2.T6_CLK*GPT12E.T6_TIME):(0x10000-(GPT12E.T6_TICK[15:0]+GPT2.T6_CLK*GPT12E.T6_TIME))"/>
            </branch>
            <checkbox label="Pin Select" define="GPT12E.TEMP_T6_PISEL" svd="0" uielement="branch">
              <combo label="T6IN Pin Select" define="GPT12E.PISEL.IST6IN" default="label=T6INA (P0.2)">
                <item label="T6INA (P0.2)" override="value1"/>
                <item label="T6INB (P0.3)" override="value2"/>
              </combo>
            </checkbox>
            <checkbox label="Interrupt" define="GPT12E.T6_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_GPT2=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCU.GPT12IEN.T6IE" header="int_defines.h"/>
              <edit label="Call Back" define="GPT2.T6_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
          </branch>
        </branch>
      </header>
    </treecontainer>
    <treecontainer headerlabels="Structure;Settings;" label="Timer2x" desc="Timer 2x" columnwidths="300;250">
      <header file="timer2x_defines.h">
        <checkbox label="Configure Timer2" define="TIMER2.Configuration_En" svd="0" uielement="branch">
          <math label="Timer2 Clock" unit="MHz" define="TIMER2.CLK" svd="0" formula="TIMER2.T2MOD.PREN?SCU.PLL_fPLL/(2^(TIMER2.T2MOD.T2PRE)):SCU.PLL_fPLL/12"/>
          <math label="Max. Period" unit="us" define="TIMER2.MAX_PERIOD" svd="0" formula="65535/TIMER2.CLK"/>
          <branch label="Clock Setting">
            <radio label="Timer / Counter Select" define="TIMER2.T2CON.C_T2">
              <radiobutton label="Timer" uielement="branch">
                <checkbox label="Prescaler Enable" define="TIMER2.T2MOD.PREN" uielement="branch">
                  <combo label="Prescaler" define="TIMER2.T2MOD.T2PRE">
                    <item label="divide by 1" override="value1"/>
                    <item label="divide by 2" override="value2"/>
                    <item label="divide by 4" override="value3"/>
                    <item label="divide by 8" override="value4"/>
                    <item label="divide by 16" override="value5"/>
                    <item label="divide by 32" override="value6"/>
                    <item label="divide by 64" override="value7"/>
                    <item label="divide by 128" override="value8"/>
                  </combo>
                </checkbox>
              </radiobutton>
              <radiobutton label="Counter"/>
            </radio>
          </branch>
          <branch label="Mode Select">
            <radio define="TIMER2.T2CON.CP_RL2">
              <radiobutton label="Auto-Reload Mode" uielement="branch">
                <combo label="Up/Down Counter Enable" define="TIMER2.T2MOD.DCEN">
                  <item label="Disabled" override="value1"/>
                  <item label="Enabled" override="value2"/>
                </combo>
              </radiobutton>
              <radiobutton label="Capture Mode"/>
            </radio>
          </branch>
          <checkbox label="External Capture/Reload Event Enable" define="TIMER2.T2CON.EXEN2" uielement="branch">
            <combo label="Edge Select in Capture Mode / Reload Mode" define="TIMER2.T2MOD.EDGESEL">
              <item label="Falling edge at pin T2EX" override="value1"/>
              <item label="Rising edge at pin T2EX" override="value2"/>
            </combo>
          </checkbox>
          <checkbox label="External Start Enable" define="TIMER2.T2MOD.T2RHEN" uielement="branch">
            <combo label="Edge Select for External Start" define="TIMER2.T2MOD.T2REGS">
              <item label="Falling edge at pin T2EX" override="value1"/>
              <item label="Rising edge at pin T2EX" override="value2"/>
            </combo>
          </checkbox>
          <branch label="Timer Register">
            <radio define="TIMER2.TEMP_TIMER2_TIME_SEL" svd="0">
              <radiobutton label="...as clock ticks" uielement="branch">
                <spinbox label="Value" define="TIMER2.TEMP_TIME_TICK[15:0]" svd="0" default="1" suffix=" ticks"/>
              </radiobutton>
              <radiobutton label="...as time [us]" uielement="branch">
                <doublespinbox label="Time" suffix=" us" define="TIMER2.TEMP_TIME_TIME" svd="0" default="1.00"/>
              </radiobutton>
            </radio>
            <math label="Timer Value" unit="ticks" define="TIMER2.T2[15:0]" svd="0" format="%04X" formula="TIMER2.TEMP_TIMER2_TIME_SEL?floor(0x10000-TIMER2.TEMP_TIME_TIME*TIMER2.CLK):(0x10000-TIMER2.TEMP_TIME_TICK[15:0])"/>
            <math visible="false" define="TIMER2.T2L.T2L" format="%02X" formula="TIMER2.T2[15:0].*0xFF"/>
            <math visible="false" define="TIMER2.T2H.T2H" format="%02X" formula="(TIMER2.T2[15:0]/0x100).*0xFF"/>
          </branch>
          <branch label="Reload / Capture Register">
            <radio define="TIMER2.TEMP_TIMER2_SEL" svd="0">
              <radiobutton label="...as clock ticks" uielement="branch">
                <spinbox label="Value" define="TIMER2.TEMP_TIMER2_TICK[15:0]" svd="0" default="1" suffix=" ticks"/>
              </radiobutton>
              <radiobutton label="...as time [us]" uielement="branch">
                <doublespinbox label="Time" suffix=" us" define="TIMER2.TEMP_TIMER2_TIME" svd="0" default="1.00"/>
              </radiobutton>
            </radio>
            <math label="Reload Value" unit="ticks" format="%04X" define="TIMER2.RC2[15:0]" svd="0" formula="TIMER2.TEMP_TIMER2_SEL?floor(0x10000-TIMER2.TEMP_TIMER2_TIME*TIMER2.CLK):(0x10000-TIMER2.TEMP_TIMER2_TICK[15:0])"/>
            <math visible="false" define="TIMER2.RC2L.RC2" format="%02X" formula="TIMER2.RC2[15:0].*0xFF"/>
            <math visible="false" define="TIMER2.RC2H.RC2" format="%02X" formula="(TIMER2.RC2[15:0]/0x100).*0xFF"/>
          </branch>
          <branch label="Interrupt">
            <checkbox label="External Interrupt" define="TIMER2.EXF2_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_UART1=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="TIMER2.T2CON1.EXF2EN"/>
              <edit label="Call Back" define="TIMER2.EXF2_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
            <checkbox label="Overflow / Underflow Interrupt" define="TIMER2.TF2_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_UART1=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="TIMER2.T2CON1.TF2EN"/>
              <edit label="Call Back" define="TIMER2.TF2_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
          </branch>
          <branch label="Pin Select">
            <combo label="External Counter Input (T2IN)" define="SCU.MODPISEL2.T2IS" header="scu_defines.h" default="label=P2.5 (T2_1)">
              <item label="P2.5 (T2_1)" value="1"/>
              <item label="P0.0 (T2_0)" value="0" override="value1" lockon="PORT.P0_DIR.P0.label=Input"/>
            </combo>
            <branch label="External Control Input (T2EX)">
              <radio define="SCU.MODPISEL1.T2EXCON" header="scu_defines.h">
                <radiobutton label="Pin Select" uielement="branch">
                  <combo label="External Control Input (T2EX)" define="SCU.MODPISEL2.T2EXIS" header="scu_defines.h" default="label=internal LIN Trx">
                    <item label="internal LIN Trx" override="value1"/>
                    <item label="P1.2 (T2EX_1)" override="value2" lockon="PORT.P1_DIR.P2.label=Input"/>
                  </combo>
                </radiobutton>
                <radiobutton label="CCU6-CC60 (Ch0)"/>
              </radio>
            </branch>
            <combo label="External Flag Output (EXF2)" define="TIMER2.EXF2_PINSEL" svd="0" default="label=none">
              <item label="none"/>
              <item label="P0.2 (EXF2_0)" lockon="PORT.P0_DIR.P2.label=Output;PORT.P0_2_ALT[1:0].label=EXF2_0"/>
            </combo>
          </branch>
        </checkbox>
        <checkbox label="Configure Timer21" define="TIMER21.Configuration_En" svd="0" uielement="branch">
          <math label="Timer21 Clock" unit="MHz" define="TIMER21.CLK" svd="0" formula="TIMER21.T2MOD.PREN?SCU.PLL_fPLL/(2^(TIMER21.T2MOD.T2PRE)):SCU.PLL_fPLL/12"/>
          <math label="Max. Period" unit="us" define="TIMER21.MAX_PERIOD" svd="0" formula="65535/TIMER21.CLK"/>
          <branch label="Clock Setting">
            <radio label="Timer / Counter Select" define="TIMER21.T2CON.C_T2">
              <radiobutton label="Timer" uielement="branch">
                <checkbox label="Prescaler Enable" define="TIMER21.T2MOD.PREN" uielement="branch">
                  <combo label="Prescaler" define="TIMER21.T2MOD.T2PRE">
                    <item label="divide by 1" override="value1"/>
                    <item label="divide by 2" override="value2"/>
                    <item label="divide by 4" override="value3"/>
                    <item label="divide by 8" override="value4"/>
                    <item label="divide by 16" override="value5"/>
                    <item label="divide by 32" override="value6"/>
                    <item label="divide by 64" override="value7"/>
                    <item label="divide by 128" override="value8"/>
                  </combo>
                </checkbox>
              </radiobutton>
              <radiobutton label="Counter"/>
            </radio>
          </branch>
          <branch label="Mode Select">
            <radio define="TIMER21.T2CON.CP_RL2">
              <radiobutton label="Auto-Reload Mode" uielement="branch">
                <combo label="Up/Down Counter Enable" define="TIMER21.T2MOD.DCEN">
                  <item label="Disabled" override="value1"/>
                  <item label="Enabled" override="value2"/>
                </combo>
              </radiobutton>
              <radiobutton label="Capture Mode"/>
            </radio>
          </branch>
          <checkbox label="External Capture/Reload Event Enable" define="TIMER21.T2CON.EXEN2" uielement="branch">
            <combo label="Edge Select in Capture Mode / Reload Mode" define="TIMER21.T2MOD.EDGESEL">
              <item label="Falling edge at pin T21EX" override="value1"/>
              <item label="Rising edge at pin T21EX" override="value2"/>
            </combo>
          </checkbox>
          <checkbox label="External Start Enable" define="TIMER21.T2MOD.T2RHEN" uielement="branch">
            <combo label="Edge Select for External Start" define="TIMER21.T2MOD.T2REGS">
              <item label="Falling edge at pin T21EX" override="value1"/>
              <item label="Rising edge at pin T21EX" override="value2"/>
            </combo>
          </checkbox>
          <branch label="Timer Register">
            <radio define="TIMER21.TEMP_TIMER2_TIME_SEL" svd="0">
              <radiobutton label="...as clock ticks" uielement="branch">
                <spinbox label="Value" define="TIMER21.TEMP_TIME_TICK[15:0]" svd="0" default="1" suffix=" ticks"/>
              </radiobutton>
              <radiobutton label="...as time [us]" uielement="branch">
                <doublespinbox label="Time" suffix=" us" define="TIMER21.TEMP_TIME_TIME" svd="0" default="1.00"/>
              </radiobutton>
            </radio>
            <math label="Timer Value" unit="ticks" format="%04X" define="TIMER21.T2[15:0]" svd="0" formula="TIMER21.TEMP_TIMER2_TIME_SEL?floor(0x10000-TIMER21.TEMP_TIME_TIME*TIMER21.CLK):(0x10000-TIMER21.TEMP_TIME_TICK[15:0])"/>
            <math visible="false" define="TIMER21.T2L.T2L" format="%02X" formula="TIMER21.T2[15:0].*0xFF"/>
            <math visible="false" define="TIMER21.T2H.T2H" format="%02X" formula="(TIMER21.T2[15:0]/0x100).*0xFF"/>
          </branch>
          <branch label="Reload / Capture Register">
            <radio define="TIMER21.TEMP_TIMER2_SEL" svd="0">
              <radiobutton label="...as clock ticks" uielement="branch">
                <spinbox label="Value" define="TIMER21.TEMP_TIMER2_TICK[15:0]" svd="0" default="1" suffix=" ticks"/>
              </radiobutton>
              <radiobutton label="...as time [us]" uielement="branch">
                <doublespinbox label="Time" suffix=" us" define="TIMER21.TEMP_TIMER2_TIME" svd="0" default="1.00"/>
              </radiobutton>
            </radio>
            <math label="Reload Value" unit="ticks" define="TIMER21.RC2[15:0]" svd="0" format="%04X" formula="TIMER21.TEMP_TIMER2_SEL?floor(0x10000-TIMER21.TEMP_TIMER2_TIME*TIMER21.CLK):(0x10000-TIMER21.TEMP_TIMER2_TICK[15:0])"/>
            <math visible="false" define="TIMER21.RC2L.RC2" format="%02X" formula="TIMER21.RC2[15:0].*0xFF"/>
            <math visible="false" define="TIMER21.RC2H.RC2" format="%02X" formula="(TIMER21.RC2[15:0]/0x100).*0xFF"/>
          </branch>
          <branch label="Interrupt">
            <checkbox label="External Interrupt" define="TIMER21.EXF2_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_UART2=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="TIMER21.T2CON1.EXF2EN"/>
              <edit label="Call Back" define="TIMER21.EXF2_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
            <checkbox label="Overflow / Underflow Interrupt" define="TIMER21.TF2_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_UART2=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="TIMER21.T2CON1.TF2EN"/>
              <edit label="Call Back" define="TIMER21.TF2_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
          </branch>
          <branch label="Pin Select">
            <checkbox label="External Counter Input (T21)" define="TIMER21.T21IN_EN" svd="0" uielement="branch">
              <combo label="External Counter Input (T21)" define="SCU.MODPISEL2.T21IS" header="scu_defines.h" default="label=P0.1 (T21_0)">
                <item label="P0.1 (T21_0)" override="value1" lockon="PORT.P0_DIR.P1.label=Input"/>
                <item label="P1.1 (T21_1)" override="value2" lockon="PORT.P1_DIR.P1.label=Input"/>
                <item label="P0.4 (T21_2)" override="value3" lockon="PORT.P0_DIR.P4.label=Input"/>
              </combo>
            </checkbox>
            <branch label="External Control Input (T21EX)">
              <radio define="SCU.MODPISEL1.T21EXCON" header="scu_defines.h">
                <radiobutton label="Pin Select" uielement="branch">
                  <combo label="External Control Input (T21EX)" define="SCU.MODPISEL2.T21EXIS" header="scu_defines.h" default="label=P2.3 (T21EX_2)">
                    <item label="P0.2 (T21EX_0)" override="value1" lockon="PORT.P0_DIR.P2.label=Input"/>
                    <item label="P1.4 (T21EX_1)" override="value2" lockon="PORT.P1_DIR.P4.label=Input"/>
                    <item label="P2.3 (T21EX_2)" override="value3"/>
                    <item label="P1.2 (T21EX_3)" override="value4" lockon="PORT.P1_DIR.P2.label=Input"/>
                  </combo>
                </radiobutton>
                <radiobutton label="CCU6-COUT60 (Ch0)"/>
              </radio>
            </branch>
            <combo label="External Flag Output (EXF21)" define="TIMER21.EXF21_PINSEL" svd="0" default="label=none">
              <item label="none"/>
              <item label="P0.0 (EXF21_0)" lockon="PORT.P0_DIR.P0.label=Output;PORT.P0_0_ALT[1:0].label=EXF21_0"/>
              <item label="P1.3 (EXF21_1)" lockon="PORT.P1_DIR.P3.label=Output;PORT.P1_3_ALT[1:0].label=EXF21_1"/>
              <item label="P0.3 (EXF21_2)" lockon="PORT.P0_DIR.P3.label=Output;PORT.P0_3_ALT[1:0].label=EXF21_2"/>
              <item label="P1.0 (EXF21_3)" lockon="PORT.P1_DIR.P0.label=Output;PORT.P1_0_ALT[1:0].label=EXF21_3"/>
            </combo>
          </branch>
        </checkbox>
      </header>
    </treecontainer>
    <treecontainer headerlabels="Structure;Settings;" label="Timer3" desc="Timer 3" columnwidths="300;250">
      <header file="timer3_defines.h">
        <checkbox label="Configure Timer3" define="TIMER3.CTRL.T3_PD_N" uielement="branch">
          <math label="Timer3 Clock" unit="MHz" define="TIMER3.CLK" svd="0" formula="(SCU.APCLK_CTRL1.T3CLK_SEL&lt;1?18:SCU.APCLK_MI_CLK)/(2^SCU.APCLK_CTRL2.T3CLK_DIV)"/>
          <math label="Max. Period" unit="us" define="TIMER3.MAX_PERIOD" svd="0" formula="65535/TIMER3.CLK"/>
          <branch label="Clock Setting">
            <combo label="Clock Selection" define="SCU.APCLK_CTRL1.T3CLK_SEL" header="scu_defines.h" default="label=MI_CLK">
              <item label="LP_CLK" override="value1"/>
              <item label="MI_CLK" override="value2"/>
            </combo>
            <combo label="Clock Divider" define="SCU.APCLK_CTRL2.T3CLK_DIV" header="scu_defines.h">
              <item label="divide by 1" override="value1"/>
              <item label="divide by 2" override="value2"/>
              <item label="divide by 4" override="value3"/>
              <item label="divide by 8" override="value4"/>
            </combo>
          </branch>
          <branch label="Mode Select">
            <radio define="TIMER3.MODE_CONF.T3M">
              <radiobutton label="Mode 0: 13-bit timer" lockon="TIMER3.MODE_CONF.T3_SUBM[1]=0;TIMER3.MODE_CONF.T3_SUBM[0]=0" uielement="branch">
                <branch label="Timer Value">
                  <radio define="TIMER3.MODE0_VALUE_SEL" svd="0">
                    <radiobutton label="...as timer ticks" uielement="branch">
                      <spinbox label="Value" suffix=" ticks" define="TIMER3.MODE0_VALUE_TICK" svd="0" default="1"/>
                    </radiobutton>
                    <radiobutton label="...as time [us]" uielement="branch">
                      <doublespinbox label="Time" suffix=" us" define="TIMER3.MODE0_VALUE_TIME" svd="0" default="1.00"/>
                    </radiobutton>
                  </radio>
                  <math label="Timer3 Value" unit="ticks" define="TIMER3.MODE0_VALUE[12:0]" svd="0" formula="((TIMER3.MODE0_VALUE_SEL&gt;0?(TIMER3.CLK*TIMER3.MODE0_VALUE_TIME):TIMER3.MODE0_VALUE_TICK).^0x1FFF)+1"/>
                </branch>
              </radiobutton>
              <radiobutton label="Mode 1: 16-bit timer" lockon="TIMER3.MODE_CONF.T3_SUBM[1]=0" uielement="branch">
                <checkbox label="Mode 1b: 16-bit timer triggered by an event" define="TIMER3.MODE_CONF.T3_SUBM[0]" uielement="branch">
                  <combo label="Trigger Input Event Selection" define="TIMER3.T3_TRIGG_CTRL.T3_TRIGG_INP_SEL">
                    <item label="CCU6-CC60" override="CCU6_CC6_0"/>
                    <item label="CCU6-CC61" override="CCU6_CC61"/>
                    <item label="CCU6-CC62" override="CCU6_CC62"/>
                    <item label="CCU6-T12 Zero Match" override="CCU6_T12_ZM"/>
                    <item label="CCU6-T12 Period Match" override="CCU6_T12_PM"/>
                    <item label="CCU6-COUT60" override="CCU6_COUT6_0"/>
                    <item label="CCU6-COUT61" override="CCU6_COUT61"/>
                    <item label="CCU6-COUT62" override="CCU6_COUT62"/>
                  </combo>
                  <checkbox label="Retrigger by CCU6 interrupt output" define="TIMER3.T3_TRIGG_CTRL.RETRIG"/>
                  <combo label="Reset Selection" define="TIMER3.T3_TRIGG_CTRL.T3_RES_CONF">
                    <item label="No reset on PWM edge" override="No_Reset_on_PWM_Edge"/>
                    <item label="Reset on rising edge" override="Reset_On_Rising_Edge"/>
                    <item label="Reset on falling edge" override="Reset_On_Falling_Edge"/>
                    <item label="Reset on both edges" override="Reset_on_both_Edges"/>
                  </combo>
                  <branch label="Compare Value">
                    <radio define="TIMER3.MODE1_CMP_SEL" svd="0">
                      <radiobutton label="...as timer ticks" lockon="TIMER3.MODE1_CMP_TIME=0" svd="0" uielement="branch">
                        <spinbox label="Compare Value" suffix=" ticks" define="TIMER3.MODE1_CMP_TICK" svd="0"/>
                      </radiobutton>
                      <radiobutton label="...as time [us]" lockon="TIMER3.MODE1_CMP_TICK=0" svd="0" uielement="branch">
                        <doublespinbox label="Time" suffix=" us" define="TIMER3.MODE1_CMP_TIME" svd="0"/>
                      </radiobutton>
                    </radio>
                    <math label="Compare Value" unit="ticks" define="TIMER3.MODE1_CMP[15:0]" svd="0" formula="TIMER3.MODE1_VALUE[15:0]+TIMER3.MODE1_CMP_TICK+(TIMER3.CLK*TIMER3.MODE1_CMP_TIME)"/>
                  </branch>
                </checkbox>
                <branch label="Timer Value">
                  <radio define="TIMER3.MODE1_VALUE_SEL" svd="0">
                    <radiobutton label="...as timer ticks" uielement="branch">
                      <spinbox label="Value" suffix=" ticks" define="TIMER3.MODE1_VALUE_TICK" svd="0" default="1"/>
                    </radiobutton>
                    <radiobutton label="...as time [us]" uielement="branch">
                      <doublespinbox label="Time" suffix=" us" define="TIMER3.MODE1_VALUE_TIME" svd="0" default="1.00"/>
                    </radiobutton>
                  </radio>
                  <math label="Timer3 Value" unit="ticks" define="TIMER3.MODE1_VALUE[15:0]" svd="0" formula="TIMER3.MODE_CONF.T3_SUBM[0]&gt;0?(TIMER3.MODE1_VALUE_SEL&gt;0?(TIMER3.CLK*TIMER3.MODE1_VALUE_TIME):TIMER3.MODE1_VALUE_TICK):(0x10000-(TIMER3.MODE1_VALUE_SEL&gt;0?(TIMER3.CLK*TIMER3.MODE1_VALUE_TIME):TIMER3.MODE1_VALUE_TICK))"/>
                </branch>
              </radiobutton>
              <radiobutton label="Mode 2: 8-bit timer auto reload" lockon="TIMER3.MODE_CONF.T3_SUBM[1]=0;TIMER3.MODE_CONF.T3_SUBM[0]=0" uielement="branch">
                <branch label="Timer Value 8-bit">
                  <radio define="TIMER3.MODE2_VALUE_SEL" svd="0">
                    <radiobutton label="...as timer ticks" lockon="TIMER3.MODE2_VALUE_TIME=0" uielement="branch">
                      <spinbox label="Value" suffix=" ticks" define="TIMER3.MODE2_VALUE_TICK[7:0]" svd="0" default="1"/>
                    </radiobutton>
                    <radiobutton label="...as time [us]" lockon="TIMER3.MODE2_VALUE_TICK[7:0]=0" uielement="branch">
                      <doublespinbox label="Time" suffix=" us" define="TIMER3.MODE2_VALUE_TIME" svd="0" default="1.00"/>
                    </radiobutton>
                  </radio>
                  <math label="Timer3 Value" unit="ticks" define="TIMER3.MODE2_VALUE[7:0]" svd="0" formula="((TIMER3.MODE2_VALUE_TICK[7:0]+(TIMER3.CLK*TIMER3.MODE2_VALUE_TIME)).^0xFF)+1"/>
                </branch>
                <branch label="Compare Value">
                  <radio define="TIMER3.MODE2_CMP_SEL" svd="0">
                    <radiobutton label="...as timer ticks" lockon="TIMER3.MODE2_CMP_TIME=0" uielement="branch">
                      <spinbox label="Compare Value" suffix=" ticks" define="TIMER3.MODE2_CMP_TICK[7:0]" svd="0"/>
                    </radiobutton>
                    <radiobutton label="...as time [us]" lockon="TIMER3.MODE2_CMP_TICK[7:0]=0" uielement="branch">
                      <doublespinbox label="Time" suffix=" us" define="TIMER3.MODE2_CMP_TIME" svd="0"/>
                    </radiobutton>
                  </radio>
                  <math label="Compare Value" unit="ticks" define="TIMER3.MODE2_CMP[7:0]" svd="0" formula="TIMER3.MODE2_VALUE[7:0]+TIMER3.MODE2_CMP_TICK[7:0]+(TIMER3.CLK*TIMER3.MODE2_CMP_TIME)"/>
                </branch>
                <branch label="Reload Value 8-bit">
                  <radio define="TIMER3.MODE2_RL_VALUE_SEL" svd="0">
                    <radiobutton label="...as timer ticks" lockon="TIMER3.MODE2_RL_VALUE_TIME=0" uielement="branch">
                      <spinbox label="Value" suffix=" ticks" define="TIMER3.MODE2_RL_VALUE_TICK[7:0]" svd="0" default="1"/>
                    </radiobutton>
                    <radiobutton label="...as time [us]" lockon="TIMER3.MODE2_RL_VALUE_TICK[7:0]=0" uielement="branch">
                      <doublespinbox label="Time" suffix=" us" define="TIMER3.MODE2_RL_VALUE_TIME" svd="0" default="1.00"/>
                    </radiobutton>
                  </radio>
                  <math label="Timer3 Value" unit="ticks" define="TIMER3.MODE2_RL_VALUE[7:0]" svd="0" formula="((TIMER3.MODE2_RL_VALUE_TICK[7:0]+(TIMER3.CLK*TIMER3.MODE2_RL_VALUE_TIME)).^0xFF)+1"/>
                </branch>
              </radiobutton>
              <radiobutton label="Mode 3: 2x 8-bit timer" lockon="TIMER3.MODE_CONF.T3_SUBM[0]=0" uielement="branch">
                <checkbox label="Mode 3b: 8-bit timers used for clock measurement" define="TIMER3.MODE_CONF.T3_SUBM[1]" uielement="branch" lockon="TIMER3.T3_TRIGG_CTRL.T3_RES_CONF=2;TIMER3.T3_TRIGG_CTRL.T3_TRIGG_INP_SEL.label=CCU6-T12 Period Match">
                  <spinbox label="Number of Clock Edges to be count" define="TIMER3.MODE3_CMP[7:0]" svd="0" default="1"/>
                </checkbox>
              </radiobutton>
            </radio>
          </branch>
          <branch label="Read Mode">
            <combo label="Read Mode Select" define="TIMER3.CTRL.T3_RD_REQ_CONF">
              <item label="Read request can be triggered by software" override="Software"/>
              <item label="Read request can be triggered by hardware" override="Hardware"/>
            </combo>
          </branch>
          <branch label="Interrupt">
            <checkbox label="High-byte timer overflow" define="TIMER3.HB_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_ADC2=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="TIMER3.CTRL.T3H_OVF_IE"/>
              <edit label="Call Back" define="TIMER3.HBOF_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
            <checkbox label="Low-byte timer overflow" define="TIMER3.LB_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_ADC2=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="TIMER3.CTRL.T3L_OVF_IE"/>
              <edit label="Call Back" define="TIMER3.LBOF_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
          </branch>
          <branch label="Register View">
            <math label="Timer3 Value" unit="ticks" define="TIMER3.T3[15:0]" svd="0" formula="TIMER3.MODE_CONF.T3M&lt;1?TIMER3.MODE0_VALUE[12:0]:(TIMER3.MODE_CONF.T3M&lt;2?TIMER3.MODE1_VALUE[15:0]:(TIMER3.MODE2_VALUE[7:0]+(TIMER3.MODE2_RL_VALUE[7:0]*256)))"/>
            <math label="Timer3 Cmp" unit="ticks" define="TIMER3.CMP[15:0]" formula="TIMER3.MODE_CONF.T3M&lt;1?0:(TIMER3.MODE_CONF.T3M&lt;2?TIMER3.MODE1_CMP[15:0]:(TIMER3.MODE_CONF.T3M&lt;3?TIMER3.MODE2_CMP[7:0]:TIMER3.MODE3_CMP[7:0]))"/>
          </branch>
        </checkbox>
      </header>
    </treecontainer>
    <treecontainer headerlabels="Structure;Settings;" label="UART" desc="Asynchronous Serial Communication" columnwidths="300;250">
      <header file="uart_defines.h">
        <checkbox label="Configure UART1" define="UART1.Configuration_En" svd="0" uielement="branch">
          <math label="UART1 Clock" unit="MHz" define="UART1.CLK" svd="0" formula="SCU.PLL_fPLL/(2^(SCU.BCON1.BRPRE))"/>
          <branch label="Clock">
            <combo label="Prescaler" define="SCU.BCON1.BRPRE" header="scu_defines.h" default="label=PCLK / 1">
              <item label="PCLK / 1" override="value1"/>
              <item label="PCLK / 2" override="value2"/>
              <item label="PCLK / 4" override="value3"/>
              <item label="PCLK / 8" override="value4"/>
              <item label="PCLK / 16" override="value5"/>
              <item label="PCLK / 32" override="value6"/>
            </combo>
          </branch>
          <branch label="BaudRate">
            <checkbox label="Baudrate Generator running" define="SCU.BCON1.R" default="1" header="scu_defines.h"/>
            <radio define="UART1.AUTO_BAUD_SEL" svd="0">
              <radiobutton label="Automatic BaudRate Configuration" uielement="branch">
                <combo label="BaudRate" define="UART1.AUTO_BAUDRATE" svd="0" default="label=19200">
                  <item label="9600" lockon="UART1.MAN_BAUDRATE=9600"/>
                  <item label="19200" lockon="UART1.MAN_BAUDRATE=19200"/>
                  <item label="38400" lockon="UART1.MAN_BAUDRATE=38400"/>
                  <item label="57600" lockon="UART1.MAN_BAUDRATE=57600"/>
                  <item label="115200" lockon="UART1.MAN_BAUDRATE=115200"/>
                </combo>
              </radiobutton>
              <radiobutton label="Manual BaudRate Configuration" uielement="branch">
                <spinbox label="BaudRate" suffix=" Baud" define="UART1.MAN_BAUDRATE" svd="0" range="0;2000000" default="19200"/>
              </radiobutton>
            </radio>
            <math label="BaudRate Value" define="UART1.BRVAL[11:0]" svd="0" formula="trunc((UART1.CLK*1000000)/(16*UART1.MAN_BAUDRATE))"/>
            <math label="Fractional Divider" define="UART1.FD[4:0]" svd="0" formula="trunc((((UART1.CLK*1000000)/(16*UART1.MAN_BAUDRATE))-UART1.BRVAL[11:0])*32)"/>
            <math label="Effective BaudRate" define="UART1.BAUDRATE" svd="0" formula="(UART1.CLK*1000000)/(16*(UART1.BRVAL[11:0]+(UART1.FD[4:0]/32)))"/>
          </branch>
          <branch label="Mode">
            <combo label="Mode Select" define="UART1.SCON.SM1_SM0" default="label=Mode 1: 8-bit UART, variable baudrate">
              <item label="Mode 0: 8-bit shift register, fix baudrate fPCLK/2" override="value1"/>
              <item label="Mode 1: 8-bit UART, variable baudrate" override="value2"/>
              <item label="Mode 2: 9-bit UART, fixed baud rate (fPCLK/64 or fPCLK/32)" override="value3"/>
              <item label="Mode 3: 9-bit UART, variable baud rate" override="value4"/>
            </combo>
            <checkbox label="don't set Receive Interrupt if no StopBit was received (SM2)" define="UART1.SCON.SM2"/>
            <checkbox label="Receiver enabled" define="UART1.SCON.REN"/>
            <checkbox label="STDIN/STDOUT enabled" define="UART1.STD_EN" svd="0"/>
          </branch>
          <branch label="Interrupt">
            <checkbox label="Receive" define="UART1.RX_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_UART1=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCU.MODIEN1.RIEN1" header="int_defines.h"/>
              <edit label="Call Back" define="UART1.RX_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
            <checkbox label="Transmit" define="UART1.TX_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_UART1=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCU.MODIEN1.TIEN1" header="int_defines.h"/>
              <edit label="Call Back" define="UART1.TX_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
          </branch>
          <checkbox label="Pin Select" define="UART1.PINSEL_EN" svd="0" uielement="branch">
            <combo label="TxD/RxD Pin Select" define="SCU.MODPISEL.URIOS1" default="label=UART1 connected to LIN Trx" header="scu_defines.h">
              <item override="value1" label="UART1 connected to LIN Trx" lockon="LIN.Configuration_En=1;LIN.CTRL_STS.MODE.label=Normal"/>
              <item override="value2" label="TxD1 (P0.1), RxD1 (P1.4)" lockon="LIN.Configuration_En=1;LIN.CTRL_STS.MODE.label=Sleep Mode;PORT.P1_DIR.P4.label=Input;PORT.P1_4_ALT[1:0].label=RxD1;PORT.P0_DIR.P1.label=Output;PORT.P0_1_ALT[1:0].label=TxD1"/>
            </combo>
            <math visible="false" define="SCU.MODPISEL.U_TX_CONDIS" header="scu_defines.h" formula="0"/>
          </checkbox>
        </checkbox>
        <checkbox label="Configure UART2" define="UART2.Configuration_En" svd="0" uielement="branch">
          <math label="UART2 Clock" unit="MHz" define="UART2.CLK" svd="0" formula="SCU.PLL_fPLL/(2^(SCU.BCON2.BRPRE))"/>
          <branch label="Clock">
            <combo label="Prescaler" define="SCU.BCON2.BRPRE" header="scu_defines.h" default="label=PCLK / 1">
              <item label="PCLK / 1" override="value1"/>
              <item label="PCLK / 2" override="value2"/>
              <item label="PCLK / 4" override="value3"/>
              <item label="PCLK / 8" override="value4"/>
              <item label="PCLK / 16" override="value5"/>
              <item label="PCLK / 32" override="value6"/>
            </combo>
          </branch>
          <branch label="BaudRate">
            <checkbox label="BaudRate Generator running" define="SCU.BCON2.R" default="1" header="scu_defines.h"/>
            <radio define="UART2.AUTO_BAUD_SEL" svd="0">
              <radiobutton label="Automatic BaudRate Configuration" uielement="branch">
                <combo label="BaudRate" define="UART2.AUTO_BAUDRATE" svd="0" default="label=19200">
                  <item label="9600" lockon="UART2.MAN_BAUDRATE=9600"/>
                  <item label="19200" lockon="UART2.MAN_BAUDRATE=19200"/>
                  <item label="38400" lockon="UART2.MAN_BAUDRATE=38400"/>
                  <item label="57600" lockon="UART2.MAN_BAUDRATE=57600"/>
                  <item label="115200" lockon="UART2.MAN_BAUDRATE=115200"/>
                </combo>
              </radiobutton>
              <radiobutton label="Manual BaudRate Configuration" uielement="branch">
                <spinbox label="BaudRate" suffix=" Baud" define="UART2.MAN_BAUDRATE" svd="0" range="0;2000000" default="19200"/>
              </radiobutton>
            </radio>
            <math label="BaudRate Value" define="UART2.BRVAL[11:0]" svd="0" formula="trunc((UART2.CLK*1000000)/(16*UART2.MAN_BAUDRATE))"/>
            <math label="Fractional Divider" define="UART2.FD[4:0]" svd="0" formula="trunc((((UART2.CLK*1000000)/(16*UART2.MAN_BAUDRATE))-UART2.BRVAL[11:0])*32)"/>
            <math label="Effective BaudRate" define="UART2.BAUDRATE" svd="0" formula="(UART2.CLK*1000000)/(16*(UART2.BRVAL[11:0]+(UART2.FD[4:0]/32)))"/>
          </branch>
          <branch label="Mode">
            <combo label="Mode Select" define="UART2.SCON.SM1_SM0" default="label=Mode 1: 8-bit UART, variable baudrate">
              <item label="Mode 0: 8-bit shift register, fix baudrate fPCLK/2" override="value1"/>
              <item label="Mode 1: 8-bit UART, variable baudrate" override="value2"/>
              <item label="Mode 2: 9-bit UART, fixed baud rate (fPCLK/64 or fPCLK/32)" override="value3"/>
              <item label="Mode 3: 9-bit UART, variable baud rate" override="value4"/>
            </combo>
            <checkbox label="don't set Receive Interrupt if no StopBit was received (SM2)" define="UART2.SCON.SM2"/>
            <checkbox label="Receiver enabled" define="UART2.SCON.REN"/>
            <checkbox label="STDIN/STDOUT enabled" define="UART2.STD_EN" svd="0"/>
          </branch>
          <branch label="Interrupt">
            <checkbox label="Receive" define="UART2.RX_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_UART2=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCU.MODIEN2.RIEN2" header="int_defines.h"/>
              <edit label="Call Back" define="UART2.RX_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
            <checkbox label="Transmit" define="UART2.TX_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_UART2=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCU.MODIEN2.TIEN2" header="int_defines.h"/>
              <edit label="Call Back" define="UART2.TX_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
          </branch>
          <checkbox label="Pin Select" define="UART2.PINSEL_EN" svd="0" uielement="branch">
            <combo label="TxD/RxD Pin Select" define="UART2.PINSEL" svd="0" default="label=TxD2 (P1.1), RxD2 (P1.2)">
              <item label="TxD2 (P1.1), RxD2 (P1.2)" lockon="PORT.P1_DIR.P1.label=Output;PORT.P1_1_ALT[1:0].label=TXD2_0;PORT.P1_DIR.P2.label=Input"/>
              <item label="TxD2 (P1.3), RxD2 (P2.5)" lockon="PORT.P1_DIR.P3.label=Output;PORT.P1_3_ALT[1:0].label=TXD2_1;PORT.P2_DIR.P5.label=Input"/>
            </combo>
            <math visible="true" define="SCU.MODPISEL3.URIOS2" header="scu_defines.h" formula="UART2.PINSEL"/>
          </checkbox>
        </checkbox>
      </header>
    </treecontainer>
    <treecontainer headerlabels="Structure;Settings;" label="SSC" desc="High-Speed Synchronous Serial Interface" columnwidths="300;250">
      <header file="ssc_defines.h">
        <checkbox label="Configure SSC1" define="SSC1.CON.EN" uielement="branch">
          <math label="SSC1 Clock" unit="MHz" define="SSC1.TEMP_CLK" svd="0" formula="SCU.PLL_fPLL"/>
          <math label="Max. BaudRate" unit="kBaud" formula="1000*SCU.PLL_fPLL/2"/>
          <branch label="Mode Select">
            <combo label="Master Select" define="SSC1.CON.MS">
              <item label="Slave Mode" override="value1" lockon="SSC1.TEMP_BRG=0;SSC1.TEMP_MS=0"/>
              <item label="Master Mode" override="value2" lockon="SSC1.TEMP_BRG=1;SSC1.TEMP_MS=1"/>
            </combo>
            <combo label="Data Width Selection" define="SSC1.CON.BC" default="label=2 bits">
              <item label="2 bits" value="1"/>
              <item label="3 bits" value="2"/>
              <item label="4 bits" value="3"/>
              <item label="5 bits" value="4"/>
              <item label="6 bits" value="5"/>
              <item label="7 bits" value="6"/>
              <item label="8 bits" value="7"/>
              <item label="9 bits" value="8"/>
              <item label="10 bits" value="9"/>
              <item label="11 bits" value="10"/>
              <item label="12 bits" value="11"/>
              <item label="13 bits" value="12"/>
              <item label="14 bits" value="13"/>
              <item label="15 bits" value="14"/>
              <item label="16 bits" value="15"/>
            </combo>
            <combo label="Heading Control" define="SSC1.CON[4]">
              <item label="Transmit/Receive LSB First"/>
              <item label="Transmit/Receive MSB First"/>
            </combo>
            <combo label="Clock Phase Control" define="SSC1.CON[5]">
              <item label="Shift transmit data on the leading clock edge, latch on trailing edge"/>
              <item label="Latch receive data on leading clock edge, shift on trailing edge"/>
            </combo>
            <combo label="Clock Polarity Control" define="SSC1.CON[6]">
              <item label="Idle clock line is low, leading clock edge is low-to-high transition"/>
              <item label="Idle clock line is high, leading clock edge is high-to-low transition"/>
            </combo>
            <combo label="Loop Back Control" define="SSC1.CON[7]">
              <item label="Normal output"/>
              <item label="Receive input is connected with transmit output (half-duplex mode)"/>
            </combo>
          </branch>
          <checkbox label="BaudRate Generation" define="SSC1.TEMP_BRG" svd="0" uielement="branch">
            <radio define="SSC1.AUTO_BAUD_SEL" svd="0">
              <radiobutton label="Automatic BaudRate Configuration" uielement="branch">
                <combo label="BaudRate" define="SSC1.AUTO_BAUDRATE" svd="0" default="label=1 MBaud">
                  <item label="10 kBaud" lockon="SSC1.MAN_BAUDRATE=10"/>
                  <item label="100 kBaud" lockon="SSC1.MAN_BAUDRATE=100"/>
                  <item label="500 kBaud" lockon="SSC1.MAN_BAUDRATE=500"/>
                  <item label="1 MBaud" lockon="SSC1.MAN_BAUDRATE=1000"/>
                  <item label="5 MBaud" lockon="SSC1.MAN_BAUDRATE=5000"/>
                  <item label="10 MBaud" lockon="SSC1.MAN_BAUDRATE=10000"/>
                  <item label="20 MBaud" lockon="SSC1.MAN_BAUDRATE=20000"/>
                </combo>
              </radiobutton>
              <radiobutton label="Manual BaudRate Configuration" uielement="branch">
                <spinbox label="BaudRate" suffix=" kBaud" define="SSC1.MAN_BAUDRATE" svd="0" default="1000">
                  <action cond="SSC1.MAN_BAUDRATE!=20000" event="changed" cmd="setDef" data="SCU.P0_POCON1.PDM2=4;SCU.P0_POCON1.PDM3=4;SCU.P0_POCON2.PDM4=4"/>
                  <action cond="SSC1.MAN_BAUDRATE==20000" event="changed" cmd="setDef" data="SCU.P0_POCON1.PDM2=0;SCU.P0_POCON1.PDM3=0"/>
                </spinbox>
              </radiobutton>
            </radio>
            <math label="Reload Value" define="SSC1.BR.BR_VALUE" formula="trunc((SSC1.TEMP_CLK/(2000*SSC1.MAN_BAUDRATE)*1000000)-0.5)"/>
            <math label="Effective BaudRate" unit="kBaud" define="SSC1.TEMP_BR" svd="0" formula="1000*SCU.PLL_fPLL/(2*(SSC1.BR.BR_VALUE+1))"/>
          </checkbox>
          <branch label="Error Enable">
            <checkbox label="Transmit Error Enable" define="SSC1.CON.TE"/>
            <checkbox label="Receive Error Enable" define="SSC1.CON.RE"/>
            <checkbox label="Phase Error Enable" define="SSC1.CON.PE"/>
            <checkbox label="BaudRate Error Enable" define="SSC1.CON.BE" uielement="branch">
              <combo label="Automatic Reset Enable" define="SSC1.CON.BSY">
                <item label="No additional action upon a baud rate error"/>
                <item label="The SSC is automatically reset upon a baud rate error"/>
              </combo>
            </checkbox>
          </branch>
          <branch label="Interrupt">
            <checkbox label="Receive" define="SSC1.RX_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_SSC1=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCU.MODIEN1.RIREN1" header="int_defines.h"/>
              <edit label="Call Back" define="SSC1.RX_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
            <checkbox label="Transmit" define="SSC1.TX_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_SSC1=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCU.MODIEN1.TIREN1" header="int_defines.h"/>
              <edit label="Call Back" define="SSC1.TX_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
            <checkbox label="Error" define="SSC1.ERR_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_SSC1=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCU.MODIEN1.EIREN1" header="int_defines.h"/>
              <edit label="Call Back" define="SSC1.ERR_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
          </branch>
          <branch label="Pin Select">
            <radio define="SSC1.TEMP_MS" svd="0">
              <radiobutton label="Slave Mode" uielement="branch">
                <combo label="Transmitter Output Select" define="SSC1.TEMP_SOS" svd="0" default="label=none">
                  <item label="none">
                    <action event="selected" cmd="setDef" data="SCU.P0_POCON2.PDM4=4"/>
                  </item>
                  <item label="P0.4 (MRST_1_0)" lockon="PORT.P0_DIR.P4.label=Output;PORT.P0_4_ALT[1:0].label=MRST_1_0">
                    <action cond="SSC1.MAN_BAUDRATE!=20000" event="selected" cmd="setDef" data="SCU.P0_POCON2.PDM4=4"/>
                    <action cond="SSC1.MAN_BAUDRATE==20000" event="selected" cmd="runScript" data="MessageBox(Impossible to have 20MBaud as there is no strong driver on P0.4!)"/>
                  </item>
                </combo>
                <combo label="Receiver Input Select" define="SSC1.TEMP_SIS" svd="0" default="label=none">
                  <item label="none" value="2"/>
                  <item label="P0.2 (MTSR_1)" lockon="PORT.P0_DIR.P2.label=Input" value="0"/>
                </combo>
                <combo label="Clock Input Select" define="SSC1.TEMP_CIS" svd="0" default="label=none">
                  <item label="none" value="2"/>
                  <item label="P0.3 (SCLK_1)" lockon="PORT.P0_DIR.P3.label=Input" value="0"/>
                </combo>
              </radiobutton>
              <radiobutton label="Master Mode" uielement="branch">
                <combo label="Transmitter Output Select" define="SSC1.TEMP_MOS" svd="0" default="label=none">
                  <item label="none">
                    <action event="selected" cmd="setDef" data="SCU.P0_POCON1.PDM2=4"/>
                  </item>
                  <item label="P0.2 (MTSR_1)" lockon="PORT.P0_DIR.P2.label=Output;PORT.P0_2_ALT[1:0].label=MTSR_1">
                    <action cond="SSC1.MAN_BAUDRATE!=20000" event="selected" cmd="setDef" data="SCU.P0_POCON1.PDM2=4"/>
                    <action cond="SSC1.MAN_BAUDRATE==20000" event="selected" cmd="setDef" data="SCU.P0_POCON1.PDM2=0"/>
                  </item>
                </combo>
                <combo label="Receiver Input Select" define="SSC1.TEMP_MIS" svd="0" default="label=none">
                  <item label="none" value="4"/>
                  <item label="P0.4 (MRST_1_0)" lockon="PORT.P0_DIR.P4.label=Input" value="0"/>
                  <item label="P2.4 (MRST_1_1)" lockon="PORT.P2_DIR.P4.label=Input" value="1"/>
                  <item label="P0.1 (MRST_1_2)" lockon="PORT.P0_DIR.P1.label=Input" value="2"/>
                  <item label="P1.4 (MRST_1_3)" lockon="PORT.P1_DIR.P4.label=Input" value="3"/>
                </combo>
                <combo label="Clock Output Select" define="SSC1.TEMP_COS" svd="0" default="label=none">
                  <item label="none">
                    <action event="selected" cmd="setDef" data="SCU.P0_POCON1.PDM3=4"/>
                  </item>
                  <item label="P0.3 (SCK_1)" lockon="PORT.P0_DIR.P3.label=Output;PORT.P0_3_ALT[1:0].label=SCK_1">
                    <action cond="SSC1.MAN_BAUDRATE!=20000" event="selected" cmd="setDef" data="SCU.P0_POCON1.PDM3=4"/>
                    <action cond="SSC1.MAN_BAUDRATE==20000" event="selected" cmd="setDef" data="SCU.P0_POCON1.PDM3=0"/>
                  </item>
                </combo>
              </radiobutton>
            </radio>
            <math visible="false" define="SSC1.PISEL" formula="(SSC1.TEMP_MIS.value.*0x2)*4+(SSC1.TEMP_CIS.value.*0x1)*4+(SSC1.TEMP_SIS.value.*0x1)*2+(SSC1.TEMP_MIS.value.*0x1)"/>
          </branch>
        </checkbox>
        <checkbox label="Configure SSC2" define="SSC2.CON.EN" uielement="branch">
          <math label="SSC2 Clock" unit="MHz" define="SSC2.TEMP_CLK" svd="0" formula="SCU.PLL_fPLL"/>
          <math label="Max. Baud Rate" unit="kBaud" formula="1000*SCU.PLL_fPLL/2"/>
          <branch label="Mode Select">
            <combo label="Master Select" define="SSC2.CON.MS">
              <item label="Slave Mode" override="value1" lockon="SSC2.TEMP_BRG=0;SSC2.TEMP_MS=0"/>
              <item label="Master Mode" override="value2" lockon="SSC2.TEMP_BRG=1;SSC2.TEMP_MS=1"/>
            </combo>
            <combo label="Data Width Selection" define="SSC2.CON.BC" default="label=2 bits">
              <item label="2 bits" value="1"/>
              <item label="3 bits" value="2"/>
              <item label="4 bits" value="3"/>
              <item label="5 bits" value="4"/>
              <item label="6 bits" value="5"/>
              <item label="7 bits" value="6"/>
              <item label="8 bits" value="7"/>
              <item label="9 bits" value="8"/>
              <item label="10 bits" value="9"/>
              <item label="11 bits" value="10"/>
              <item label="12 bits" value="11"/>
              <item label="13 bits" value="12"/>
              <item label="14 bits" value="13"/>
              <item label="15 bits" value="14"/>
              <item label="16 bits" value="15"/>
            </combo>
            <combo label="Heading Control" define="SSC2.CON[4]">
              <item label="Transmit/Receive LSB First"/>
              <item label="Transmit/Receive MSB First"/>
            </combo>
            <combo label="Clock Phase Control" define="SSC2.CON[5]">
              <item label="Shift transmit data on the leading clock edge, latch on trailing edge"/>
              <item label="Latch receive data on leading clock edge, shift on trailing edge"/>
            </combo>
            <combo label="Clock Polarity Control" define="SSC2.CON[6]">
              <item label="Idle clock line is low, leading clock edge is low-to-high transition"/>
              <item label="Idle clock line is high, leading clock edge is high-to-low transition"/>
            </combo>
            <combo label="Loop Back Control" define="SSC2.CON[7]">
              <item label="Normal output"/>
              <item label="Receive input is connected with transmit output (half-duplex mode)"/>
            </combo>
          </branch>
          <checkbox label="BaudRate Generation" define="SSC2.TEMP_BRG" svd="0" uielement="branch">
            <radio define="SSC2.AUTO_BAUD_SEL" svd="0">
              <radiobutton label="Automatic BaudRate Configuration" uielement="branch">
                <combo label="BaudRate" define="SSC2.AUTO_BAUDRATE" svd="0" default="label=1 MBaud">
                  <item label="10 kBaud" lockon="SSC2.MAN_BAUDRATE=10"/>
                  <item label="100 kBaud" lockon="SSC2.MAN_BAUDRATE=100"/>
                  <item label="500 kBaud" lockon="SSC2.MAN_BAUDRATE=500"/>
                  <item label="1 MBaud" lockon="SSC2.MAN_BAUDRATE=1000"/>
                  <item label="5 MBaud" lockon="SSC2.MAN_BAUDRATE=5000"/>
                  <item label="10 MBaud" lockon="SSC2.MAN_BAUDRATE=10000"/>
                  <item label="20 MBaud" lockon="SSC2.MAN_BAUDRATE=20000"/>
                </combo>
              </radiobutton>
              <radiobutton label="Manual BaudRate Configuration" uielement="branch">
                <spinbox label="BaudRate" suffix=" kBaud" define="SSC2.MAN_BAUDRATE" svd="0" default="1000">
                  <action cond="SSC2.MAN_BAUDRATE!=20000" event="changed" cmd="setDef" data="SCU.P1_POCON0.PDM0=4;SCU.P1_POCON0.PDM1=4;SCU.P1_POCON1.PDM2=4"/>
                </spinbox>
              </radiobutton>
            </radio>
            <math label="Reload Value" define="SSC2.BR.BR_VALUE" formula="trunc((SSC2.TEMP_CLK/(2000*SSC2.MAN_BAUDRATE)*1000000)-0.5)"/>
            <math label="Effective BaudRate" unit="kBaud" define="SSC2.TEMP_BR" svd="0" formula="1000*SCU.PLL_fPLL/(2*(SSC2.BR.BR_VALUE+1))"/>
          </checkbox>
          <branch label="Error Enable">
            <checkbox label="Transmit Error Enable" define="SSC2.CON.TE"/>
            <checkbox label="Receive Error Enable" define="SSC2.CON.RE"/>
            <checkbox label="Phase Error Enable" define="SSC2.CON.PE"/>
            <checkbox label="BaudRate Error Enable" define="SSC2.CON.BE" uielement="branch">
              <combo label="Automatic Reset Enable" define="SSC2.CON.BSY">
                <item label="No additional action upon a baud rate error"/>
                <item label="The SSC is automatically reset upon a baud rate error"/>
              </combo>
            </checkbox>
          </branch>
          <branch label="Interrupt">
            <checkbox label="Receive" define="SSC2.RX_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_SSC2=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCU.MODIEN2.RIREN2" header="int_defines.h"/>
              <edit label="Call Back" define="SSC2.RX_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
            <checkbox label="Transmit" define="SSC2.TX_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_SSC2=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCU.MODIEN2.TIREN2" header="int_defines.h"/>
              <edit label="Call Back" define="SSC2.TX_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
            <checkbox label="Error" define="SSC2.ERR_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_SSC2=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCU.MODIEN2.EIREN2" header="int_defines.h"/>
              <edit label="Call Back" define="SSC2.ERR_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
          </branch>
          <branch label="Pin Select">
            <radio define="SSC2.TEMP_MS" svd="0">
              <radiobutton label="Slave Mode" uielement="branch">
                <combo label="Transmitter Output Select" define="SSC2.TEMP_SOS" svd="0" default="label=none">
                  <item label="none">
                    <action event="selected" cmd="setDef" data="SCU.P1_POCON1.PDM2=4"/>
                  </item>
                  <item label="P1.2 (MRST_2_0)" lockon="PORT.P1_DIR.P2.label=Output;PORT.P1_2_ALT[1:0].label=MRST_2_0">
                    <action cond="SSC2.MAN_BAUDRATE!=20000" event="selected" cmd="setDef" data="SCU.P1_POCON1.PDM2=4"/>
                    <action cond="SSC2.MAN_BAUDRATE==20000" event="selected" cmd="runScript" data="MessageBox(Impossible to have 20MBaud as there is no strong driver on P1.2!)"/>
                  </item>
                </combo>
                <combo label="Receiver Input Select" define="SSC2.TEMP_SIS" svd="0" default="label=none">
                  <item label="none" value="2"/>
                  <item label="P1.1 (MTSR_2)" lockon="PORT.P1_DIR.P1.label=Input" value="0"/>
                </combo>
                <combo label="Clock Input Select" define="SSC2.TEMP_CIS" svd="0" default="label=none">
                  <item label="none" value="2"/>
                  <item label="P1.0 (SCLK_2)" lockon="PORT.P1_DIR.P0.label=Input" value="0"/>
                </combo>
              </radiobutton>
              <radiobutton label="Master Mode" uielement="branch">
                <combo label="Transmitter Output Select" define="SSC2.TEMP_MOS" svd="0" default="label=none">
                  <item label="none">
                    <action event="selected" cmd="setDef" data="SCU.P1_POCON0.PDM1=4"/>
                  </item>
                  <item label="P1.1 (MTSR_2)" lockon="PORT.P1_DIR.P1.label=Output;PORT.P1_1_ALT[1:0].label=MTSR_2">
                    <action cond="SSC2.MAN_BAUDRATE!=20000" event="selected" cmd="setDef" data="SCU.P1_POCON0.PDM1=4"/>
                    <action cond="SSC2.MAN_BAUDRATE==20000" event="selected" cmd="runScript" data="MessageBox(Impossible to have 20MBaud as there is no strong driver on P1.1!)"/>
                  </item>
                </combo>
                <combo label="Receiver Input Select" define="SSC2.TEMP_MIS" svd="0" default="label=none">
                  <item label="none" value="4"/>
                  <item label="P1.2 (MRST_2_0)" lockon="PORT.P1_DIR.P2.label=Input" value="0"/>
                  <item label="P2.5 (MRST_2_1)" value="1"/>
                </combo>
                <combo label="Clock Output Select" define="SSC2.TEMP_COS" svd="0" default="label=none">
                  <item label="none">
                    <action event="selected" cmd="setDef" data="SCU.P1_POCON0.PDM0=4"/>
                  </item>
                  <item label="P1.0 (SCK_2)" lockon="PORT.P1_DIR.P0.label=Output;PORT.P1_0_ALT[1:0].label=SCK_2">
                    <action cond="SSC2.MAN_BAUDRATE!=20000" event="selected" cmd="setDef" data="SCU.P1_POCON0.PDM0=4"/>
                    <action cond="SSC2.MAN_BAUDRATE==20000" event="selected" cmd="runScript" data="MessageBox(Impossible to have 20MBaud as there is no strong driver on P1.0!)"/>
                  </item>
                </combo>
              </radiobutton>
            </radio>
            <math visible="true" define="SSC2.PISEL" formula="(SSC2.TEMP_MIS.value.*0x2)*4+(SSC2.TEMP_CIS.value.*0x1)*4+(SSC2.TEMP_SIS.value.*0x1)*2+(SSC2.TEMP_MIS.value.*0x1)"/>
          </branch>
        </checkbox>
      </header>
    </treecontainer>
    <treecontainer headerlabels="Structure;Settings;" label="LIN" desc="Local Interconnect Network Transceiver" columnwidths="300;250">
      <header file="lin_defines.h">
        <checkbox label="Configure LIN" define="LIN.Configuration_En" svd="0" uielement="branch">
          <combo label="Transceiver Mode" define="LIN.CTRL_STS.MODE" default="label=Normal">
            <item label="Sleep Mode" override="LIN_Sleep_Mode"/>
            <item label="Receive-Only" override="LIN_Receive_Only_Mode"/>
            <item label="Normal" override="LIN_Normal_Mode"/>
          </combo>
          <combo label="Slope Mode" define="LIN.CTRL_STS.SM" default="label=Normal - 20kBaud">
            <item label="Low    - 10.4kBaud" override="Low_Slope_Mode"/>
            <item label="Normal - 20kBaud" override="Normal_Slope_Mode"/>
            <item label="Fast   - 40kBaud" override="Fast_Slope_Mode"/>
            <item label="Flash  - 150kBaud" override="Flash_Mode"/>
          </combo>
          <checkbox label="High Voltage I/O Mode enable" define="LIN.CTRL_STS.HV_MODE"/>
          <branch label="Diagnostic Interrupt">
            <checkbox label="Over Current" define="LIN.OC_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_UART1=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCUPM.SYS_IRQ_CTRL.LIN_OC_IE" header="int_defines.h"/>
              <edit label="Call Back" define="LIN.OC_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
            <checkbox label="Over Temperature" define="LIN.OT_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_UART1=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCUPM.SYS_IRQ_CTRL.LIN_OT_IE" header="int_defines.h"/>
              <edit label="Call Back" define="LIN.OT_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
            <checkbox label="TxD Timeout" define="LIN.TMOUT_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_UART1=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCUPM.SYS_IRQ_CTRL.LIN_TMOUT_IE" header="int_defines.h"/>
              <edit label="Call Back" define="LIN.TMOUT_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
          </branch>
          <branch label="LIN Synch Detection">
            <spinbox label="Master Baudrate" suffix=" Baud" define="LIN.MASTER_BAUDRATE" svd="0" default="19200"/>
            <math visible="true" define="SCU.LINST.BGSEL" formula="SCU.FSYS/LIN.MASTER_BAUDRATE&gt;576?3:SCU.FSYS/LIN.MASTER_BAUDRATE&gt;288?2:SCU.FSYS/LIN.MASTER_BAUDRATE&gt;144?1:0"/>
            <checkbox label="Baudrate detection (Timer2)" define="LIN.AUTOBAUD_EN" svd="0" lockon="TIMER2.Configuration_En=1;TIMER2.T2CON.C_T2=0;TIMER2.T2CON.CP_RL2=1;TIMER2.T2CON.EXEN2=1;TIMER2.T2MOD.EDGESEL=0;TIMER2.T2MOD.T2RHEN=1;TIMER2.T2MOD.T2REGS=0;TIMER2.T2MOD.PREN=1;TIMER2.T2MOD.T2PRE.label=divide by 1;SCU.MODPISEL1.T2EXCON=0;SCU.MODPISEL2.T2EXIS=0"/>
            <branch label="Interrupt">
              <checkbox label="End-of-Synch" define="LIN.EOF_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_UART1=1" uielement="branch">
                <checkbox label="Enable Interrupt" define="LIN.SYNC[0]" svd="0"/>
                <edit label="Call Back" define="LIN.EOF_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
              </checkbox>
              <checkbox label="Error-in-Synch" define="LIN.ERR_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_UART1=1" uielement="branch">
                <checkbox label="Enable Interrupt" define="LIN.SYNC[1]" svd="0"/>
                <edit label="Call Back" define="LIN.ERR_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
              </checkbox>
              <math visible="false" define="SCU.LINST.SYNEN" formula="LIN.SYNC[0].+LIN.SYNC[1]"/>
            </branch>
          </branch>
        </checkbox>
      </header>
    </treecontainer>
    <treecontainer headerlabels="Structure;Settings;" label="CSA" desc="Current Sense Amplifier" columnwidths="300;250">
      <header file="csa_defines.h">
        <checkbox label="CSA enable" define="MF.CSA_CTRL.EN" uielement="branch">
          <combo label="Gain" define="MF.CSA_CTRL.GAIN" default="label=40">
            <item label="10" override="value_0"/>
            <item label="20" override="value_1"/>
            <item label="40" override="value_2"/>
            <item label="60" override="value_3"/>
          </combo>
        </checkbox>
        <math visible="false" define="MF.P2_ADCSEL_CTRL.ADC1_CH1_SEL" formula="MF.CSA_CTRL.EN" header="adc1_defines.h"/>
      </header>
    </treecontainer>
    <treecontainer headerlabels="Structure;Settings;" label="DMA" desc="Direct Memory Access Unit" columnwidths="300;250">
      <header file="dma_defines.h">
        <checkbox label="DMA enable" define="DMA.CFG.MASTER_ENABLE" uielement="branch">
          <checkbox label="Ch0 - ADC1 Sequence" define="DMA.EN[0]" svd="0" uielement="branch">
            <radio label="DMA Transfer Mode" define="DMA.CH0_TRANS_MODE" svd="0">
              <radiobutton label="Basic Mode" uielement="branch">
                <branch label="Source">
                  <radio define="DMA.CH0_SRC_SEL" svd="0">
                    <radiobutton label="ADC1 Result Registers" lockon="DMA.CH0_INC[0]=0;DMA.CH0_SRC_EXT=0" uielement="branch">
                      <combo label="ADC1 Result Register Select" define="DMA.CH0_SRC_ADC1" svd="0">
                        <item label="ADC1 Channel 0 (P2.0)" lockon="DMA.CH0_SRC=ADC1-&gt;RES_OUT0.reg"/>
                        <item label="ADC1 Channel 1 (P2.1/OpAmp)" lockon="DMA.CH0_SRC=ADC1-&gt;RES_OUT1.reg"/>
                        <item label="ADC1 Channel 2 (P2.2)" lockon="DMA.CH0_SRC=ADC1-&gt;RES_OUT2.reg"/>
                        <item label="ADC1 Channel 3 (P2.3)" lockon="DMA.CH0_SRC=ADC1-&gt;RES_OUT3.reg"/>
                        <item label="ADC1 Channel 4 (P2.4)" lockon="DMA.CH0_SRC=ADC1-&gt;RES_OUT4.reg"/>
                        <item label="ADC1 Channel 5 (P2.5)" lockon="DMA.CH0_SRC=ADC1-&gt;RES_OUT5.reg"/>
                        <item label="ADC1 Channel 6 (VDH)" lockon="DMA.CH0_SRC=ADC1-&gt;RES_OUT6.reg"/>
                        <item label="ADC1 Channel 7 (P2.7)" lockon="DMA.CH0_SRC=ADC1-&gt;RES_OUT7.reg"/>
                      </combo>
                    </radiobutton>
                    <radiobutton label="user defined source" uielement="branch">
                      <edit label="enter source reference" define="DMA.CH0_SRC" svd="0" default="ADC1-&gt;RES_OUT_EIM.reg"/>
                      <checkbox label="declare as 'extern' in C-code" define="DMA.CH0_SRC_EXT" svd="0"/>
                      <checkbox label="Increment" define="DMA.CH0_INC[0]" svd="0"/>
                    </radiobutton>
                  </radio>
                </branch>
                <branch label="Destination">
                  <edit label="enter destination reference" define="DMA.CH0_DST" svd="0" default="enter destination location"/>
                  <checkbox label="declare as 'extern' in C-code" define="DMA.CH0_DST_EXT" svd="0"/>
                  <checkbox label="Increment" define="DMA.CH0_INC[1]" svd="0"/>
                </branch>
                <spinbox label="Number of Transfers" define="DMA.CH0_NoOfTrans" svd="0" range="1;1024"/>
                <combo label="Transfere Size" define="DMA.CH0_SIZE" svd="0" default="label=Word (16-bit)">
                  <item label="Byte (8-bit)"/>
                  <item label="Word (16-bit)"/>
                  <item label="DWord (32-bit)"/>
                </combo>
                <math visible="false" define="DMA.CH0_SRC_PTR_OFFS" svd="0" formula="DMA.CH0_INC[0]&lt;1?0:(2^DMA.CH0_SIZE)*(DMA.CH0_NoOfTrans-1)"/>
                <math visible="false" define="DMA.CH0_DST_PTR_OFFS" svd="0" formula="DMA.CH0_INC[1]&lt;1?0:(2^DMA.CH0_SIZE)*(DMA.CH0_NoOfTrans-1)"/>
              </radiobutton>
              <radiobutton label="Scatter-Gather Mode" uielement="branch">
                <edit label="Enter Task List reference" define="DMA.CH0_TASK_SRC" svd="0" default="enter source reference"/>
                <spinbox label="Enter Number of Tasks" define="DMA.CH0_TASK_NoOfTasks" svd="0" range="0;256"/>
              </radiobutton>
            </radio>
            <checkbox label="Interrupt on DMA complete" define="DMA.SQ1_RDY_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_DMA=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCU.DMAIEN2.TRSEQ1RDYIE" header="int_defines.h"/>
              <edit label="Call Back" define="DMA.SQ1_RDY_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
          </checkbox>
          <checkbox label="Ch1 - ADC1 ESM Sequence" define="DMA.EN[1]" svd="0" uielement="branch">
            <radio label="DMA Transfer Mode" define="DMA.CH1_TRANS_MODE" svd="0">
              <radiobutton label="Basic Mode" uielement="branch">
                <branch label="Source">
                  <radio define="DMA.CH1_SRC_SEL" svd="0">
                    <radiobutton label="ADC1 Result Registers" lockon="DMA.CH1_INC[0]=0;DMA.CH1_SRC_EXT=0" uielement="branch">
                      <combo label="ADC1 Result Register Select" define="DMA.CH1_SRC_ADC1" svd="0">
                        <item label="ADC1 Channel 0 (P2.0)" lockon="DMA.CH1_SRC=ADC1-&gt;RES_OUT0.reg"/>
                        <item label="ADC1 Channel 1 (P2.1/OpAmp)" lockon="DMA.CH1_SRC=ADC1-&gt;RES_OUT1.reg"/>
                        <item label="ADC1 Channel 2 (P2.2)" lockon="DMA.CH1_SRC=ADC1-&gt;RES_OUT2.reg"/>
                        <item label="ADC1 Channel 3 (P2.3)" lockon="DMA.CH1_SRC=ADC1-&gt;RES_OUT3.reg"/>
                        <item label="ADC1 Channel 4 (P2.4)" lockon="DMA.CH1_SRC=ADC1-&gt;RES_OUT4.reg"/>
                        <item label="ADC1 Channel 5 (P2.5)" lockon="DMA.CH1_SRC=ADC1-&gt;RES_OUT5.reg"/>
                        <item label="ADC1 Channel 6 (VDH)" lockon="DMA.CH1_SRC=ADC1-&gt;RES_OUT6.reg"/>
                        <item label="ADC1 Channel 7 (P2.7)" lockon="DMA.CH1_SRC=ADC1-&gt;RES_OUT7.reg"/>
                      </combo>
                    </radiobutton>
                    <radiobutton label="user defined source" uielement="branch">
                      <edit label="enter source reference" define="DMA.CH1_SRC" svd="0" default="ADC1-&gt;RES_OUT0.reg"/>
                      <checkbox label="declare as 'extern' in C-code" define="DMA.CH1_SRC_EXT" svd="0"/>
                      <checkbox label="Increment" define="DMA.CH1_INC[0]" svd="0"/>
                    </radiobutton>
                  </radio>
                </branch>
                <branch label="Destination">
                  <edit label="enter destination reference" define="DMA.CH1_DST" svd="0" default="enter destination reference"/>
                  <checkbox label="declare as 'extern' in C-code" define="DMA.CH1_DST_EXT" svd="0"/>
                  <checkbox label="Increment" define="DMA.CH1_INC[1]" svd="0"/>
                </branch>
                <spinbox label="Number of Transfers" define="DMA.CH1_NoOfTrans" svd="0" range="1;1024"/>
                <combo label="Transfere Size" define="DMA.CH1_SIZE" svd="0" default="label=Word (16-bit)">
                  <item label="Byte (8-bit)"/>
                  <item label="Word (16-bit)"/>
                  <item label="DWord (32-bit)"/>
                </combo>
                <math visible="false" define="DMA.CH1_SRC_PTR_OFFS" svd="0" formula="DMA.CH1_INC[0]&lt;1?0:(2^DMA.CH1_SIZE)*(DMA.CH1_NoOfTrans-1)"/>
                <math visible="false" define="DMA.CH1_DST_PTR_OFFS" svd="0" formula="DMA.CH1_INC[1]&lt;1?0:(2^DMA.CH1_SIZE)*(DMA.CH1_NoOfTrans-1)"/>
              </radiobutton>
              <radiobutton label="Scatter-Gather Mode" uielement="branch">
                <edit label="Enter Task List reference" define="DMA.CH1_TASK_SRC" svd="0" default="enter source reference"/>
                <spinbox label="Enter Number of Tasks" define="DMA.CH1_TASK_NoOfTasks" svd="0" range="0;256"/>
              </radiobutton>
            </radio>
            <checkbox label="Interrupt on DMA complete" define="DMA.SQ2_RDY_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_DMA=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCU.DMAIEN2.TRSEQ2RDYIE" header="int_defines.h"/>
              <edit label="Call Back" define="DMA.SQ2_RDY_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
          </checkbox>
          <checkbox label="Ch2 - SSCx Transmit" define="DMA.EN[2]" svd="0" uielement="branch">
            <combo label="Trigger Select" define="SCU.DMASRCSEL.SSCTXSRCSEL" header="scu_defines.h">
              <item label="SSC1" override="value1"/>
              <item label="SSC2" override="value2"/>
            </combo>
            <radio label="DMA Transfer Mode" define="DMA.CH2_TRANS_MODE" svd="0">
              <radiobutton label="Basic Mode" uielement="branch">
                <branch label="Source">
                  <edit label="enter source reference" define="DMA.CH2_SRC" svd="0" default="enter source reference"/>
                  <checkbox label="declare as 'extern' in C-code" define="DMA.CH2_SRC_EXT" svd="0"/>
                  <checkbox label="Increment" define="DMA.CH2_INC[0]" svd="0"/>
                </branch>
                <branch label="Destination">
                  <radio define="DMA.CH2_DST_SEL" svd="0">
                    <radiobutton label="SSC1 Transmit Buffer" lockon="DMA.CH2_DST=SSC1-&gt;TB.reg;DMA.CH2_INC[1]=0;DMA.CH2_DST_EXT=0" value="0"/>
                    <radiobutton label="SSC2 Transmit Buffer" lockon="DMA.CH2_DST=SSC2-&gt;TB.reg;DMA.CH2_INC[1]=0;DMA.CH2_DST_EXT=0" value="2"/>
                    <radiobutton label="user defined source" uielement="branch" value="1">
                      <edit label="enter destination reference" define="DMA.CH2_DST" svd="0" default="SSC1-&gt;TB.reg"/>
                      <checkbox label="declare as 'extern' in C-code" define="DMA.CH2_DST_EXT" svd="0"/>
                      <checkbox label="Increment" define="DMA.CH2_INC[1]" svd="0"/>
                    </radiobutton>
                  </radio>
                </branch>
                <spinbox label="Number of Transfers" define="DMA.CH2_NoOfTrans" svd="0" range="1;1024"/>
                <combo label="Transfere Size" define="DMA.CH2_SIZE" svd="0" default="label=Word (16-bit)">
                  <item label="Byte (8-bit)"/>
                  <item label="Word (16-bit)"/>
                  <item label="DWord (32-bit)"/>
                </combo>
                <math visible="false" define="DMA.CH2_SRC_PTR_OFFS" svd="0" formula="DMA.CH2_INC[0]&lt;1?0:(2^DMA.CH2_SIZE)*(DMA.CH2_NoOfTrans-1)"/>
                <math visible="false" define="DMA.CH2_DST_PTR_OFFS" svd="0" formula="DMA.CH2_INC[1]&lt;1?0:(2^DMA.CH2_SIZE)*(DMA.CH2_NoOfTrans-1)"/>
              </radiobutton>
              <radiobutton label="Scatter-Gather Mode" uielement="branch">
                <edit label="Enter Task List reference" define="DMA.CH2_TASK_SRC" svd="0" default="enter source reference"/>
                <spinbox label="Enter Number of Tasks" define="DMA.CH2_TASK_NoOfTasks" svd="0" range="0;256"/>
              </radiobutton>
            </radio>
            <checkbox label="Interrupt on DMA complete" define="DMA.SSC_TX_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_DMA=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCU.DMAIEN2.SSCTXIE" header="int_defines.h"/>
              <edit label="Call Back" define="DMA.SSC_TX_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
          </checkbox>
          <checkbox label="Ch3 - SSCx Receive" define="DMA.EN[3]" svd="0" uielement="branch">
            <combo label="SSCx Select" define="SCU.DMASRCSEL.SSCRXSRCSEL" default="label=SSC1" header="scu_defines.h">
              <item label="SSC1" override="value1"/>
              <item label="SSC2" override="value2"/>
            </combo>
            <radio label="DMA Transfer Mode" define="DMA.CH3_TRANS_MODE" svd="0">
              <radiobutton label="Basic Mode" uielement="branch">
                <branch label="Source">
                  <radio define="DMA.CH3_SRC_SEL" svd="0">
                    <radiobutton label="SSC1 Receive Buffer" lockon="DMA.CH3_SRC=SSC1-&gt;RB.reg;DMA.CH3_INC[0]=0;DMA.CH3_SRC_EXT=0" value="0"/>
                    <radiobutton label="SSC2 Receive Buffer" lockon="DMA.CH3_SRC=SSC2-&gt;RB.reg;DMA.CH3_INC[0]=0;DMA.CH3_SRC_EXT=0" value="2"/>
                    <radiobutton label="user defined source" uielement="branch" value="1">
                      <edit label="enter source reference" define="DMA.CH3_SRC" svd="0" default="SSC1-&gt;RB.reg"/>
                      <checkbox label="declare as 'extern' in C-code" define="DMA.CH3_SRC_EXT" svd="0"/>
                      <checkbox label="Increment" define="DMA.CH3_INC[0]" svd="0"/>
                    </radiobutton>
                  </radio>
                </branch>
                <branch label="Destination">
                  <edit label="enter destination reference" define="DMA.CH3_DST" svd="0" default="enter destination reference"/>
                  <checkbox label="declare as 'extern' in C-code" define="DMA.CH3_DST_EXT" svd="0"/>
                  <checkbox label="Increment" define="DMA.CH3_INC[1]" svd="0"/>
                </branch>
                <spinbox label="Number of Transfers" define="DMA.CH3_NoOfTrans" svd="0" range="1;1024"/>
                <combo label="Transfere Size" define="DMA.CH3_SIZE" svd="0" default="label=Word (16-bit)">
                  <item label="Byte (8-bit)"/>
                  <item label="Word (16-bit)"/>
                  <item label="DWord (32-bit)"/>
                </combo>
                <math visible="false" define="DMA.CH3_SRC_PTR_OFFS" svd="0" formula="DMA.CH3_INC[0]&lt;1?0:(2^DMA.CH3_SIZE)*(DMA.CH3_NoOfTrans-1)"/>
                <math visible="false" define="DMA.CH3_DST_PTR_OFFS" svd="0" formula="DMA.CH3_INC[1]&lt;1?0:(2^DMA.CH3_SIZE)*(DMA.CH3_NoOfTrans-1)"/>
              </radiobutton>
              <radiobutton label="Scatter-Gather Mode" uielement="branch">
                <edit label="Enter Task List reference" define="DMA.CH3_TASK_SRC" svd="0" default="enter source reference"/>
                <spinbox label="Enter Number of Tasks" define="DMA.CH3_TASK_NoOfTasks" svd="0" range="0;256"/>
              </radiobutton>
            </radio>
            <checkbox label="Interrupt on DMA complete" define="DMA.SSC_RX_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_DMA=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCU.DMAIEN2.SSCRXIE" header="int_defines.h"/>
              <edit label="Call Back" define="DMA.SSC_RX_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
          </checkbox>
          <checkbox label="Ch4 - ADC1 Channel 0 (P2.0)" define="DMA.EN[4]" svd="0" uielement="branch">
            <radio label="DMA Transfer Mode" define="DMA.CH4_TRANS_MODE" svd="0">
              <radiobutton label="Basic Mode" uielement="branch">
                <branch label="Source">
                  <radio define="DMA.CH4_SRC_SEL" svd="0">
                    <radiobutton label="ADC1 Channel 0 (P2.0) Result Register" lockon="DMA.CH4_SRC=ADC1-&gt;RES_OUT0.reg;DMA.CH4_INC[0]=0;DMA.CH4_SRC_EXT=0"/>
                    <radiobutton label="user defined source" uielement="branch">
                      <edit label="enter source reference" define="DMA.CH4_SRC" svd="0" default="ADC1-&gt;RES_OUT0.reg"/>
                      <checkbox label="declare as 'extern' in C-code" define="DMA.CH4_SRC_EXT" svd="0"/>
                      <checkbox label="Increment" define="DMA.CH4_INC[0]" svd="0"/>
                    </radiobutton>
                  </radio>
                </branch>
                <branch label="Destination">
                  <edit label="enter destination reference" define="DMA.CH4_DST" svd="0" default="enter destination reference"/>
                  <checkbox label="declare as 'extern' in C-code" define="DMA.CH4_DST_EXT" svd="0"/>
                  <checkbox label="Increment" define="DMA.CH4_INC[1]" svd="0"/>
                </branch>
                <spinbox label="Number of Transfers" define="DMA.CH4_NoOfTrans" svd="0" range="1;1024"/>
                <combo label="Transfere Size" define="DMA.CH4_SIZE" svd="0" default="label=Word (16-bit)">
                  <item label="Byte (8-bit)"/>
                  <item label="Word (16-bit)"/>
                  <item label="DWord (32-bit)"/>
                </combo>
                <math visible="false" define="DMA.CH4_SRC_PTR_OFFS" svd="0" formula="DMA.CH4_INC[0]&lt;1?0:(2^DMA.CH4_SIZE)*(DMA.CH4_NoOfTrans-1)"/>
                <math visible="false" define="DMA.CH4_DST_PTR_OFFS" svd="0" formula="DMA.CH4_INC[1]&lt;1?0:(2^DMA.CH4_SIZE)*(DMA.CH4_NoOfTrans-1)"/>
              </radiobutton>
              <radiobutton label="Scatter-Gather Mode" uielement="branch">
                <edit label="Enter Task List reference" define="DMA.CH4_TASK_SRC" svd="0" default="enter source reference"/>
                <spinbox label="Enter Number of Tasks" define="DMA.CH4_TASK_NoOfTasks" svd="0" range="0;256"/>
              </radiobutton>
            </radio>
            <checkbox label="Interrupt on DMA complete" define="DMA.CH1_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_DMA=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCU.DMAIEN1.CH1IE" header="int_defines.h"/>
              <edit label="Call Back" define="DMA.CH1_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
          </checkbox>
          <checkbox label="Ch5 - ADC1 Channel 1 (P2.1/OpAmp)" define="DMA.EN[5]" svd="0" uielement="branch">
            <radio label="DMA Transfer Mode" define="DMA.CH5_TRANS_MODE" svd="0">
              <radiobutton label="Basic Mode" uielement="branch">
                <branch label="Source">
                  <radio define="DMA.CH5_SRC_SEL" svd="0">
                    <radiobutton label="ADC1 Channel 1 (P2.1/OpAmp) Result Register" lockon="DMA.CH5_SRC=ADC1-&gt;RES_OUT1.reg;DMA.CH5_INC[0]=0;DMA.CH5_SRC_EXT=0"/>
                    <radiobutton label="user defined source" uielement="branch">
                      <edit label="enter source reference" define="DMA.CH5_SRC" svd="0" default="ADC1-&gt;RES_OUT1.reg"/>
                      <checkbox label="declare as 'extern' in C-code" define="DMA.CH5_SRC_EXT" svd="0"/>
                      <checkbox label="Increment" define="DMA.CH5_INC[0]" svd="0"/>
                    </radiobutton>
                  </radio>
                </branch>
                <branch label="Destination">
                  <edit label="enter destination reference" define="DMA.CH5_DST" svd="0" default="enter destination reference"/>
                  <checkbox label="declare as 'extern' in C-code" define="DMA.CH5_DST_EXT" svd="0"/>
                  <checkbox label="Increment" define="DMA.CH5_INC[1]" svd="0"/>
                </branch>
                <spinbox label="Number of Transfers" define="DMA.CH5_NoOfTrans" svd="0" range="1;1024"/>
                <combo label="Transfere Size" define="DMA.CH5_SIZE" svd="0" default="label=Word (16-bit)">
                  <item label="Byte (8-bit)"/>
                  <item label="Word (16-bit)"/>
                  <item label="DWord (32-bit)"/>
                </combo>
                <math visible="false" define="DMA.CH5_SRC_PTR_OFFS" svd="0" formula="DMA.CH5_INC[0]&lt;1?0:(2^DMA.CH5_SIZE)*(DMA.CH5_NoOfTrans-1)"/>
                <math visible="false" define="DMA.CH5_DST_PTR_OFFS" svd="0" formula="DMA.CH5_INC[1]&lt;1?0:(2^DMA.CH5_SIZE)*(DMA.CH5_NoOfTrans-1)"/>
              </radiobutton>
              <radiobutton label="Scatter-Gather Mode" uielement="branch">
                <edit label="Enter Task List reference" define="DMA.CH5_TASK_SRC" svd="0" default="enter source reference"/>
                <spinbox label="Enter Number of Tasks" define="DMA.CH5_TASK_NoOfTasks" svd="0" range="0;256"/>
              </radiobutton>
            </radio>
            <checkbox label="Interrupt on DMA complete" define="DMA.CH2_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_DMA=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCU.DMAIEN1.CH2IE" header="int_defines.h"/>
              <edit label="Call Back" define="DMA.CH2_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
          </checkbox>
          <checkbox label="Ch6 - ADC1 Channel 2 (P2.2)" define="DMA.EN[6]" svd="0" uielement="branch">
            <radio label="DMA Transfer Mode" define="DMA.CH6_TRANS_MODE" svd="0">
              <radiobutton label="Basic Mode" uielement="branch">
                <branch label="Source">
                  <radio define="DMA.CH6_SRC_SEL" svd="0">
                    <radiobutton label="ADC1 Channel 2 (P2.2) Result Register" lockon="DMA.CH6_SRC=ADC1-&gt;RES_OUT2.reg;DMA.CH6_INC[0]=0;DMA.CH6_SRC_EXT=0"/>
                    <radiobutton label="user defined source" uielement="branch">
                      <edit label="enter source reference" define="DMA.CH6_SRC" svd="0" default="ADC1-&gt;RES_OUT2.reg"/>
                      <checkbox label="declare as 'extern' in C-code" define="DMA.CH6_SRC_EXT" svd="0"/>
                      <checkbox label="Increment" define="DMA.CH6_INC[0]" svd="0"/>
                    </radiobutton>
                  </radio>
                </branch>
                <branch label="Destination">
                  <edit label="enter destination reference" define="DMA.CH6_DST" svd="0" default="enter destination reference"/>
                  <checkbox label="declare as 'extern' in C-code" define="DMA.CH6_DST_EXT" svd="0"/>
                  <checkbox label="Increment" define="DMA.CH6_INC[1]" svd="0"/>
                </branch>
                <spinbox label="Number of Transfers" define="DMA.CH6_NoOfTrans" svd="0" range="1;1024"/>
                <combo label="Transfere Size" define="DMA.CH6_SIZE" svd="0" default="label=Word (16-bit)">
                  <item label="Byte (8-bit)"/>
                  <item label="Word (16-bit)"/>
                  <item label="DWord (32-bit)"/>
                </combo>
                <math visible="false" define="DMA.CH6_SRC_PTR_OFFS" svd="0" formula="DMA.CH6_INC[0]&lt;1?0:(2^DMA.CH6_SIZE)*(DMA.CH6_NoOfTrans-1)"/>
                <math visible="false" define="DMA.CH6_DST_PTR_OFFS" svd="0" formula="DMA.CH6_INC[1]&lt;1?0:(2^DMA.CH6_SIZE)*(DMA.CH6_NoOfTrans-1)"/>
              </radiobutton>
              <radiobutton label="Scatter-Gather Mode" uielement="branch">
                <edit label="Enter Task List reference" define="DMA.CH6_TASK_SRC" svd="0" default="enter source reference"/>
                <spinbox label="Enter Number of Tasks" define="DMA.CH6_TASK_NoOfTasks" svd="0" range="0;256"/>
              </radiobutton>
            </radio>
            <checkbox label="Interrupt on DMA complete" define="DMA.CH3_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_DMA=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCU.DMAIEN1.CH3IE" header="int_defines.h"/>
              <edit label="Call Back" define="DMA.CH3_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
          </checkbox>
          <checkbox label="Ch7 - ADC1 Channel 3 (P2.3)" define="DMA.EN[7]" svd="0" uielement="branch">
            <radio label="DMA Transfer Mode" define="DMA.CH7_TRANS_MODE" svd="0">
              <radiobutton label="Basic Mode" uielement="branch">
                <branch label="Source">
                  <radio define="DMA.CH7_SRC_SEL" svd="0">
                    <radiobutton label="ADC1 Channel 3 (P2.3) Result Register" lockon="DMA.CH7_SRC=ADC1-&gt;RES_OUT3.reg;DMA.CH7_INC[0]=0;DMA.CH7_SRC_EXT=0"/>
                    <radiobutton label="user defined source" uielement="branch">
                      <edit label="enter source reference" define="DMA.CH7_SRC" svd="0" default="ADC1-&gt;RES_OUT3.reg"/>
                      <checkbox label="declare as 'extern' in C-code" define="DMA.CH7_SRC_EXT" svd="0"/>
                      <checkbox label="Increment" define="DMA.CH7_INC[0]" svd="0"/>
                    </radiobutton>
                  </radio>
                </branch>
                <branch label="Destination">
                  <edit label="enter destination reference" define="DMA.CH7_DST" svd="0" default="enter destination reference"/>
                  <checkbox label="declare as 'extern' in C-code" define="DMA.CH7_DST_EXT" svd="0"/>
                  <checkbox label="Increment" define="DMA.CH7_INC[1]" svd="0"/>
                </branch>
                <spinbox label="Number of Transfers" define="DMA.CH7_NoOfTrans" svd="0" range="1;1024"/>
                <combo label="Transfere Size" define="DMA.CH7_SIZE" svd="0" default="label=Word (16-bit)">
                  <item label="Byte (8-bit)"/>
                  <item label="Word (16-bit)"/>
                  <item label="DWord (32-bit)"/>
                </combo>
                <math visible="false" define="DMA.CH7_SRC_PTR_OFFS" svd="0" formula="DMA.CH7_INC[0]&lt;1?0:(2^DMA.CH7_SIZE)*(DMA.CH7_NoOfTrans-1)"/>
                <math visible="false" define="DMA.CH7_DST_PTR_OFFS" svd="0" formula="DMA.CH7_INC[1]&lt;1?0:(2^DMA.CH7_SIZE)*(DMA.CH7_NoOfTrans-1)"/>
              </radiobutton>
              <radiobutton label="Scatter-Gather Mode" uielement="branch">
                <edit label="Enter Task List reference" define="DMA.CH7_TASK_SRC" svd="0" default="enter source reference"/>
                <spinbox label="Enter Number of Tasks" define="DMA.CH7_TASK_NoOfTasks" svd="0" range="0;256"/>
              </radiobutton>
            </radio>
            <checkbox label="Interrupt on DMA complete" define="DMA.CH4_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_DMA=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCU.DMAIEN1.CH4IE" header="int_defines.h"/>
              <edit label="Call Back" define="DMA.CH4_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
          </checkbox>
          <checkbox label="Ch8 - ADC1 Channel 4 (P2.4)" define="DMA.EN[8]" svd="0" uielement="branch">
            <radio label="DMA Transfer Mode" define="DMA.CH8_TRANS_MODE" svd="0">
              <radiobutton label="Basic Mode" uielement="branch">
                <branch label="Source">
                  <radio define="DMA.CH8_SRC_SEL" svd="0">
                    <radiobutton label="ADC1 Channel 4 (P2.4) Result Register" lockon="DMA.CH8_SRC=ADC1-&gt;RES_OUT4.reg;DMA.CH8_INC[0]=0;DMA.CH8_SRC_EXT=0"/>
                    <radiobutton label="user defined source" uielement="branch">
                      <edit label="enter source reference" define="DMA.CH8_SRC" svd="0" default="ADC1-&gt;RES_OUT4.reg"/>
                      <checkbox label="declare as 'extern' in C-code" define="DMA.CH8_SRC_EXT" svd="0"/>
                      <checkbox label="Increment" define="DMA.CH8_INC[0]" svd="0"/>
                    </radiobutton>
                  </radio>
                </branch>
                <branch label="Destination">
                  <edit label="enter destination reference" define="DMA.CH8_DST" svd="0" default="enter destination reference"/>
                  <checkbox label="declare as 'extern' in C-code" define="DMA.CH8_DST_EXT" svd="0"/>
                  <checkbox label="Increment" define="DMA.CH8_INC[1]" svd="0"/>
                </branch>
                <spinbox label="Number of Transfers" define="DMA.CH8_NoOfTrans" svd="0" range="1;1024"/>
                <combo label="Transfere Size" define="DMA.CH8_SIZE" svd="0" default="label=Word (16-bit)">
                  <item label="Byte (8-bit)"/>
                  <item label="Word (16-bit)"/>
                  <item label="DWord (32-bit)"/>
                </combo>
                <math visible="false" define="DMA.CH8_SRC_PTR_OFFS" svd="0" formula="DMA.CH8_INC[0]&lt;1?0:(2^DMA.CH8_SIZE)*(DMA.CH8_NoOfTrans-1)"/>
                <math visible="false" define="DMA.CH8_DST_PTR_OFFS" svd="0" formula="DMA.CH8_INC[1]&lt;1?0:(2^DMA.CH8_SIZE)*(DMA.CH8_NoOfTrans-1)"/>
              </radiobutton>
              <radiobutton label="Scatter-Gather Mode" uielement="branch">
                <edit label="Enter Task List reference" define="DMA.CH8_TASK_SRC" svd="0" default="enter source reference"/>
                <spinbox label="Enter Number of Tasks" define="DMA.CH8_TASK_NoOfTasks" svd="0" range="0;256"/>
              </radiobutton>
            </radio>
            <checkbox label="Interrupt on DMA complete" define="DMA.CH5_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_DMA=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCU.DMAIEN1.CH5IE" header="int_defines.h"/>
              <edit label="Call Back" define="DMA.CH5_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
          </checkbox>
          <checkbox label="Ch9 - ADC1 Channel 5 / CCU6" define="DMA.EN[9]" svd="0" uielement="branch">
            <combo label="Trigger Select" define="SCU.DMASRCSEL.T12ZM_DMAEN" default="label=ADC1 Channel 5 (P2.5)" header="scu_defines.h">
              <item label="ADC1 Channel 5 (P2.5)" override="value1"/>
              <item label="CCU6-Timer12 Zero Match" override="value2" lockon="DMA.CH9_SRC_SEL=1"/>
            </combo>
            <radio label="DMA Transfer Mode" define="DMA.CH9_TRANS_MODE" svd="0">
              <radiobutton label="Basic Mode" uielement="branch">
                <branch label="Source">
                  <radio define="DMA.CH9_SRC_SEL" svd="0">
                    <radiobutton label="ADC1 Channel 5 (P2.5) Result Register" lockon="DMA.CH9_SRC=ADC1-&gt;RES_OUT5.reg;DMA.CH9_INC[0]=0;DMA.CH9_SRC_EXT=0"/>
                    <radiobutton label="user defined source" uielement="branch">
                      <edit label="enter source reference" define="DMA.CH9_SRC" svd="0" default="ADC1-&gt;RES_OUT5.reg"/>
                      <checkbox label="declare as 'extern' in C-code" define="DMA.CH9_SRC_EXT" svd="0"/>
                      <checkbox label="Increment" define="DMA.CH9_INC[0]" svd="0"/>
                    </radiobutton>
                  </radio>
                </branch>
                <branch label="Destination">
                  <edit label="enter destination reference" define="DMA.CH9_DST" svd="0" default="enter destination reference"/>
                  <checkbox label="declare as 'extern' in C-code" define="DMA.CH9_DST_EXT" svd="0"/>
                  <checkbox label="Increment" define="DMA.CH9_INC[1]" svd="0"/>
                </branch>
                <spinbox label="Number of Transfers" define="DMA.CH9_NoOfTrans" svd="0" range="1;1024"/>
                <combo label="Transfere Size" define="DMA.CH9_SIZE" svd="0" default="label=Word (16-bit)">
                  <item label="Byte (8-bit)"/>
                  <item label="Word (16-bit)"/>
                  <item label="DWord (32-bit)"/>
                </combo>
                <math visible="false" define="DMA.CH9_SRC_PTR_OFFS" svd="0" formula="DMA.CH9_INC[0]&lt;1?0:(2^DMA.CH9_SIZE)*(DMA.CH9_NoOfTrans-1)"/>
                <math visible="false" define="DMA.CH9_DST_PTR_OFFS" svd="0" formula="DMA.CH9_INC[1]&lt;1?0:(2^DMA.CH9_SIZE)*(DMA.CH9_NoOfTrans-1)"/>
              </radiobutton>
              <radiobutton label="Scatter-Gather Mode" uielement="branch">
                <edit label="Enter Task List reference" define="DMA.CH9_TASK_SRC" svd="0" default="enter source reference"/>
                <spinbox label="Enter Number of Tasks" define="DMA.CH9_TASK_NoOfTasks" svd="0" range="0;256"/>
              </radiobutton>
            </radio>
            <checkbox label="Interrupt on DMA complete" define="DMA.CH6_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_DMA=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCU.DMAIEN1.CH6IE" header="int_defines.h"/>
              <edit label="Call Back" define="DMA.CH6_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
          </checkbox>
          <checkbox label="Ch10 - ADC1 Channel 6 (VDH)" define="DMA.EN[10]" svd="0" uielement="branch">
            <radio label="DMA Transfer Mode" define="DMA.CH10_TRANS_MODE" svd="0">
              <radiobutton label="Basic Mode" uielement="branch">
                <branch label="Source">
                  <radio define="DMA.CH10_SRC_SEL" svd="0">
                    <radiobutton label="ADC1 Channel 6 (VDH) Result Register" lockon="DMA.CH10_SRC=ADC1-&gt;RES_OUT6.reg;DMA.CH10_INC[0]=0;DMA.CH10_DST_EXT=0"/>
                    <radiobutton label="user defined source" uielement="branch">
                      <edit label="enter source reference" define="DMA.CH10_SRC" svd="0" default="ADC1-&gt;RES_OUT6.reg"/>
                      <checkbox label="declare as 'extern' in C-code" define="DMA.CH10_SRC_EXT" svd="0"/>
                      <checkbox label="Increment" define="DMA.CH10_INC[0]" svd="0"/>
                    </radiobutton>
                  </radio>
                </branch>
                <branch label="Destination">
                  <edit label="enter destination reference" define="DMA.CH10_DST" svd="0" default="enter destination reference"/>
                  <checkbox label="declare as 'extern' in C-code" define="DMA.CH10_DST_EXT" svd="0"/>
                  <checkbox label="Increment" define="DMA.CH10_INC[1]" svd="0"/>
                </branch>
                <spinbox label="Number of Transfers" define="DMA.CH10_NoOfTrans" svd="0" range="1;1024"/>
                <combo label="Transfere Size" define="DMA.CH10_SIZE" svd="0" default="label=Word (16-bit)">
                  <item label="Byte (8-bit)"/>
                  <item label="Word (16-bit)"/>
                  <item label="DWord (32-bit)"/>
                </combo>
                <math visible="false" define="DMA.CH10_SRC_PTR_OFFS" svd="0" formula="DMA.CH10_INC[0]&lt;1?0:(2^DMA.CH10_SIZE)*(DMA.CH10_NoOfTrans-1)"/>
                <math visible="false" define="DMA.CH10_DST_PTR_OFFS" svd="0" formula="DMA.CH10_INC[1]&lt;1?0:(2^DMA.CH10_SIZE)*(DMA.CH10_NoOfTrans-1)"/>
              </radiobutton>  
              <radiobutton label="Scatter-Gather Mode" uielement="branch">
                <edit label="Enter Task List reference" define="DMA.CH10_TASK_SRC" svd="0" default="enter source reference"/>
                <spinbox label="Enter Number of Tasks" define="DMA.CH10_TASK_NoOfTasks" svd="0" range="0;256"/>
              </radiobutton>
            </radio>
            <checkbox label="Interrupt on DMA complete" define="DMA.CH7_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_DMA=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCU.DMAIEN1.CH7IE" header="int_defines.h"/>
              <edit label="Call Back" define="DMA.CH7_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
          </checkbox>
          <checkbox label="Ch11 - ADC1 Channel 7 / CCU6" define="DMA.EN[11]" svd="0" uielement="branch">
            <combo label="Trigger Select" define="SCU.DMASRCSEL.T12PM_DMAEN" header="scu_defines.h">
              <item label="ADC1 Channel 7 (P2.7)" override="value1" lockon="DMA.CH11_SRC=ADC1-&gt;RES_OUT7.reg;DMA.CH11_INC[0]=0;DMA.CH11_SRC_EXT=0"/>
              <item label="CCU6-Timer12 Period Match" override="value2"/>
            </combo>
            <radio label="DMA Transfer Mode" define="DMA.CH11_TRANS_MODE" svd="0">
              <radiobutton label="Basic Mode" uielement="branch">
                <branch label="Source">
                  <edit label="enter source reference" define="DMA.CH11_SRC" svd="0" default="enter source reference"/>
                  <checkbox label="declare as 'extern' in C-code" define="DMA.CH11_SRC_EXT" svd="0"/>
                  <checkbox label="Increment" define="DMA.CH11_INC[0]" svd="0"/>
                </branch>
                <branch label="Destination">
                  <edit label="enter destination reference" define="DMA.CH11_DST" svd="0" default="enter destination reference"/>
                  <checkbox label="declare as 'extern' in C-code" define="DMA.CH11_DST_EXT" svd="0"/>
                  <checkbox label="Increment" define="DMA.CH11_INC[1]" svd="0"/>
                </branch>
                <spinbox label="Number of Transfers" define="DMA.CH11_NoOfTrans" svd="0" range="1;1024"/>
                <combo label="Transfere Size" define="DMA.CH11_SIZE" svd="0" default="label=Word (16-bit)">
                  <item label="Byte (8-bit)"/>
                  <item label="Word (16-bit)"/>
                  <item label="DWord (32-bit)"/>
                </combo>
                <math visible="false" define="DMA.CH11_SRC_PTR_OFFS" svd="0" formula="DMA.CH11_INC[0]&lt;1?0:(2^DMA.CH11_SIZE)*(DMA.CH11_NoOfTrans-1)"/>
                <math visible="false" define="DMA.CH11_DST_PTR_OFFS" svd="0" formula="DMA.CH11_INC[1]&lt;1?0:(2^DMA.CH11_SIZE)*(DMA.CH11_NoOfTrans-1)"/>
              </radiobutton>
              <radiobutton label="Scatter-Gather Mode" uielement="branch">
                <edit label="Enter Task List reference" define="DMA.CH11_TASK_SRC" svd="0" default="enter source reference"/>
                <spinbox label="Enter Number of Tasks" define="DMA.CH11_TASK_NoOfTasks" svd="0" range="0;256"/>
              </radiobutton>
            </radio>
            <checkbox label="Interrupt on DMA complete" define="DMA.CH8_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_DMA=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCU.DMAIEN1.CH8IE" header="int_defines.h"/>
              <edit label="Call Back" define="DMA.CH8_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
          </checkbox>
          <checkbox label="Ch12 - GPT12E / TIMER3" define="DMA.EN[12]" svd="0" uielement="branch">
            <combo label="Trigger Select" define="SCU.DMASRCSEL2.GPT12_DMAEN" header="scu_defines.h">
              <item label="TIMER3 Mode 1b" override="value1"/>
              <item label="GPT1-T3OUT" override="value2"/>
              <item label="TIMER3 Mode 1b, CCU6-Timer12 Zero Match" override="value3"/>
              <item label="GPT1-T3OUT, CCU6-Timer12 Zero Match" override="value4"/>
            </combo>
            <radio label="DMA Transfer Mode" define="DMA.CH12_TRANS_MODE" svd="0">
              <radiobutton label="Basic Mode" uielement="branch">
                <branch label="Source">
                  <edit label="enter source reference" define="DMA.CH12_SRC" svd="0" default="enter source reference"/>
                  <checkbox label="declare as 'extern' in C-code" define="DMA.CH12_SRC_EXT" svd="0"/>
                  <checkbox label="Increment" define="DMA.CH12_INC[0]" svd="0"/>
                </branch>
                <branch label="Destination">
                  <edit label="enter destination reference" define="DMA.CH12_DST" svd="0" default="enter destination reference"/>
                  <checkbox label="declare as 'extern' in C-code" define="DMA.CH12_DST_EXT" svd="0"/>
                  <checkbox label="Increment" define="DMA.CH12_INC[1]" svd="0"/>
                </branch>
                <spinbox label="Number of Transfers" define="DMA.CH12_NoOfTrans" svd="0" range="1;1024"/>
                <combo label="Transfere Size" define="DMA.CH12_SIZE" svd="0" default="label=Word (16-bit)">
                  <item label="Byte (8-bit)"/>
                  <item label="Word (16-bit)"/>
                  <item label="DWord (32-bit)"/>
                </combo>
                <math visible="false" define="DMA.CH12_SRC_PTR_OFFS" svd="0" formula="DMA.CH12_INC[0]&lt;1?0:(2^DMA.CH12_SIZE)*(DMA.CH12_NoOfTrans-1)"/>
                <math visible="false" define="DMA.CH12_DST_PTR_OFFS" svd="0" formula="DMA.CH12_INC[1]&lt;1?0:(2^DMA.CH12_SIZE)*(DMA.CH12_NoOfTrans-1)"/>
              </radiobutton>
              <radiobutton label="Scatter-Gather Mode" uielement="branch">
                <edit label="Enter Task List reference" define="DMA.CH12_TASK_SRC" svd="0" default="enter source reference"/>
                <spinbox label="Enter Number of Tasks" define="DMA.CH12_TASK_NoOfTasks" svd="0" range="0;256"/>
              </radiobutton>
            </radio>
            <checkbox label="Interrupt on DMA complete" define="DMA.GPT12E_INT_EN" svd="0" header="isr_defines.h" lockon="CPU.NVIC_ISER0.Int_DMA=1" uielement="branch">
              <checkbox label="Enable Interrupt" define="SCU.DMAIEN2.GPT12IE" header="int_defines.h"/>
              <edit label="Call Back" define="DMA.GPT12E_CALLBACK" svd="0" header="isr_defines.h" default="place_your_function_call_back_here"/>
            </checkbox>
          </checkbox>
        </checkbox>
      </header>
    </treecontainer>
  </tabcontainer>
</ifxmlcfg>
